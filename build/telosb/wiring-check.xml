<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b527ccf24b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b527cd062b0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b527cd062b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b527ced7590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="MasterCtrl" scoped="" ref="0x2b527ccf4020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527cee32c0"/></to>
    </wire>
    <wire loc="28:TDMAMasterC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2b527cee32c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527cedde60"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="MasterRcv" scoped="" ref="0x2b527cd09850"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527cee3dd0"/></to>
    </wire>
    <wire loc="32:TDMAMasterC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527cee3dd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e589cc0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e2d5dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e272b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e291750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e235080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e139130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e015620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527def1820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d82b7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527ed84020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527db2f020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d7674a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d50cbc0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d470780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527eadaca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527cf362a0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b527ced7c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b527c8083a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b527c8083a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b527cc57140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b527ceca6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527cd01650"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527cd01650"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527cd1c8c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b527cecadc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b527cd19020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b527cd1abf0"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b527cd1abf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527cd3bb60"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b527cd19700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527cd1ba20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b527cd19de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d344c40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527cd3bb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527cd41940"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b527cd312c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b527cd40020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b527c9b1080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b527cd3f360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b527cd81730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce3f6d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b527cd91020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce5cb30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b527cd9a700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce45160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b527cdc2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce67cb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b527cd7fc10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce46480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b527cda6020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce67020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b527cdbfa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce76cb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b527cdad5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce87220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b527cd82d60"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce059d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b527cda2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce512f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b527cda83e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce52610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b527cd905a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce53220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b527cd99700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce617a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b527cdc1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce852f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b527cdb1be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce716d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b527cda0a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce62ac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b527cd70060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cdf0c80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b527cda6da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce86610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b527cd88220"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce47020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b527cdaca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce7f6d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b527cd947b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce4da90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b527cda1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce6f7a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b527cd9ce60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce4ede0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b527cda71f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce70ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b527cdc0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce7d7a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b527cdae0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce69b30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b527cda5b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce7eac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b527cda3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527ce5acb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b527cda4a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce76020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b527cda9570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b527ce5a020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b527cdaa020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b527ce78b30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b527cdeec20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cdee5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b527cded2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b527ce96aa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b527cded940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b527ce93260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce4c930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cdf0c80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce4a020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cdee5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce44020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cdf0c80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce427a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cdee5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce60610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cdf0c80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce5fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cdee5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b527cde6c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b527cde52f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b527ce939f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b527cde5940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b527ce92240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce59b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce562f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce75160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce747a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce6e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce6dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce66b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce642f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce84160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce837a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce7c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce7bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527ce9bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b527ce992f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527cc55040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b527cc6f5d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b527c8762d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527e589cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d6a7210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:TDMAMasterC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b527cedb120"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d6aa020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527d6aa020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d6c7680"/></to>
    </wire>
    <wire loc="16:TDMAMasterC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2b527cef2470"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b527e3d3590"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b527e3d3590"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b527e437210"/></to>
    </wire>
    <wire loc="17:TDMAMasterC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2b527cefadf0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b527e3d7320"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:TDMAMasterC.nc">
      <from><interface-ref name="JoinRcv" scoped="" ref="0x2b527cef14e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e505800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527e505800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d6a7210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:TDMAMasterC.nc">
      <from><interface-ref name="JoinSnd" scoped="" ref="0x2b527cf0e6e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527e501dc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527e501dc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527efefd90"/></to>
    </wire>
    <wire loc="25:TDMAMasterC.nc">
      <from><interface-ref name="SlotTimer" scoped="" ref="0x2b527cf0bcf0"/></from>
      <to><interface-ref name="SlotTimer" scoped="" ref="0x2b527e57a550"/></to>
    </wire>
    <wire loc="17:SlotTimerC.nc">
      <from><interface-ref name="SlotTimer" scoped="" ref="0x2b527e57a550"/></from>
      <to><interface-ref name="SlotTimer" scoped="" ref="0x2b527e577bb0"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b527cf38440"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527cf31a30"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2b527cf3c5a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527cf37a30"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b527cf37a30"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527d4817a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b527cf311e0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b527cf4c310"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b527cf4c310"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b527d446060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b527d471430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b527cf30960"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b527d446060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b527cfa9370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b527cf401e0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b527d4470c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b527d4470c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b527cfadd70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527d446800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527d47e080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527d47e6f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527d44ac00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527d44ac00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527cfaf430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d4498f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527e722440"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527e722440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d3ac2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527cfa7450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527d446800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527e71c5a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527cfad020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b527cfa81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527e723760"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527e723760"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527d3ad020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527cfcc960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527e71dda0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527e71dda0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b527d3ae1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527cfad020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d0443e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b527cfa9370"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b527d042dc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b527cfadd70"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b527d044cd0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527cfaf430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527d0455b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527d040570"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527cfa7450"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b527d041710"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b527cfa81d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527d067740"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527cfcc960"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b527d040be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527d057d30"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527d057d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b527d07d550"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527d066180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527d3209a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527d3209a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b527d31a9d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527d0642c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d3332a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527d054860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b527d078130"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d057500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d053bc0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b527d06c860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2b527d1543f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b527d1543f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d265100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b527d076800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2b527d1833f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b527d1833f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d261d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b527d06a800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2b527d1813f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b527d1813f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d25c740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b527d068800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2b527d17d3f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b527d17d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d22d740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b527d094800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2b527d17f3f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b527d17f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d232d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b527d101cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1bcd10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b527d11dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1f0740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b527d1623d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d216740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b527d16f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d292d10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b527d1603f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d211100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b527d119cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d21bd10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b527d133020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d21f740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b527d14f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d257100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b527d13f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d29b740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b527d15a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d208740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b527d17b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d279d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b527d1983f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d28d740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b527d0fbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1dfd10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b527d1583f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d202100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b527d0f7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1d5100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b527d113cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d20dd10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b527d12d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d244740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b527d149020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d27d100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b527d168020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d28d740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b527d105cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1c5740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b527d121cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1fa260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b527d10dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d232d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b527d1643f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d216740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b527d1753e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d26bd10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b527d19a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d28d740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b527d139cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d2283f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b527d123020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d261d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b527d143020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d26f100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b527d1733e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d29b740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b527d1563e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d236740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b527d0ffcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1b7740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b527d11bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1eb100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b527d147020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d279d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b527d117cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d216740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b527d131020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d24e100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b527d14d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d252d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b527d13d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d296100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b527d0dce10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1ce3f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b527d0f5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1d1d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b527d111cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d208740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b527d12b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d23f100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b527d1793e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d274740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b527d16d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d28d740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b527d127020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d236740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b527d103cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1c0100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b527d11fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1f6d10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b527d10bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d22d740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b527d1713e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d296100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b527d135020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d224e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b527d151020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d25c740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b527d141020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d26bd10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b527d0fdcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1e3100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b527d145020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d274740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b527d0f9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1da740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b527d115cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d211100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b527d12f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d24ad10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b527d14b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d282740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b527d13b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d292d10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b527d108cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1cae00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b527d0f3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d1ff740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b527d10fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d202100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b527d129020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d23bd10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b527d15c3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d20dd10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b527d1773e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d26f100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b527d15e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d20dd10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b527d125020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d265100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b527d16b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d292d10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b527d1963f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d27d100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b527d166060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b527d21bd10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b527d31a9d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527d314b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d33dc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527d344c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d336c40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b527d32b910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b527d347360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b527d347360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d340710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b527d331b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b527d3466a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b527d3466a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d3641d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b527d330e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b527d3459c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b527d3459c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d360d70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d368930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2b527d14f020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d363480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2b527d14d020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d35e020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2b527d14b020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527e721440"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527d057d30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527e722be0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d3acad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d3acad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d440400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d3ab8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527e71c5a0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d3ac2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d441020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d441020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ead53a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b527d3ae1d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b527d3a9b60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527d3ad020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527d443210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527d443210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527ead6540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d440400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527ead48b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b527d3a8c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527d054860"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d440cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d3ab8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d395a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d440400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527d4629d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527d4417a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527d4417a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527ead5b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d43bb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d057500"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527ead3210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d440cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b527ead39d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b527ead9330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b527ead1c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527eb4b3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d43bb20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b527eb4bb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b527d462400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527eb4a0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527d4629d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527eb4ad00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d461720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b527d470de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b527d471430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b527d465020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b527cd062b0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b527d465740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d49b320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527d49b320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d5092f0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527d5092f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d539c40"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527d49a370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527d4b37d0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527d498020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527d510400"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527d499530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d5136c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d4b4350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d50f060"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527d497020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d513cb0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527d50cbc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d5395f0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527d5052b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d4b4cd0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527d50f9f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527d508e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527d50e760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d508320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b527d500970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b527d6776c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527d508e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527d65fde0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527d508320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d65f6c0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b527d65ec20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b527d500970"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527d531430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d5052b0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527d65c920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d5052b0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527d654dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d5052b0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b527d65d590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b527d535080"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b527d65de80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b527d532a40"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b527d527410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b527d658e10"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b527d52db80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527cf37a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b527d655e40"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b527cf401e0"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b527d5966e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b527d54a660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b527d599c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b527d592a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b527d65a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b527d65a800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527d6c7680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d6e9b80"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527d6a9050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527d6c67f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527d6c67f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527e386020"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b527d6a7df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b527d6c4880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b527d6c4880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b527e385df0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527d6a6450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527d6c1760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527d6c1760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527e382a80"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527d6999e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e069550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e069550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e0c9a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6d48a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6b6bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6b6bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6db080"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527d6a7210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d6c5b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527d6c5b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e385210"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6a4800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6bf810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6bf810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6dc020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6c2020"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527d6c2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527e383470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527d698af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e066660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e066660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e0c5af0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527d6e9b80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527e33fb80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b527d6f3d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b527e3808b0"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b527d6e6d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b527e381ce0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527d6b8970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527d6dd140"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527d6dd140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6db080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b527e33f080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6dc020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b527e06c6e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b527d6f1020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b527d6dbb70"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b527d6dbb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b527e32b020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527d6b5a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527d6dc9d0"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527d6dc9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527e06ba70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b527e3770f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527d6e3d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e37f860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b527d6dfd10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b527d6dfd10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b527e2bbca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527e37e690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b527d6dea90"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b527d6dea90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b527e2baa50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b527e37a4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b527de72b30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e37ece0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e060d20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e37db70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e0ca640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b527e37c610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b527d770b80"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b527d770b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b527d766970"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b527e3791f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b527d6d5330"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b527d6d5330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b527d7177e0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527e377d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527e33fb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b527e33cd90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527e06ba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527e0c9020"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b527e32b020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b527e329410"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b527e2bbca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b527e2b0a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b527e33f080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b527e3382d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b527d6e0820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e2bb5f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527e2bb5f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b527e2b0370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b527e06c6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b527e0cbc50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527d6e3d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527e2bdcb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527e2bdcb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527e2b37b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b527d6e2a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e2bc960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527e2bc960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b527e2b24d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b527d6df020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b527e2b9170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b527e2b9170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b527e2ae020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b527e2baa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b527e2af840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b527e33cd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d6d7390"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527d6d7390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d71be80"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e2b86b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e296220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527e296220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e294a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e295020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e32e350"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527e32e350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b527e32bd70"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e32bd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e343cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527e343cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b527e33d860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e33d860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527d6d7e80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527d6d7e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527d718990"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527e2b8020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e340980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527e340980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b527e33c690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527e33c690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e27aaa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527e27aaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e276e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527e277950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d6d6b40"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527d6d6b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e01a7c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527e01a7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e013020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527d716640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527d780720"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527d780720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527d767b10"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b527d70db50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b527d77ba60"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b527d77ba60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b527d764740"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b527d712020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527defc6d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b527d712020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527e01d5c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b527e01d5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527e015ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b527defc6d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527def0020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b527d704d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b527def9020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b527def9020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527def08c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b527d70cae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b527def9cb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b527def9cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b527deef650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527d700020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527d6f9660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b527d703020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b527e23ba20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b527e23ba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b527e234a20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b527d73ce40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527e23daa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b527e23daa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527db33280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527d7037f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b527d7379e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b527d738a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b527d739a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b527d76e020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b527d7adb40"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b527d7a2d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b527d828220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b527d828220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b527d8212e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b527d79e060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b527d916370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b527d916370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d9091b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b527d79d380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b527d913ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b527d913ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d94a710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b527d79c6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b527d910380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b527d910380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d941d70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b527d79a0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b527d97e210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b527d97e210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b527da53a30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b527d7ce1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527ddcfe20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527ddcfe20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dab1960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b527d7cd2e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b527ddcb7b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b527ddcb7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b527d7cd9f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b527ddcaae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b527ddcaae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b527d7cfa80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b527ddcdad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b527ddcdad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527d7cf160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527ddc9160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527ddc9160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b527d78ab00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b527ddc1870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b527ddc1870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b527d7913d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b527ddbe880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b527ddbe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b527d791c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b527ddbd0a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b527ddbd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527d78c5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527ddc5e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527ddc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527d789020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527ddc4670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527ddc4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b527d796520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b527de15500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b527de15500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b527d78da90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b527de16ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b527de16ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b527d7898e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b527ddc2e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b527ddc2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b527d7d11c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b527ddc4e50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b527ddc4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b527d7d1a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b527ddc3e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b527ddc3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b527d7ccd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527de03a80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527de03a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dab1960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b527d7cc020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527de3b9e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527de3b9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dab1960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b527d792810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b527de72b30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b527d7aa020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b527de71d30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b527de71d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b527de57310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b527d7c1820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b527d7c2940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527d82b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527d823a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527d823a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527ebe72c0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b527d8212e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527ebe7b10"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527ebe72c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527ebe03d0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527ebe7b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527ebd9020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527ebe03d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527ebc4ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b527ebd3780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527ebe0c20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527ebe0c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527ebc35b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527ebd53d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527d898020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527d898020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527d8e05f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ebbf710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ebc99d0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ebc99d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ebbeda0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ebc7120"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ebc7120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ebbc0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ebc6440"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ebc6440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b527cd91020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b527cda9570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b527cdb1be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b527cda71f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b527cdae0c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b527cda6020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b527cdad5a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b527cda6da0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b527cdaca50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b527cda5b80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b527cdaa020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b527cda4a20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b527d8c4950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b527d31a9d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b527d9156a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d955d70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b527d9149d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d94fb70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b527d9170e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d90e710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b527d911020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527d9451b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d90d930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b527d101cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d958480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2b527d133020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d953020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b527d103cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d94ede0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b527d0dce10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d949930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2b527d12b020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d944480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b527d135020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d93f020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2b527d12d020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b527d9795a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b527d965020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b527d97ee30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b527da98a70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d965ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2b527cd905a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2b527d963da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2b527cda2a20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2b527d962c20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b527d135020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b527daa7610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b527d9a5c40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b527d9a5c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b527d991a30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b527da97610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b527d9a8e70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b527d9a8e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b527d9989d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b527d99bbc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2b527d987bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b527d9a2bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2b527d98ea30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b527d9a0bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b527d98ca30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b527d9abd20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2b527d994a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b527d99dbc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b527d989a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b527d9a4bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2b527d990a30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b527d99abc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2b527d986bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b527d99fbc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2b527d98ba30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b527d9a6c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b527d993a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b527d99cc40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2b527d988bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b527d9a3bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2b527d98fa30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b527d9a1bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2b527d98da30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b527d9acdc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2b527d995a30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b527d99ebc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2b527d98aa30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b527ddcb160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b527ddbf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b527de1c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b527ddbe0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b527de11500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b527de13500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b527ddca490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b527de19880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527de14500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b527ddba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b527ddbb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527ddcea90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daae680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daae680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daa8930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527ddc9e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b527ddc8490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527de18c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b527ddc8be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527de14ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b527de190a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b527ddc3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b527de1a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b527de1c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b527de1a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b527de12ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b527de13ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b527ddbb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b527de1b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b527de15ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b527ddbd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b527de11ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b527ddcd480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b527ddc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b527ddc2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b527de1d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b527de1d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b527ddbf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b527ddc72f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b527ddc5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527ddc97b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527de16500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b527de12500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b527ddba0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b527de1b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b527ddcbe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b527ddbc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b527ddc7940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b527ddbc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b527de180a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b527de0f9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527dafabb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daf7020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daf7db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527dab1960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dafb810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daf6ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b527daf1020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527db38770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b527db38770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527db33280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b527daf5400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527db6ec40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527db6ec40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527ecbb770"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b527daf2080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b527db6d8f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b527db6d8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b527ecb9be0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b527dae9680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b527dd91020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b527dd91020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b527ecb8d70"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527daf1df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b527dae4120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b527db33280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527db2fb70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b527ecb8d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b527db58850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b527ecb9be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b527db59020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527ecbb770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527db5c430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ecb9440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ecb0d90"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ecb0d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527dce72c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b527db59020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b527dbb0a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b527ecb82b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b527db596a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b527db596a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b527dbaf060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b527db56a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b527ecb75a0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527eca15d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527db5b6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b527db57690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527ecb0140"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527ecb0140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dce8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527dbae2a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527ecaa760"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527ecaa760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b527dceb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527db5b6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dbb0250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b527db58850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b527dbafc50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527db5c430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dbb1470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b527dc073e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b527db56a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b527dc085b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b527db57690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527dc02480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527dbae2a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b527dc07a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527dbf8020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527dbf8020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b527dbf2c70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527dc02c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2b527dc002f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b527dbf35e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527dbea150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527dbf4d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b527dbeb780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b527dc18bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b527d1643f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b527dc16b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2b527d1603f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b527dc14b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b527d15e3f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b527dc12b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2b527d1583f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b527dc10b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2b527d15a3f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2b527dc1ed10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b527dcc8430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b527eca9020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527dce93f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b527eca9630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b527dcd4540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b527dcd4540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b527dcc8430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527ecafd40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527dbf8020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527ecaf5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dce7ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dce7ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dcddc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dce68a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527eca15d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527dce72c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527dcde850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b527dcde850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ed806c0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b527dceb4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b527dce4060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527dce8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dcdfa80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527dcdfa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527ed81850"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527dce93f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527dce4990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dcddc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527ed7fa70"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dcdc570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dce68a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dce2e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dcddc30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b527dce2060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527dbf4d10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b527dce2840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b527dbf35e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527dcdd020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527ed80e40"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527ed7e400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dcdc570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b527ed7ebc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b527ed84630"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b527ed7cde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2b527dd20250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b527dbf2c70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b527dd1cd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b527d1643f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b527dd1acb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b527d15e3f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b527ddf6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b527de01da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527ddfab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b527ddf4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b527ddede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b527ddf4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b527de442f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b527de462f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b527ddff120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b527de4c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527de482f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b527ddf9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b527ddf7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b527ddee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b527ddf0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b527ddf3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527de02760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daae680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527ddfdaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b527ddfc120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527de4ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b527ddfc870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527de48ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527ddffdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b527de4de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b527ddf7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527ddf9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b527de01750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b527de4ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b527de50670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b527de4d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b527de45ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b527de46ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b527ddef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b527de50e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b527de49ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b527ddf2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b527de44ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b527de01100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b527ddfa370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b527ddf6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b527ddeee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b527ddf3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b527dded670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b527ddf5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b527de00450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b527ddf5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b527ddfb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b527ddfbcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b527de492f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b527de4aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527ddfd450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527de4a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b527de452f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b527ddefe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b527de4e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b527de00aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b527ddff770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b527ddf2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b527ddfb670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b527ddf0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b527de4ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b527de437a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b527de2ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b527de39da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527de31b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b527de2b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b527de24e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b527de2be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b527de7b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b527de7e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b527de36120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b527de20670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527de7f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b527de30c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b527de2fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b527de25670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b527de28e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b527de2a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527de3a760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daae680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527de35aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b527de34120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527de1fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b527de34870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527de7fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527de36dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b527de21e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b527de2f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527de30480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b527de39750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b527de22e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b527de23670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b527de21670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b527de7dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b527de7ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b527de27670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b527de23e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b527de80ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b527de29670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b527de7bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b527de39100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b527de31370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b527de2e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b527de25e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b527de2ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b527de24670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b527de2d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b527de37450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b527de2de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b527de32020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b527de32cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b527de802f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b527de81ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527de35450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527de812f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b527de7d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b527de27e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b527de22670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b527de37aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b527de36770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b527de29e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b527de32670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b527de28670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b527de20e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b527de7a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b527de548c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b527deae020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b527deae020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b527dea7210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b527dea3cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b527de93020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b527de93020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b527de91490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2b527dea65b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b527df12a20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b527de938c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2b527de945a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2b527de945a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b527df109e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b527de89b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b527decf020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b527decf020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b527decdd20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b527de91d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b527de938c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527debd260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b527deb9890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b527deb9890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527df19060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527df17190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2b527cd70060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527df0fc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b527d121cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b527def59f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b527deee5e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b527def7190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b527deeed70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b527deed7f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b527d828220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b527df4b500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b527d9170e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b527df44820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b527d916370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b527df43b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b527d911020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b527df4c880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b527d9795a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b527df41020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dfe3c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527dfe3c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dab1960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527df41d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527dfe28f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527dfe28f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daae680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b527df3e6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b527dfe12f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b527dfe12f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b527df3ede0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b527dfdfcc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b527dfdfcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b527df3d530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b527dfde370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b527dfde370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527df3dc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527dfddd00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527dfddd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b527df3fe00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b527dfd7c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b527dfd7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b527df40780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b527dfbe7a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b527dfbe7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527df3f550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527dfc32f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527dfc32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527df3c3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527dfd8480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527dfd8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b527df3b5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b527dfd5e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b527dfd5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b527df3a020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b527dfd3670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b527dfd3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b527df3ce80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b527dfdb7b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b527dfdb7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b527df389c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b527dfc1ad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b527dfc1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b527df3a890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b527dfc22f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b527dfc22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b527df38130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b527dfc2ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b527dfc2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b527df33d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b527e01ddf0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b527e01ddf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b527e014550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527dee9a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527df529a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b527df517c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e069550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527df46b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e062480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e062480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e0c18b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527df366c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b527dfd6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b527dfdf020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527dfd9c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b527dfcce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b527dfd3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b527dfc02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b527dfc8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b527dfd8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b527dfce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b527dfd0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b527dfd2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b527dfdc370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527dfc7a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b527dfdcac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527dfc3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527dfdd060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b527dfc9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b527dfd7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b527dfe1940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b527dfcae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b527dfcb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b527dfc9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b527dfcf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b527dfcbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b527dfc4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b527dfd1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b527dfc0ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b527dfd9490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b527dfd6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b527dfcee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b527dfd2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b527dfcc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b527dfd5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b527dfdf670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b527dfdb160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b527dfdbe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b527dfc42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b527dfc5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527dfdd6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527dfc52f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b527dfc12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b527dfcfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b527dfca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b527dfde9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b527dfd1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b527dfd0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b527dfc8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b527e019020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b527e0137c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527dffe150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b527e012020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b527d916370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b527e011380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b527d9156a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b527e0106b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b527d9149d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b527e00fa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b527d97ee30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b527e00e6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527e215d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b527e215d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b527dab1960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b527e00d530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b527e1f1ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b527e1f1ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527e00cad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527e20f6b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527e20f6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b527e00c3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b527e20d370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b527e20d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e00a330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e0091e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b527e007d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e069550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b527e009b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b527d770b80"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b527e0023e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b527e206e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b527e206e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b527e002cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b527e205670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b527e205670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b527e004b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b527e20c160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b527e20c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b527e0006d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b527e1f12f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b527e1f12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b527e001590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b527e1f42f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b527e1f42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b527e001e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b527e1f4ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b527e1f4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527dfff020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527e1f5ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527e1f5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b527dfff8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b527e212300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b527e212300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b527e05e9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527e0d07c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527d898020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b527e0bc820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b527e0d94e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b527e0beb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b527e12ab80"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b527e12ab80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b527e1c42b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b527e1377d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527e1d2150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527e139130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e16b2a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527e16b2a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527ee8b9d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b527e1cd640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527e13f830"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527e1abcd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527e16baf0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527e16baf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527ee845f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527e1c3690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527e117080"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527e117080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527e112cd0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527ee8b9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527ee6e360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b527ee7ed20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527ee8a260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527ee8a260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527ee6ebf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527ee819b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527e117080"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ee6bdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ee74020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ee74020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ee69440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ee73760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ee73760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ee68760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ee72a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ee72a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b527e10e0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b527d31a9d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b527e1a6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b527e1c7a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b527e1ba8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b527e1b12c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b527e1b12c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b527e1377d0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b527e208c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b527e211020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527e20bc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b527e1fee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b527e205e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b527e210370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b527e1f9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527e1f52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b527e20ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b527e209c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b527e1ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b527e202e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b527e204670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527e213970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daae680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527e20fd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527e1f8a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b527e20dac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527e20f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b527e1fbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b527e209480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527e20a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b527e212950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b527e1fce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b527e1fd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b527e1fb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b527e1f2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b527e200670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b527e1fde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b527e1f6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b527e203670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b527e20b490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b527e208480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b527e1ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b527e204e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b527e1fe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b527e206670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b527e211670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b527e20ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b527e1f62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b527e1f7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527e1f72f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b527e1f22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b527e200e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b527e1fc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b527e211cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b527e2109c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b527e203e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b527e20c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b527e202670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b527e1f9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b527e1f07a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b527e238920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b527e235940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527e23f9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527e235080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e291e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b527e295020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b527e290ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527e292690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b527e292690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527db33280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b527e28f8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b527e23ba20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e28e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b527e277200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b527e272570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527e2703f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b527e277950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e270a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e2aed70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b527e2b86b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527e2adb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b527e2b8020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e2ac2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e2ab170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b527e2abb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b527e2d4410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b527e2f5db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b527e33e800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527e33a580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b527e33a580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b527db33280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527e3261c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6dc020"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b527e3e1a80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b527d6c7680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b527e3cc8f0"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b527e436e20"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527e3db020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527e43bae0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b527e3dd880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b527e432880"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b527e3d9e80"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6b6bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b527e3d0750"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b527e43fcb0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b527e3deb20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527e433bc0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527e3d94e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6bf810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b527e3d7320"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b527e3c64d0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527e3dbc90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527e439780"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b527e431020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527e52b020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527e52b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527efa43b0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b527e430a80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527e52a8b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527e52a8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527efa3c30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b527e431d10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527e52bc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527e52bc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527efa3020"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e42d430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e069550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e429660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e066660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e425480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e062480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527e522b30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527d898020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b527e4241e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b527e523830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b527e422500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b527e51ee60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b527e51ee60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b527e12ab80"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b527e421590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b527e42e1c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b527d6a7210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2b527e42e880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b527d6a7df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527efa43b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527ef98e50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527efa3020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527d6a6450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527efa3c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b527e528020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b527efa12b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b527efa12b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6a4800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527ef97b00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e490940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527ef96730"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527e490940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e4c24b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527e4c0400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527d6a9050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527e4bf060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527e4be720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527d6a6450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b527e53c480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b527e53cc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527e505dd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527d6a6450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527e504a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b527efefd90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b527efe1020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527e500a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527efeea10"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527efeea10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527d6a6450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527e4fe720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527efed720"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527efed720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b527e4fdda0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b527efecda0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b527efecda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6a4800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b527efe1c90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b527e490940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527efe0930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></to>
    </wire>
    <wire loc="13:SlotTimerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2b527e574b60"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b527e552dc0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b527e552dc0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5495a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:SlotTimerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2b527e56e0f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5997d0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5997d0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5495a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:SlotTimerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2b527e569670"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5920f0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5920f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5495a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5495a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527e5b02b0"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b527e5aaa70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b527e53da20"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527e5b7020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527e541020"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527e541020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527efbe140"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527e543640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527efc5590"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b527efc5590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b527f053020"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b527f063b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527efc5de0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b527efc5de0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b527f0538b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b527f065690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b527d898020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527f04f9c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b527f05ad20"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b527f05ad20"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527f04d120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527f057440"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527f057440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527f04c440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b527f056760"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b527f056760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b527e5b41d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b527e5a5d90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b527e5882f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b527d6a6450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b527e587020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="3:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMAMasterC" loc="3:TDMAMasterC.nc">
      <configuration/>
    </component>
    <component qname="TDMAMasterP" loc="6:TDMAMasterP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMAMasterC.JoinRcvC" loc="43(TDMAMasterC.JoinRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMAMasterC.JoinSndC" loc="47(TDMAMasterC.JoinSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMAMasterC.JoinSndC.SenderC" loc="47(TDMAMasterC.JoinSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMAMasterC.JoinSndC.SenderC.AMQueueEntryP" loc="43(TDMAMasterC.JoinSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlotTimerC" loc="4:SlotTimerC.nc">
      <configuration/>
    </component>
    <component qname="SlotTimerP" loc="6:SlotTimerP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SlotTimerC.EpochTimer" loc="2(SlotTimerC.EpochTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlotTimerC.StartSlotTimer" loc="2(SlotTimerC.StartSlotTimer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlotTimerC.EndSlotTimer" loc="2(SlotTimerC.EndSlotTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMAMasterC.DataRcvC" loc="43(TDMAMasterC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b527cdba230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b527cdba5d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b527cdba980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b527cdbad00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b527cdb80d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b527cdb8440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b527cdb87d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b527cdb8b60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b527cdb7020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b527ce07960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b527ce07d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b527d190890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b527d190c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b527d18f020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b527d18f3d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b527d18f740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b527d315ad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b527d315ad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b527d3c95b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b527d3bd5b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b527d3ded90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b527d87b9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b527d87b9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b527d894bb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b527d894bb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b527d8df3b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b527d8df3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b527d8df7a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b527d8df7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b527d8de020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b527d8de020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b527d8de3f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b527d8debf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b527d8debf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b527d899dd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b527d899dd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b527d8bc600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b527d8bc600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b527d8bc9f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b527d8bc9f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b527d8bb210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b527d8bb210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b527d8bb5e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527decb400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527decb400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b527decbb90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527decbb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527e0dba60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527e0dba60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527e163160" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527e163160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527e1a3740" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527e1a3740"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b527e1a3a70" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b527e4b4ac0" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b527e4ad6b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b527e4a4320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b527e48bc80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b527e509180" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2b527ccf24b0" loc="4:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b527ccf24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b527ccf2830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MasterCtrl" ref="0x2b527ccf4020" loc="5:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MasterCtrl" scoped="" ref="0x2b527ccf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527ccf43a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527ccf4530"/>
        <function-ref name="start" scoped="" ref="0x2b527ccf46c0"/>
        <function-ref name="stop" scoped="" ref="0x2b527ccf4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MasterRcv" ref="0x2b527cd09850" loc="6:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MasterRcv" scoped="" ref="0x2b527cd09850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527cd09bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b527ccfe760" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b527ccfe760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ccfeae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b527cd062b0" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b527cd062b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b527cd06630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527cd01650" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527cd01650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd019d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b527cd19700" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b527cd19700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd19a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527cd1c8c0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527cd1c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd1cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b527cd19020" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b527cd19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd193a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b527cd19de0" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b527cd19de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd18180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527cd1ba20" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527cd1ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd1bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b527cd1abf0" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b527cd1abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b527cd312c0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b527cd312c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b527cd371b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b527cd317d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b527cd31960"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b527cd31af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b527cd31640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b527cd31c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b527cd31e10"/>
        <function-ref name="initClocks" scoped="" ref="0x2b527cd37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527cd3bb60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527cd3bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b527cd40020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b527cd40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b527cd3f020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b527cd40530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b527cd406c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b527cd40850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b527cd403a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b527cd409e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b527cd40b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2b527cd40d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b527cd3f360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b527cd3f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b527cd3f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527cd41940" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527cd41940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cd41cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b527cd81730" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b527cd81730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cd81ab0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cd81c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cd81dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cd80020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cd801b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cd80340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cd804d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cd80660"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cd807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b527cd91020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b527cd91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cd913a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cd91530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cd916c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cd91850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cd919e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cd91b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cd91d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cd90020"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cd901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b527cd9a700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b527cd9a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cd9aa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cd9ac10"/>
        <function-ref name="captured" scoped="" ref="0x2b527cd9ada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cd99020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cd991b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cd99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b527cdc2a20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b527cdc2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cdc2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cdc1020"/>
        <function-ref name="captured" scoped="" ref="0x2b527cdc11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cdc1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cdc14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cdc1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b527cd7fc10" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b527cd7fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda0020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda01b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda0340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda04d0"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b527cda6020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b527cda6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda63a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda6530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda66c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda6850"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b527cdbfa20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b527cdbfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cdbfda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cdbe020"/>
        <function-ref name="captured" scoped="" ref="0x2b527cdbe1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cdbe340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cdbe4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cdbe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b527cdad5a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b527cdad5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cdad920"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cdadab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cdadc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cdaddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cdac020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cdac1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cdac340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cdac4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cdac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b527cd82d60" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b527cd82d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cd89180"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cd89310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cd894a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cd89630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cd897c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cd89950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cd89ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cd89c70"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cd89e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b527cda2a20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b527cda2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cda1020"/>
        <function-ref name="captured" scoped="" ref="0x2b527cda11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cda1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cda14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cda1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b527cda83e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b527cda83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda8760"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda88f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda8a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda8c10"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b527cd905a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b527cd905a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cd90a20"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cd90bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cd90d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cdb1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cdb11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cdb1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cdb14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cdb1660"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cdb17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b527cd99700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b527cd99700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cd99a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cd99c10"/>
        <function-ref name="captured" scoped="" ref="0x2b527cd99da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cd93020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cd931b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cd93340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b527cdc1a20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b527cdc1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cdc1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cdc0020"/>
        <function-ref name="captured" scoped="" ref="0x2b527cdc01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cdc0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cdc04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cdc0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b527cdb1be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b527cdb1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cdaf020"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cdaf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cdaf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cdaf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cdaf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cdaf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cdaf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cdafb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cdafca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b527cda0a20" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b527cda0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda0da0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cd9b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cd9b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cd9b340"/>
        <function-ref name="fired" scoped="" ref="0x2b527cd9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b527cd70060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b527cd70060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527cd703e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527cd70570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cd70700"/>
        <function-ref name="get" scoped="" ref="0x2b527cd70890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cd70a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cd70bb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527cd70d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cd6f020"/>
        <function-ref name="overflow" scoped="" ref="0x2b527cd6f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527cd6f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527cd6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b527cda6da0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b527cda6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda5180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda5310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda54a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda5630"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b527cd88220" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b527cd88220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cd885a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cd88730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cd888c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cd88a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cd88be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cd88d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cd81020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cd811b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cd81340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b527cdaca50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b527cdaca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cdacdd0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cdab020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cdab1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cdab340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cdab4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cdab660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cdab7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cdab980"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cdabb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b527cd947b0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b527cd947b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cd94b30"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cd94cc0"/>
        <function-ref name="captured" scoped="" ref="0x2b527cd94e50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cd9a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cd9a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cd9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b527cda1a20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b527cda1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cdc2020"/>
        <function-ref name="captured" scoped="" ref="0x2b527cdc21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cdc2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cdc24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cdc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b527cd9ce60" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b527cd9ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cd7f210"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cd7f3a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cd7f530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cd7f6c0"/>
        <function-ref name="fired" scoped="" ref="0x2b527cd7f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b527cda71f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b527cda71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda7570"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda7700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda7890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda7a20"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b527cdc0a20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b527cdc0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cdc0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cdbf020"/>
        <function-ref name="captured" scoped="" ref="0x2b527cdbf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cdbf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cdbf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cdbf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b527cdae0c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b527cdae0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cdae440"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cdae5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cdae760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cdae8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cdaea80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cdaec10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cdaeda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cdad020"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cdad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b527cd936c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b527cd936c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527cd93a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527cd93bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cd93d60"/>
        <function-ref name="get" scoped="" ref="0x2b527cd92020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cd921b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cd92340"/>
        <function-ref name="getMode" scoped="" ref="0x2b527cd924d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cd92660"/>
        <function-ref name="overflow" scoped="" ref="0x2b527cd927f0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527cd92980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527cd92b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b527cda5b80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b527cda5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda4020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda41b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda4340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda44d0"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b527cda3a20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b527cda3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527cda2020"/>
        <function-ref name="captured" scoped="" ref="0x2b527cda21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cda2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cda24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527cda2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b527cda4a20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b527cda4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda3020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda31b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda3340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda34d0"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b527cda9570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b527cda9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527cda98f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527cda9a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527cda9c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527cda9da0"/>
        <function-ref name="fired" scoped="" ref="0x2b527cda8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b527cdaa020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b527cdaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527cdaa3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527cdaa530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cdaa6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527cdaa850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527cdaa9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cdaab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527cdaad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527cda9020"/>
        <function-ref name="setControl" scoped="" ref="0x2b527cda91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b527cded2f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b527cded2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cded670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b527cdeec20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b527cdeec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cded020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b527cded940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b527cded940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cdedcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b527cdee5b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527cdee5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cdee950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b527cdf0c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527cdf0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527cdef0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527cdef230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cdef3c0"/>
        <function-ref name="get" scoped="" ref="0x2b527cdef550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cdef6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cdef870"/>
        <function-ref name="getMode" scoped="" ref="0x2b527cdefa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cdefb90"/>
        <function-ref name="overflow" scoped="" ref="0x2b527cdefd20"/>
        <function-ref name="setMode" scoped="" ref="0x2b527cdee020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527cdee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b527cde52f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b527cde52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cde5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b527cde6c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b527cde6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cde5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b527cde5940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b527cde5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cde5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b527cde65b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527cde65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527cde6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b527cde8c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527cde8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527cde70a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527cde7230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527cde73c0"/>
        <function-ref name="get" scoped="" ref="0x2b527cde7550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527cde76e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527cde7870"/>
        <function-ref name="getMode" scoped="" ref="0x2b527cde7a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527cde7b90"/>
        <function-ref name="overflow" scoped="" ref="0x2b527cde7d20"/>
        <function-ref name="setMode" scoped="" ref="0x2b527cde6020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527cde61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce4da90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce4da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce4de10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce4c020"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce4c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce4c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce4c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce059d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce059d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce05d50"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce4e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce4e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce4e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce4e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce4e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce4e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce4e980"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce4eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce4a020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce4ede0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce4ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce4d180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce4d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce4d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce4d630"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce4d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce4c930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce4c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce4ccb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce4ce40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce4b020"/>
        <function-ref name="get" scoped="" ref="0x2b527ce4b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce4b340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce4b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce4b660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce4b7f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce4b980"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce4bb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce4bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce45160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce45160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce454e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce45670"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce45800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce45990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce45b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce45cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce47020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce473a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce47530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce476c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce47850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce479e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce47b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce47d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce46020"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce427a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce42b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce46480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce46480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce46800"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce46990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce46b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce46cb0"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce46e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce44020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce443a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce44530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce446c0"/>
        <function-ref name="get" scoped="" ref="0x2b527ce44850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce449e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce44b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce44d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce42020"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce421b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce42340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce617a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce617a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce61b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce61cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce61e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce60020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce601b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce3f6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce3f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce3fa50"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce3fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce3fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce62020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce621b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce62340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce624d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce62660"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce5fc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce5fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce62ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce62ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce62e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce61020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce611b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce61340"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce60610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce60610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce60990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce60b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce60cb0"/>
        <function-ref name="get" scoped="" ref="0x2b527ce60e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce5f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce5f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce5f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce5f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce5f660"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce5f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce5f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce5acb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce5acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce590a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce59230"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce593c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce59550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce596e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce59870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce5cb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce5cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce5b020"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce5b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce5b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce5b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce5b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce5b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce5b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce5bb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce5bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce562f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce56670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce5a020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce5a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce5a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce5a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce5a850"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce5a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce59b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce59b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce57020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce571b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce57340"/>
        <function-ref name="get" scoped="" ref="0x2b527ce574d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce57660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce577f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce57980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce57b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce57ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce57e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce512f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce51670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce51800"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce51990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce51b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce51cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce51e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce53220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce53220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce535a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce53730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce538c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce53a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce53be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce53d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce52020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce521b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce52340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce747a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce747a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce74b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce52610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce52610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce52990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce52b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce52cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce52e40"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce51020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce75160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce75160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce754e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce75670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce75800"/>
        <function-ref name="get" scoped="" ref="0x2b527ce75990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce75b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce75cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce75e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce74020"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce741b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce74340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce6f7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce6f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce6fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce6fcb0"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce6fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce6e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce6e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce6e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce716d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce71a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce71be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce71d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce70020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce701b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce70340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce704d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce70660"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce707f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce6dc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce6dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce70ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce70ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce70e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce6f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce6f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce6f340"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce6e610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce6e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce6e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce6eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce6ecb0"/>
        <function-ref name="get" scoped="" ref="0x2b527ce6ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce6d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce6d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce6d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce6d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce6d660"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce6d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce6d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce67cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce67cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce660a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce66230"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce663c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce66550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce666e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce66870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce69b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce69b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce68020"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce681b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce68340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce684d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce68660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce687f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce68980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce68b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce68ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce642f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce64670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce67020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce673a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce67530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce676c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce67850"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce679e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce66b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce66b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce65020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce651b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce65340"/>
        <function-ref name="get" scoped="" ref="0x2b527ce654d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce65660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce657f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce65980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce65b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce65ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce65e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce852f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce85670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce85800"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce85990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce85b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce85cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce85e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce87220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce87220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce875a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce87730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce878c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce87a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce87be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce87d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce86020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce861b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce86340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce837a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce837a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce83b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce86610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce86610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce86990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce86b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce86cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce86e40"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce84160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce84160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce844e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce84670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce84800"/>
        <function-ref name="get" scoped="" ref="0x2b527ce84990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce84b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce84cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce84e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce83020"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce831b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce83340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce7d7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce7d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce7db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce7dcb0"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce7de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce7c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce7c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce7c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce7f6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce7f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce7fa50"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce7fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce7fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce7e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce7e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce7e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce7e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce7e660"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce7e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce7bc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce7bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce7eac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce7eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce7ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce7d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce7d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce7d340"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce7c610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce7c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce7c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce7cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce7ccb0"/>
        <function-ref name="get" scoped="" ref="0x2b527ce7ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce7b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce7b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce7b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce7b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce7b660"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce7b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce7b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527ce76cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527ce76cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce9b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527ce9b230"/>
        <function-ref name="captured" scoped="" ref="0x2b527ce9b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce9b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce9b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527ce9b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527ce78b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527ce78b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ce77020"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ce771b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce77340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ce774d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ce77660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce777f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ce77980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ce77b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ce77ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b527ce992f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b527ce992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce99670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b527ce76020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b527ce76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ce763a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ce76530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ce766c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ce76850"/>
        <function-ref name="fired" scoped="" ref="0x2b527ce769e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b527ce9bb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527ce9bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ce9a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ce9a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ce9a340"/>
        <function-ref name="get" scoped="" ref="0x2b527ce9a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ce9a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ce9a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ce9a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ce9ab10"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ce9aca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ce9ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ce99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b527ce92240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b527ce92240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce925c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b527ce96aa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b527ce96aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce96e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b527ce93260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b527ce93260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce935e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b527ce939f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b527ce939f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527ce93d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b527c9b1080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b527c9b1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b527c9b1400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b527c8762d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b527c8762d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b527c876650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b527ca497d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b527ca497d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b527ca49b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b527cd39b50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b527cd39b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b527ced6b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b527ced61b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b527ced6340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b527ced64d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b527ced6020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b527ced6660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b527ced67f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b527ced6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b527cecadc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b527cecadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cec9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b527ced7590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b527ced7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b527ced7910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b527ceca6c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b527ceca6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cecaa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b527ced7c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b527ced7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ceca020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b527ceca1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b527ceca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b527c79e1d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b527c79e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527c79e550"/>
        <function-ref name="runTask" scoped="" ref="0x2b527c79e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b527c8083a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b527c8083a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527c808720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b527c8088b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b527c808a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b527cc55040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b527cc55040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527cc553c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b527cc55550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b527cc6f5d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b527cc6f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b527cc6f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b527cc57140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b527cc57140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cc574c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b527cc57650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b527cc577e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527cee3dd0" loc="5:TDMAMasterC.nc">
      <component-ref qname="TDMAMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527cee3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527cee2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527cee32c0" loc="4:TDMAMasterC.nc">
      <component-ref qname="TDMAMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527cee32c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527cee3640"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527cee37d0"/>
        <function-ref name="start" scoped="" ref="0x2b527cee3960"/>
        <function-ref name="stop" scoped="" ref="0x2b527cee3af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinRcv" ref="0x2b527cef14e0" loc="17:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinRcv" scoped="" ref="0x2b527cef14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527cef1860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b527cedb120" loc="11:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2b527cedb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527cedb4a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527cedb630"/>
        <function-ref name="start" scoped="" ref="0x2b527cedb7c0"/>
        <function-ref name="stop" scoped="" ref="0x2b527cedb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2b527cefadf0" loc="13:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2b527cefadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527cedac60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527cef8590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527cef8110"/>
        <function-ref name="cancel" scoped="" ref="0x2b527cf01580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527cf01a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527cedc9a0" loc="8:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527cedc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527cedcd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinSnd" ref="0x2b527cf0e6e0" loc="16:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinSnd" scoped="" ref="0x2b527cf0e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527cf0ea60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527cf0ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527cf0ed80"/>
        <function-ref name="cancel" scoped="" ref="0x2b527cef1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527cef11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b527cedde60" loc="7:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b527cedde60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527cedc210"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527cedc3a0"/>
        <function-ref name="start" scoped="" ref="0x2b527cedc530"/>
        <function-ref name="stop" scoped="" ref="0x2b527cedc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2b527cef2470" loc="14:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2b527cef2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b527cef6390"/>
        <function-ref name="eventTime" scoped="" ref="0x2b527cef68a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotTimer" ref="0x2b527cf0bcf0" loc="19:TDMAMasterP.nc">
      <component-ref qname="TDMAMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotTimer" scoped="" ref="0x2b527cf0bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="setEpochTime" scoped="" ref="0x2b527cef00a0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b527cef0230"/>
        <function-ref name="scheduleSlot" scoped="" ref="0x2b527cef03c0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b527cef0550"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b527cef06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527cf38440" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527cf38440"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527cf387c0"/>
        <function-ref name="stop" scoped="" ref="0x2b527cf38950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b527cf30960" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b527cf30960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b527cf30ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2b527cf311e0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b527cf311e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527cf31560"/>
        <function-ref name="receive" scoped="" ref="0x2b527cf316f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527cf362a0" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527cf362a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527cf36620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2b527cf3c5a0" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2b527cf3c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527cf3c920"/>
        <function-ref name="stop" scoped="" ref="0x2b527cf3cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527cf31a30" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527cf31a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527cf31db0"/>
        <function-ref name="stop" scoped="" ref="0x2b527cf36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b527cf4c310" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b527cf4c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527cf4c690"/>
        <function-ref name="receive" scoped="" ref="0x2b527cf4c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b527cf401e0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b527cf401e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527cf40560"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b527cf406f0"/>
        <function-ref name="receive" scoped="" ref="0x2b527cf40880"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b527cf40a10"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b527cf40ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b527cf40d30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527cf4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527cf37a30" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527cf37a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527cf37db0"/>
        <function-ref name="stop" scoped="" ref="0x2b527cf4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527d4498f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d4498f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527d449c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527d449e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b527d446060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b527d446060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d4463e0"/>
        <function-ref name="receive" scoped="" ref="0x2b527d446570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b527d446800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527d446800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b527d446b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b527d4470c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b527d4470c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d447440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b527d4475d0"/>
        <function-ref name="receive" scoped="" ref="0x2b527d447760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b527d4478f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b527d447a80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b527d447c10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d447da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527d44ac00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d44ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d449020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d4491b0"/>
        <function-ref name="request" scoped="" ref="0x2b527d449340"/>
        <function-ref name="granted" scoped="" ref="0x2b527d4494d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d449660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b527cfad020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527cfad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527cfad3a0"/>
        <function-ref name="configure" scoped="" ref="0x2b527cfad530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b527cfa9370" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b527cfa9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527cfa96f0"/>
        <function-ref name="receive" scoped="" ref="0x2b527cfa9880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b527cfa7450" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527cfa7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b527cfa77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b527cfadd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b527cfadd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527cfac180"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b527cfac310"/>
        <function-ref name="receive" scoped="" ref="0x2b527cfac4a0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b527cfac630"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b527cfac7c0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b527cfac950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527cfacae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b527cfa81d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b527cfa81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527cfa8550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527cfa86e0"/>
        <function-ref name="request" scoped="" ref="0x2b527cfa8870"/>
        <function-ref name="granted" scoped="" ref="0x2b527cfa8a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527cfa8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527cfaf430" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527cfaf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527cfaf7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527cfaf940"/>
        <function-ref name="request" scoped="" ref="0x2b527cfafad0"/>
        <function-ref name="granted" scoped="" ref="0x2b527cfafc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527cfafdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b527cfcc960" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527cfcc960"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527cfccce0"/>
        <function-ref name="txDone" scoped="" ref="0x2b527cfcce70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b527d0443e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d0443e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527d044780"/>
        <function-ref name="configure" scoped="" ref="0x2b527d044910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b527d042dc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b527d042dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d041180"/>
        <function-ref name="receive" scoped="" ref="0x2b527d041310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b527d040570" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527d040570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b527d040910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b527d040be0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b527d040be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527d03f020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527d03f1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527d03f340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527d03f4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527d03f660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527d03f7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527d03f980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527d03fb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527d03fca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527d03fe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527d03e020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527d03e1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527d03e340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527d03e5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527d03e760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527d03e8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527d03ea80"/>
        <function-ref name="isUart" scoped="" ref="0x2b527d03ec10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527d03eda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527d03d020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527d03d1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527d03d340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527d03d4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527d03d660"/>
        <function-ref name="getMode" scoped="" ref="0x2b527d03d7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527d03db80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527d03dd10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527d03c020"/>
        <function-ref name="tx" scoped="" ref="0x2b527d03c1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527d03c340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527d03c4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527d03c660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527d03c7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527d03c980"/>
        <function-ref name="rx" scoped="" ref="0x2b527d03cb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527d03cca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527d03ce30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527d067020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527d0671b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527d067340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b527d044cd0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b527d044cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d0420a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b527d042230"/>
        <function-ref name="receive" scoped="" ref="0x2b527d0423c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b527d042550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b527d0426e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b527d042870"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d042a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527d066180" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527d066180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527d065020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d0659a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d0654e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d065e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b527d041710" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b527d041710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d041ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d041c40"/>
        <function-ref name="request" scoped="" ref="0x2b527d041dd0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d040020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d0401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527d0455b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d0455b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d045950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d045ae0"/>
        <function-ref name="request" scoped="" ref="0x2b527d045c70"/>
        <function-ref name="granted" scoped="" ref="0x2b527d045e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d044020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b527d067740" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527d067740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527d067ae0"/>
        <function-ref name="txDone" scoped="" ref="0x2b527d067c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d0642c0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d0642c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d064640"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d0647d0"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d064960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d064af0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d064c80"/>
        <function-ref name="get" scoped="" ref="0x2b527d064e10"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d062020"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d062660"/>
        <function-ref name="set" scoped="" ref="0x2b527d062340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d0621b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d0624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b527d054860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527d054860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527d054be0"/>
        <function-ref name="txDone" scoped="" ref="0x2b527d054d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b527d057500" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d057500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527d057880"/>
        <function-ref name="stop" scoped="" ref="0x2b527d057a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b527d057d30" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527d057d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527d05a0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527d05a270"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527d05a400"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527d05a590"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527d05a720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527d05a8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527d05aa40"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527d05abd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527d05ad60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527d059020"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527d0591b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527d059340"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527d0594d0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527d059760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527d0598f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527d059a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527d059c10"/>
        <function-ref name="isUart" scoped="" ref="0x2b527d059da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527d056020"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527d0561b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527d056340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527d0564d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527d056660"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527d0567f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527d056980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527d056d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527d055020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527d0551b0"/>
        <function-ref name="tx" scoped="" ref="0x2b527d055340"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527d0554d0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527d055660"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527d0557f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527d055980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527d055b10"/>
        <function-ref name="rx" scoped="" ref="0x2b527d055ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527d055e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527d054020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527d0541b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527d054340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527d0544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b527d06a800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b527d06a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d06ab80"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d06ad10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d069020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d069340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d069660"/>
        <function-ref name="get" scoped="" ref="0x2b527d0697f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d069980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d069b10"/>
        <function-ref name="set" scoped="" ref="0x2b527d069ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d069e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d068020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0682b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d068440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b527d078130" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b527d078130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527d0784b0"/>
        <function-ref name="txDone" scoped="" ref="0x2b527d078640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b527d068800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b527d068800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d068b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d068d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d095020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d095340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d095660"/>
        <function-ref name="get" scoped="" ref="0x2b527d0957f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d095980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d095b10"/>
        <function-ref name="set" scoped="" ref="0x2b527d095ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d095e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d094020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0942b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d094440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b527d094800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b527d094800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d094b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d094d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d093020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d093340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d093660"/>
        <function-ref name="get" scoped="" ref="0x2b527d0937f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d093980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d093b10"/>
        <function-ref name="set" scoped="" ref="0x2b527d093ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d093e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d092020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0922b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d092440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b527d07d550" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b527d07d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527d07d8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527d07da60"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527d07dbf0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527d07dd80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527d07c020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527d07c1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527d07c340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527d07c4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527d07c660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527d07c7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527d07c980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527d07cb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527d07cca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527d07b020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527d07b1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527d07b340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527d07b4d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b527d07b660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527d07b7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527d07b980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527d07bb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527d07bca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527d07be30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527d07a020"/>
        <function-ref name="getMode" scoped="" ref="0x2b527d07a1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527d07a540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527d07a6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527d07a860"/>
        <function-ref name="tx" scoped="" ref="0x2b527d07a9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527d07ab80"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527d07ad10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527d079020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527d0791b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527d079340"/>
        <function-ref name="rx" scoped="" ref="0x2b527d0794d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527d079660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527d0797f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527d079980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527d079b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527d079ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b527d053bc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d053bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527d07d020"/>
        <function-ref name="stop" scoped="" ref="0x2b527d07d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b527d076800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b527d076800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d076b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d076d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d06b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d06b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d06b340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d06b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d06b660"/>
        <function-ref name="get" scoped="" ref="0x2b527d06b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d06b980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d06bb10"/>
        <function-ref name="set" scoped="" ref="0x2b527d06bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d06be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d06a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d06a2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d06a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b527d06c860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b527d06c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d06cbe0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d06cd70"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d077020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d077340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d077660"/>
        <function-ref name="get" scoped="" ref="0x2b527d0777f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d077980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d077b10"/>
        <function-ref name="set" scoped="" ref="0x2b527d077ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d077e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d076020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0762b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d076440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b527d101cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b527d101cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1000a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d100230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1003c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d100550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1006e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d100870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d100a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d100b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d100d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d0ff020"/>
        <function-ref name="set" scoped="" ref="0x2b527d0ff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d0ff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d0ff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0ff760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d0ff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b527d11dcc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b527d11dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d11c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d11c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d11c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d11c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d11c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d11c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d11ca00"/>
        <function-ref name="get" scoped="" ref="0x2b527d11cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d11cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d11b020"/>
        <function-ref name="set" scoped="" ref="0x2b527d11b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d11b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d11b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d11b760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d11b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b527d1623d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b527d1623d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d162750"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1628e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d162a70"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d162c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d162d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d161020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1611b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d161340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1614d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d161660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1617f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d161980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d161b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d161da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d160020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b527d16f3e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b527d16f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d16f760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d16f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d16fa80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d16fc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d16fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d16e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d16e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d16e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d16e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d16e660"/>
        <function-ref name="set" scoped="" ref="0x2b527d16e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d16e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d16eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d16eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d16d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b527d1603f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b527d1603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d160770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d160900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d160a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d160c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d160db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d15f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d15f1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d15f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d15f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d15f660"/>
        <function-ref name="set" scoped="" ref="0x2b527d15f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d15f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d15fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d15fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d15e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b527d119cc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b527d119cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1180a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d118230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1183c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d118550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1186e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d118870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d118a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d118b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d118d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d117020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d117340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d117760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b527d133020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b527d133020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1333a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d133530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1336c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d133850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d133b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d133d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d132020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d132340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d132660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d132a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d132c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b527d14f020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b527d14f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d14f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d14f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d14f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d14f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d14f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d14fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d14fd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d14e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d14e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d14e340"/>
        <function-ref name="set" scoped="" ref="0x2b527d14e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d14e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d14e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d14ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d14ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b527d13f020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b527d13f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d13f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d13f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d13f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d13f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d13f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d13fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d13fd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d13e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d13e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d13e340"/>
        <function-ref name="set" scoped="" ref="0x2b527d13e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d13e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d13e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d13ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d13ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b527d15a3f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b527d15a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d15a770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d15a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d15aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d15ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d15adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d159020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1591b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d159340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1594d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d159660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1597f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d159980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d159b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d159da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d158020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b527d17b3e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b527d17b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d17b760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d17b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d17ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d17bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d17bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d17a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d17a1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d17a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d17a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d17a660"/>
        <function-ref name="set" scoped="" ref="0x2b527d17a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d17a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d17ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d17ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d179020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b527d1983f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b527d1983f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d198770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d198900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d198a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d198c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d198db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d197020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1971b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d197340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1974d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d197660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1977f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d197980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d197b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d197da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d196020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b527d0fbcc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b527d0fbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d0fa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d0fa230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d0fa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0fa550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d0fa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0fa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d0faa00"/>
        <function-ref name="get" scoped="" ref="0x2b527d0fab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d0fad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d0f9020"/>
        <function-ref name="set" scoped="" ref="0x2b527d0f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d0f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d0f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0f9760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d0f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b527d1583f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b527d1583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d158770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d158900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d158a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d158c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d158db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d157020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1571b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d157340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1574d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d157660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1577f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d157980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d157b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d157da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d156020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b527d0f7cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b527d0f7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d0f60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d0f6230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d0f63c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0f6550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d0f66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0f6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d0f6a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d0f6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d0f6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d0f5020"/>
        <function-ref name="set" scoped="" ref="0x2b527d0f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d0f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d0f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0f5760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d0f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b527d113cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b527d113cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1120a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d112230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1123c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d112550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1126e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d112870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d112a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d112b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d112d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d111020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d111340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d111760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b527d12d020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b527d12d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d12d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d12d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d12d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d12d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d12d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d12db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d12dd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d12c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d12c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d12c340"/>
        <function-ref name="set" scoped="" ref="0x2b527d12c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d12c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d12c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d12ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d12cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b527d149020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b527d149020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1493a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d149530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1496c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d149850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1499e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d149b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d149d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d148020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d148340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d148660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d148a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d148c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b527d168020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b527d168020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1683a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d168530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1686c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d168850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1689e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d168b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d168d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d167020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1671b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d167340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1674d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d167660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1677f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d167a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d167c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b527d105cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b527d105cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1040a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d104230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1043c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d104550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1046e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d104870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d104a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d104b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d104d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d103020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d103340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d103760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b527d121cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b527d121cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d120180"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d120310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1204a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d120630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1207c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d120950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d120ae0"/>
        <function-ref name="get" scoped="" ref="0x2b527d120c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d120e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d11f020"/>
        <function-ref name="set" scoped="" ref="0x2b527d11f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d11f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d11f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d11f760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d11f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b527d10dcc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b527d10dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d10c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d10c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d10c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d10c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d10c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d10c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d10ca00"/>
        <function-ref name="get" scoped="" ref="0x2b527d10cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d10cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d10b020"/>
        <function-ref name="set" scoped="" ref="0x2b527d10b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d10b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d10b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d10b760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d10b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b527d1643f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b527d1643f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d164770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d164900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d164a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d164c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d164db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d163020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1631b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d163340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1634d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d163660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1637f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d163980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d163b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d163da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d162020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b527d1753e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b527d1753e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d175760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1758f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d175a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d175c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d175da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d174020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1741b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d174340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1744d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d174660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1747f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d174980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d174b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d174da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d173020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b527d19a3e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b527d19a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d19a760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d19a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d19aa80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d19ac10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d19ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d199020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1991b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d199340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1994d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d199660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1997f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d199980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d199b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d199da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d198020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b527d1813f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b527d1813f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d181770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d181900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d181a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d181c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d181db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d180020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1801b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d180340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1804d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d180660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1807f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d180980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d180b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d180da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d17f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b527d139cc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b527d139cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d137410"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1375a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d137730"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1378c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d137a50"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d137be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d137d70"/>
        <function-ref name="get" scoped="" ref="0x2b527d136020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d136340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d136660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d136a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d136c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b527d123020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b527d123020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1233a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d123530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1236c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d123850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d123b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d123d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d152020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d152340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d152660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d152a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d152c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b527d143020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b527d143020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1433a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d143530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1436c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d143850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d143b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d143d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d142020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d142340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d142660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d142a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d142c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b527d1733e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b527d1733e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d173760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1738f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d173a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d173c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d173da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d172020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1721b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d172340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1724d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d172660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1727f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d172980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d172b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d172da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d171020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b527d1563e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b527d1563e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d156760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1568f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d156a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d156c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d156da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d155020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1551b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d155340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1554d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d155660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1557f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d155980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d155b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d155da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d154020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b527d0ffcc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b527d0ffcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d0fe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d0fe230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d0fe3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0fe550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d0fe6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0fe870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d0fea00"/>
        <function-ref name="get" scoped="" ref="0x2b527d0feb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d0fed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d0fd020"/>
        <function-ref name="set" scoped="" ref="0x2b527d0fd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d0fd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d0fd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0fd760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d0fd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b527d11bcc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b527d11bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d11a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d11a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d11a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d11a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d11a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d11a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d11aa00"/>
        <function-ref name="get" scoped="" ref="0x2b527d11ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d11ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d119020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d119340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d119760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b527d147020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b527d147020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1473a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d147530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1476c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d147850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d147b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d147d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d146020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d146340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d146660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d146a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d146c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b527d117cc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b527d117cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1160a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d116230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1163c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d116550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1166e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d116870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d116a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d116b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d116d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d115020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1151b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d115340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1154d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d115760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1158f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b527d131020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b527d131020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1313a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d131530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1316c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d131850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d131b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d131d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d130020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d130340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d130660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d130a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d130c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b527d14d020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b527d14d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d14d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d14d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d14d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d14d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d14d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d14db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d14dd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d14c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d14c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d14c340"/>
        <function-ref name="set" scoped="" ref="0x2b527d14c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d14c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d14c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d14ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d14cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b527d13d020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b527d13d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d13d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d13d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d13d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d13d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d13d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d13db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d13dd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d13c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d13c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d13c340"/>
        <function-ref name="set" scoped="" ref="0x2b527d13c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d13c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d13c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d13ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d13cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b527d1833f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b527d1833f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d183770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d183900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d183a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d183c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d183db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d182020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1821b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d182340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1824d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d182660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1827f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d182980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d182b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d182da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d181020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b527d0dce10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b527d0dce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1091c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d109350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1094e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d109670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d109800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d109990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d109b20"/>
        <function-ref name="get" scoped="" ref="0x2b527d109cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d109e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d108020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d108340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d108760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b527d0f5cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b527d0f5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d0f40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d0f4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d0f43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0f4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d0f46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0f4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d0f4a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d0f4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d0f4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d0f3020"/>
        <function-ref name="set" scoped="" ref="0x2b527d0f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d0f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d0f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0f3760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d0f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b527d111cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b527d111cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1100a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d110230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1103c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d110550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1106e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d110870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d110a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d110b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d110d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d10f020"/>
        <function-ref name="set" scoped="" ref="0x2b527d10f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d10f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d10f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d10f760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d10f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b527d12b020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b527d12b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d12b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d12b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d12b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d12b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d12b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d12bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d12bd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d12a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d12a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d12a340"/>
        <function-ref name="set" scoped="" ref="0x2b527d12a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d12a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d12a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d12aa80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d12ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b527d17f3f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b527d17f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d17f770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d17f900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d17fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d17fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d17fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d17e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d17e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d17e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d17e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d17e660"/>
        <function-ref name="set" scoped="" ref="0x2b527d17e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d17e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d17eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d17eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d17d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b527d1793e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b527d1793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d179760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1798f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d179a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d179c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d179da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d178020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1781b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d178340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1784d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d178660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1787f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d178980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d178b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d178da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d177020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b527d16d3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b527d16d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d16d760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d16d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d16da80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d16dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d16dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d16c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d16c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d16c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d16c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d16c660"/>
        <function-ref name="set" scoped="" ref="0x2b527d16c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d16c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d16cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d16cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d16b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b527d127020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b527d127020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1273a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d127530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1276c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d127850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d127b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d127d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d126020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d126340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d126660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d126a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d126c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b527d17d3f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b527d17d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d17d770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d17d900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d17da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d17dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d17ddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d17c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d17c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d17c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d17c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d17c660"/>
        <function-ref name="set" scoped="" ref="0x2b527d17c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d17c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d17cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d17cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d17b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b527d103cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b527d103cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1020a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d102230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1023c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d102550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1026e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d102870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d102a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d102b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d102d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d101020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d101340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d101760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b527d11fcc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b527d11fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d11e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d11e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d11e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d11e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d11e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d11e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d11ea00"/>
        <function-ref name="get" scoped="" ref="0x2b527d11eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d11ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d11d020"/>
        <function-ref name="set" scoped="" ref="0x2b527d11d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d11d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d11d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d11d760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d11d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b527d10bcc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b527d10bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d13a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d13a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d13a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d13a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d13a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d13a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d13aa00"/>
        <function-ref name="get" scoped="" ref="0x2b527d13ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d13ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d139020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d139340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d139760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b527d1543f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b527d1543f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d154770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d154900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d154a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d154c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d154db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d153020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1531b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d153340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1534d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d153660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1537f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d153980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d153b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d153da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d183020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b527d1713e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b527d1713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d171760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1718f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d171a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d171c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d171da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d170020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1701b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d170340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1704d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d170660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1707f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d170980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d170b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d170da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d16f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b527d135020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b527d135020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1353a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d135530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1356c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d135850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d135b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d135d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d134020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d134340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d134660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d134a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d134c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b527d151020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b527d151020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1513a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d151530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1516c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d151850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d151b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d151d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d150020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d150340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d150660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d150a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d150c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b527d141020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b527d141020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1413a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d141530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1416c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d141850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1419e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d141b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d141d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d140020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d140340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d140660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d140a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d140c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b527d0fdcc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b527d0fdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d0fc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d0fc230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d0fc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0fc550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d0fc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0fc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d0fca00"/>
        <function-ref name="get" scoped="" ref="0x2b527d0fcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d0fcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d0fb020"/>
        <function-ref name="set" scoped="" ref="0x2b527d0fb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d0fb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d0fb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0fb760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d0fb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b527d145020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b527d145020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1453a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d145530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1456c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d145850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d145b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d145d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d144020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d144340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d144660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d144a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d144c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b527d0f9cc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b527d0f9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d0f80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d0f8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d0f83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d0f8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d0f86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d0f8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d0f8a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d0f8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d0f8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d0f7020"/>
        <function-ref name="set" scoped="" ref="0x2b527d0f71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d0f7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d0f74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d0f7760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d0f78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b527d115cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b527d115cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1140a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d114230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1143c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d114550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1146e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d114870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d114a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d114b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d114d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d113020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d113340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d113760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b527d12f020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b527d12f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d12f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d12f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d12f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d12f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d12f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d12fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d12fd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d12e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d12e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d12e340"/>
        <function-ref name="set" scoped="" ref="0x2b527d12e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d12e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d12e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d12ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d12ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b527d14b020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b527d14b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d14b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d14b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d14b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d14b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d14b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d14bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d14bd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d14a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d14a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d14a340"/>
        <function-ref name="set" scoped="" ref="0x2b527d14a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d14a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d14a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d14aa80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d14ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b527d13b020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b527d13b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d13b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d13b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d13b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d13b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d13b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d13bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d13bd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d16a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d16a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d16a340"/>
        <function-ref name="set" scoped="" ref="0x2b527d16a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d16a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d16a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d16aa80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d16ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b527d108cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b527d108cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1060a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d106230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1063c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d106550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1066e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d106870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d106a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d106b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d106d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d105020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1051b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d105340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1054d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d105760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1058f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b527d0f3cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b527d0f3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1220a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d122230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1223c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d122550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1226e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d122870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d122a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d122b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d122d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d121020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d121340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d121760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b527d10fcc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b527d10fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d10e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d10e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d10e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d10e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d10e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d10e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d10ea00"/>
        <function-ref name="get" scoped="" ref="0x2b527d10eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d10ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d10d020"/>
        <function-ref name="set" scoped="" ref="0x2b527d10d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d10d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d10d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d10d760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d10d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b527d129020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b527d129020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1293a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d129530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1296c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d129850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d129b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d129d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d128020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d128340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d128660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d128a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d128c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b527d15c3d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b527d15c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d15c750"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d15c8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d15ca70"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d15cc00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d15cd90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d15b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d15b1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d15b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d15b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d15b660"/>
        <function-ref name="set" scoped="" ref="0x2b527d15b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d15b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d15bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d15bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d15a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b527d1773e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b527d1773e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d177760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1778f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d177a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d177c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d177da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d176020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1761b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d176340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1764d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d176660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1767f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d176980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d176b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d176da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d175020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b527d15e3f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b527d15e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d15e770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d15e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d15ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d15ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d15edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d15d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d15d1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d15d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d15d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d15d660"/>
        <function-ref name="set" scoped="" ref="0x2b527d15d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d15d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d15db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d15dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d15c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b527d125020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b527d125020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1253a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d125530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1256c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d125850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d125b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d125d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d124020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d124340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d124660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d124a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d124c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b527d16b3e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b527d16b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d16b760"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d16b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d16ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d16bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d16bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d19b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d19b1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d19b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d19b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d19b660"/>
        <function-ref name="set" scoped="" ref="0x2b527d19b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d19b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d19bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d19bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d19a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b527d1963f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b527d1963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d196770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d196900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d196a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d196c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d196db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d195020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1951b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d195340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1954d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d195660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1957f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d195980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d195b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d195da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d194020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b527d166060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b527d166060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1667e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d166970"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d166b00"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d166c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d166e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d165020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1651b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d165340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1654d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d165660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1657f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d165980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d165b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d165da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d164020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1ce3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1ce3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1ce770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1ce900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1cea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1cec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1cedb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1cd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1cd1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1cd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1cd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1cd660"/>
        <function-ref name="set" scoped="" ref="0x2b527d1cd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1cd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1cdb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1cdda0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1cae00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1cae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1c91c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1c9350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1c94e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1c9670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1c9800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1c9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1c9b20"/>
        <function-ref name="get" scoped="" ref="0x2b527d1c9cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1c9e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1c8020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1c8760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1c5740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1c5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1c5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1c5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1c5de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1c44d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1c4980"/>
        <function-ref name="set" scoped="" ref="0x2b527d1c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1c3120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1c0100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1c0480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1c0610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1c07a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1c0930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1c0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1c0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1c0de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1bf340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1bfa80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1bcd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1bb400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1bb590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1bb720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1bb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1bba40"/>
        <function-ref name="get" scoped="" ref="0x2b527d1bbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1bbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1ba020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1ba760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1b7740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1b7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1b7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1b7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1b7de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1e7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1e71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1e7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1e74d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1e7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1e77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1e7980"/>
        <function-ref name="set" scoped="" ref="0x2b527d1e7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1e7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1e7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1e6120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1e3100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1e3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1e3480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1e3610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1e37a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1e3930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1e3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1e3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1e3de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1e2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1e21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1e2340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1e24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1e2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1e27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1e2a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1e2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1dfd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1dfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1de0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1de270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1de400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1de590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1de720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1de8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1dea40"/>
        <function-ref name="get" scoped="" ref="0x2b527d1debd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1ded60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1dd020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1dd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1dd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1dd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1dd760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1dd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1da740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1da740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1daac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1dac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1dade0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1d94d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1d9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1d9980"/>
        <function-ref name="set" scoped="" ref="0x2b527d1d9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1d9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1d9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1d8120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1d5100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1d5480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1d5610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1d57a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1d5930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1d5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1d5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1d5de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1d41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1d4340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1d44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1d4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1d47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1d4a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1d1d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1d1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1d00e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1d0270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1d0400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1d0590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1d0720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1d08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1d0a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d1d0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1d0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1cf020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1cf760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1ff740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1ffac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1ffc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1ffde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1fe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1fe4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1fe660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1fe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1fe980"/>
        <function-ref name="set" scoped="" ref="0x2b527d1feb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1feca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1fee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1fd120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1fa260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1fa260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1fa5e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1fa770"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1fa900"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1faa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1fac20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1fadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1f9020"/>
        <function-ref name="get" scoped="" ref="0x2b527d1f91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1f9340"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1f94d0"/>
        <function-ref name="set" scoped="" ref="0x2b527d1f9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1f97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1f9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1f9c10"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1f9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1f6d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1f6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1f40e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1f4270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1f4400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1f4590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1f4720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1f48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1f4a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d1f4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1f4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1f3020"/>
        <function-ref name="set" scoped="" ref="0x2b527d1f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1f3760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1f0740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1f0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1f0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1f0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1f0de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1ef020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1ef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1ef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1ef4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1ef660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1ef7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1ef980"/>
        <function-ref name="set" scoped="" ref="0x2b527d1efb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1efca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1efe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1ee120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d1eb100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d1eb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d1eb480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d1eb610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d1eb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d1eb930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d1ebac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d1ebc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d1ebde0"/>
        <function-ref name="get" scoped="" ref="0x2b527d1ea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d1ea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d1ea340"/>
        <function-ref name="set" scoped="" ref="0x2b527d1ea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d1ea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d1ea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d1eaa80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d1eac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d21bd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d21bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d21a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d21a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d21a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d21a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d21a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d21a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d21aa40"/>
        <function-ref name="get" scoped="" ref="0x2b527d21abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d21ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d219020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d219340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d219760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d216740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d216740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d216ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d216c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d216de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d215020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d2151b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d215340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d2154d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d215660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2157f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d215980"/>
        <function-ref name="set" scoped="" ref="0x2b527d215b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d215ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d215e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d214120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d211100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d211100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d211480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d211610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d2117a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d211930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d211ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d211c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d211de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d210020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d210340"/>
        <function-ref name="set" scoped="" ref="0x2b527d2104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d210660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d210a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d210c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d20dd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d20dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d20c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d20c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d20c400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d20c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d20c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d20c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d20ca40"/>
        <function-ref name="get" scoped="" ref="0x2b527d20cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d20cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d20b020"/>
        <function-ref name="set" scoped="" ref="0x2b527d20b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d20b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d20b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d20b760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d20b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d208740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d208740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d208ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d208c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d208de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d207020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d2071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d207340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d2074d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d207660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d207980"/>
        <function-ref name="set" scoped="" ref="0x2b527d207b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d207ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d207e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d206120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d202100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d202100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d202480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d202610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d2027a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d202930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d202ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d202c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d202de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d235020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d235340"/>
        <function-ref name="set" scoped="" ref="0x2b527d2354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d235660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d235a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d235c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d232d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d232d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d2310e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d231270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d231400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d231590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d231720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d2318b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d231a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d231bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d231d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d230020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d230340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d230760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d22d740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d22d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d22dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d22dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d22dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d22c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d22c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d22c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d22c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d22c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d22c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d22c980"/>
        <function-ref name="set" scoped="" ref="0x2b527d22cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d22cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d22ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d22b120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d22b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d2283f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d2283f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d228770"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d228900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d228a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d228c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d228db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d227020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d2271b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d227340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2274d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d227660"/>
        <function-ref name="set" scoped="" ref="0x2b527d2277f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d227980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d227b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d227da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d226020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d224e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d224e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d2231c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d223350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d2234e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d223670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d223800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d223990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d223b20"/>
        <function-ref name="get" scoped="" ref="0x2b527d223cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d223e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d222020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d222340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2224d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d222760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d21f740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d21f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d21fac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d21fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d21fde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d21e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d21e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d21e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d21e4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d21e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d21e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d21e980"/>
        <function-ref name="set" scoped="" ref="0x2b527d21eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d21eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d21ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d21d120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d21d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d24e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d24e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d24e480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d24e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d24e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d24e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d24eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d24ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d24ede0"/>
        <function-ref name="get" scoped="" ref="0x2b527d24d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d24d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d24d340"/>
        <function-ref name="set" scoped="" ref="0x2b527d24d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d24d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d24d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d24da80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d24dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d24ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d24ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d2480e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d248270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d248400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d248590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d248720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d2488b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d248a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d248bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d248d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d247020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d247340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d247760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d244740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d244740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d244ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d244c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d244de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d243020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d2431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d243340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d2434d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d243660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d243980"/>
        <function-ref name="set" scoped="" ref="0x2b527d243b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d243ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d243e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d242120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d23f100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d23f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d23f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d23f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d23f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d23f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d23fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d23fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d23fde0"/>
        <function-ref name="get" scoped="" ref="0x2b527d23e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d23e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d23e340"/>
        <function-ref name="set" scoped="" ref="0x2b527d23e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d23e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d23e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d23ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d23ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d23bd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d23bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d23a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d23a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d23a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d23a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d23a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d23a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d23aa40"/>
        <function-ref name="get" scoped="" ref="0x2b527d23abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d23ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d239020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d239340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d239760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d236740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d236740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d236ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d236c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d236de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d269020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d2691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d269340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d2694d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d269660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d269980"/>
        <function-ref name="set" scoped="" ref="0x2b527d269b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d269ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d269e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d268120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d265100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d265100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d265480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d265610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d2657a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d265930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d265ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d265c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d265de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d264020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d264340"/>
        <function-ref name="set" scoped="" ref="0x2b527d2644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d264660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d264a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d264c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d261d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d261d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d2600e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d260270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d260400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d260590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d260720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d2608b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d260a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d260bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d260d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d25f020"/>
        <function-ref name="set" scoped="" ref="0x2b527d25f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d25f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d25f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d25f760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d25f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d25c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d25c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d25cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d25cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d25cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d25b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d25b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d25b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d25b4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d25b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d25b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d25b980"/>
        <function-ref name="set" scoped="" ref="0x2b527d25bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d25bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d25be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d25a120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d25a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d257100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d257100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d257480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d257610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d2577a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d257930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d257ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d257c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d257de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d255020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d255340"/>
        <function-ref name="set" scoped="" ref="0x2b527d2554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d255660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d255a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d255c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d252d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d252d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d2510e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d251270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d251400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d251590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d251720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d2518b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d251a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d251bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d251d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d250020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d250340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d250760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d282740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d282740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d282ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d282c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d282de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d281020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d2811b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d281340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d2814d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d281660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2817f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d281980"/>
        <function-ref name="set" scoped="" ref="0x2b527d281b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d281ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d281e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d280120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d27d100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d27d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d27d480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d27d610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d27d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d27d930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d27dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d27dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d27dde0"/>
        <function-ref name="get" scoped="" ref="0x2b527d27c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d27c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d27c340"/>
        <function-ref name="set" scoped="" ref="0x2b527d27c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d27c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d27c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d27ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d27cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d279d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d279d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d2780e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d278270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d278400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d278590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d278720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d2788b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d278a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d278bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d278d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d277020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d277340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d277760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d274740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d274740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d274ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d274c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d274de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d273020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d2731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d273340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d2734d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d273660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d273980"/>
        <function-ref name="set" scoped="" ref="0x2b527d273b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d273ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d273e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d272120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d26f100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d26f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d26f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d26f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d26f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d26f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d26fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d26fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d26fde0"/>
        <function-ref name="get" scoped="" ref="0x2b527d26e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d26e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d26e340"/>
        <function-ref name="set" scoped="" ref="0x2b527d26e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d26e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d26e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d26ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d26ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d26bd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d26bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d26a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d26a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d26a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d26a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d26a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d26a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d26aa40"/>
        <function-ref name="get" scoped="" ref="0x2b527d26abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d26ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d29f020"/>
        <function-ref name="set" scoped="" ref="0x2b527d29f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d29f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d29f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d29f760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d29f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d29b740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d29b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d29bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d29bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d29bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d29a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d29a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d29a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d29a4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d29a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d29a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d29a980"/>
        <function-ref name="set" scoped="" ref="0x2b527d29ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d29aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d29ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d299120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d296100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d296100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d296480"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d296610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d2967a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d296930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d296ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d296c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d296de0"/>
        <function-ref name="get" scoped="" ref="0x2b527d295020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d2951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d295340"/>
        <function-ref name="set" scoped="" ref="0x2b527d2954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d295660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d295a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d295c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d292d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d292d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d2910e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d291270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d291400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d291590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d291720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d2918b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d291a40"/>
        <function-ref name="get" scoped="" ref="0x2b527d291bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d291d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d290020"/>
        <function-ref name="set" scoped="" ref="0x2b527d2901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d290340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d2904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d290760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d2908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b527d28d740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b527d28d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d28dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d28dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d28dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d28c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d28c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d28c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d28c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d28c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d28c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d28c980"/>
        <function-ref name="set" scoped="" ref="0x2b527d28cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d28cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d28ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d28b120"/>
        <function-ref name="clr" scoped="" ref="0x2b527d28b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b527d3209a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527d3209a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527d31d7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d31b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d31dca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d31b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b527d31a9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b527d31a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527d317810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d3161b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d317cd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d316670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b527d33dc50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d33dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d33c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527d33c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527d33c340"/>
        <function-ref name="get" scoped="" ref="0x2b527d33c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527d33c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d33c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527d33c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d33cb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d33cca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527d33ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527d33b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b527d314b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527d314b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527d3139b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d33d360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d313e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d33d820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b527d31f970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d31f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d31fcf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d31fe80"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d338030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d3381c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d338350"/>
        <function-ref name="get" scoped="" ref="0x2b527d3384e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d338670"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d338cb0"/>
        <function-ref name="set" scoped="" ref="0x2b527d338800"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d338990"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d338b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b527d32b910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b527d32b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d32bc90"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d32be20"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d331020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d3311b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d331340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d3314d0"/>
        <function-ref name="set" scoped="" ref="0x2b527d331660"/>
        <function-ref name="clr" scoped="" ref="0x2b527d3317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527d336c40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d336c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d333020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b527d331b10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b527d331b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d330020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d3301b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d330340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d3304d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d330660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d3307f0"/>
        <function-ref name="set" scoped="" ref="0x2b527d330980"/>
        <function-ref name="clr" scoped="" ref="0x2b527d330b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b527d3332a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d3332a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d333620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d3337b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d333940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d333ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d333c60"/>
        <function-ref name="get" scoped="" ref="0x2b527d333df0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d332020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d332660"/>
        <function-ref name="set" scoped="" ref="0x2b527d3321b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d332340"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d3324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b527d330e30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b527d330e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d32a1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d32a370"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d32a500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d32a690"/>
        <function-ref name="get" scoped="" ref="0x2b527d32a820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d32a9b0"/>
        <function-ref name="set" scoped="" ref="0x2b527d32ab40"/>
        <function-ref name="clr" scoped="" ref="0x2b527d32acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b527d347360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b527d347360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d3476e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d347870"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d347a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d347b90"/>
        <function-ref name="get" scoped="" ref="0x2b527d347d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d346020"/>
        <function-ref name="set" scoped="" ref="0x2b527d3461b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d346340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b527d3466a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b527d3466a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d346a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d346bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d346d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d345020"/>
        <function-ref name="get" scoped="" ref="0x2b527d3451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d345340"/>
        <function-ref name="set" scoped="" ref="0x2b527d3454d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d345660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b527d344c40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d344c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d342020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b527d3459c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b527d3459c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d345d40"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d344020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d3441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d344340"/>
        <function-ref name="get" scoped="" ref="0x2b527d3444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d344660"/>
        <function-ref name="set" scoped="" ref="0x2b527d3447f0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d344980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d368930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d368930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d368cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d368e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d367020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d3671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d367340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d3674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d367660"/>
        <function-ref name="get" scoped="" ref="0x2b527d3677f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d367980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d367b10"/>
        <function-ref name="set" scoped="" ref="0x2b527d367ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d367e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d366020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d3662b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d366440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d340710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d340710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d340a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d340c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d340db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d368020"/>
        <function-ref name="get" scoped="" ref="0x2b527d3681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d368340"/>
        <function-ref name="set" scoped="" ref="0x2b527d3684d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d368660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d363480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d363480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d363800"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d363990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d363b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d363cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d363e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d362020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d3621b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d362340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d3624d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d362660"/>
        <function-ref name="set" scoped="" ref="0x2b527d3627f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d362980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d362b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d362da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d361020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d3641d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d3641d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d364550"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d3646e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d364870"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d364a00"/>
        <function-ref name="get" scoped="" ref="0x2b527d364b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d364d20"/>
        <function-ref name="set" scoped="" ref="0x2b527d363020"/>
        <function-ref name="clr" scoped="" ref="0x2b527d3631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d35e020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d35e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d35e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d35e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d35e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d35e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d35e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d35eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d35ed00"/>
        <function-ref name="get" scoped="" ref="0x2b527d35d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d35d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d35d340"/>
        <function-ref name="set" scoped="" ref="0x2b527d35d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d35d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d35d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d35da80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d35dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d360d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d360d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d35f180"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d35f310"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d35f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d35f630"/>
        <function-ref name="get" scoped="" ref="0x2b527d35f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d35f950"/>
        <function-ref name="set" scoped="" ref="0x2b527d35fae0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d35fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527e722440" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527e722440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527e7227c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527e722950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527e71c5a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527e71c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527e71c920"/>
        <function-ref name="configure" scoped="" ref="0x2b527e71cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b527e71dda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527e71dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527e71c180"/>
        <function-ref name="txDone" scoped="" ref="0x2b527e71c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527e723760" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527e723760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527e723ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527e723c70"/>
        <function-ref name="request" scoped="" ref="0x2b527e723e00"/>
        <function-ref name="granted" scoped="" ref="0x2b527e722020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527e7221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b527e721440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527e721440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527e7217c0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527e721950"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527e721ae0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527e721c70"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527e721e00"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527e720020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527e7201b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527e720340"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527e7204d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527e720660"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527e7207f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527e720980"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527e720b10"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527e720da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527e71f020"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527e71f1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527e71f340"/>
        <function-ref name="isUart" scoped="" ref="0x2b527e71f4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527e71f660"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527e71f7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527e71f980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527e71fb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527e71fca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527e71fe30"/>
        <function-ref name="getMode" scoped="" ref="0x2b527e71e020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527e71e3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527e71e540"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527e71e6d0"/>
        <function-ref name="tx" scoped="" ref="0x2b527e71e860"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527e71e9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527e71eb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527e71ed10"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527e71d020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527e71d1b0"/>
        <function-ref name="rx" scoped="" ref="0x2b527e71d340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527e71d4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527e71d660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527e71d7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527e71d980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527e71db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527e722be0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527e722be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527e721020"/>
        <function-ref name="userId" scoped="" ref="0x2b527e7211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527d3ac2c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d3ac2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527d3ac640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527d3ac7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527d3ab8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d3ab8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527d3abc20"/>
        <function-ref name="configure" scoped="" ref="0x2b527d3abdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b527d3ae1d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b527d3ae1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527d3ae550"/>
        <function-ref name="txDone" scoped="" ref="0x2b527d3ae6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527d3ad020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d3ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d3ad3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d3ad530"/>
        <function-ref name="request" scoped="" ref="0x2b527d3ad6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d3ad850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d3ad9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527d3acad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d3acad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527d3ace50"/>
        <function-ref name="userId" scoped="" ref="0x2b527d3ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b527d395a90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d395a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527d395e10"/>
        <function-ref name="userId" scoped="" ref="0x2b527d3ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b527d3a9b60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b527d3a9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527d3a8020"/>
        <function-ref name="txDone" scoped="" ref="0x2b527d3a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b527d395480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b527d395480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527d395800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b527d3a85b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527d3a85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527d3a8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b527d3a8c20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b527d3a8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527d395020"/>
        <function-ref name="txDone" scoped="" ref="0x2b527d3951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527d441020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527d441020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527d4413c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527d441550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527d440cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527d440cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527d43f0a0"/>
        <function-ref name="configure" scoped="" ref="0x2b527d43f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b527d4417a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527d4417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d441b20"/>
        <function-ref name="requested" scoped="" ref="0x2b527d441cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d441e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d440020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527d4401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527d443210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d443210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d4435b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d443740"/>
        <function-ref name="request" scoped="" ref="0x2b527d4438d0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d443a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d443bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527d440400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d440400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527d440780"/>
        <function-ref name="userId" scoped="" ref="0x2b527d440910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527eadaca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527eadaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ead90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b527ead9330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b527ead9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b527ead96b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b527ead9840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b527ead99d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b527ead9b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527ead53a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ead53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527ead5740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527ead58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527ead3210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527ead3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527ead35b0"/>
        <function-ref name="configure" scoped="" ref="0x2b527ead3740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b527ead39d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b527ead39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b527ead3d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b527ead2020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b527ead21b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b527ead2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b527ead5b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527ead5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527ead4020"/>
        <function-ref name="requested" scoped="" ref="0x2b527ead41b0"/>
        <function-ref name="granted" scoped="" ref="0x2b527ead4340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527ead44d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527ead4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527ead2590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527ead2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527ead2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527ead2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b527ead2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527ead2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527ead1020"/>
        <function-ref name="get" scoped="" ref="0x2b527ead11b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527ead1340"/>
        <function-ref name="led0On" scoped="" ref="0x2b527ead1980"/>
        <function-ref name="set" scoped="" ref="0x2b527ead1660"/>
        <function-ref name="led2On" scoped="" ref="0x2b527ead14d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527ead17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527ead6540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527ead6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527ead68e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527ead6a70"/>
        <function-ref name="request" scoped="" ref="0x2b527ead6c00"/>
        <function-ref name="granted" scoped="" ref="0x2b527ead6d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527ead5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527ead48b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527ead48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527ead4c30"/>
        <function-ref name="userId" scoped="" ref="0x2b527ead4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b527ead1c50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b527ead1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527ead0020"/>
        <function-ref name="runTask" scoped="" ref="0x2b527ead01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b527d462400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b527d462400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b527d462780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b527d4629d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527d4629d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d462d50"/>
        <function-ref name="requested" scoped="" ref="0x2b527d461020"/>
        <function-ref name="granted" scoped="" ref="0x2b527d4611b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d461340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527d4614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b527d43bb20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527d43bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527d462020"/>
        <function-ref name="stop" scoped="" ref="0x2b527d4621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b527d461720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527d461720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527d461aa0"/>
        <function-ref name="userId" scoped="" ref="0x2b527d461c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b527eb4bb00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b527eb4bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b527eb4be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b527eb4a0f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527eb4a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527eb4a470"/>
        <function-ref name="requested" scoped="" ref="0x2b527eb4a600"/>
        <function-ref name="granted" scoped="" ref="0x2b527eb4a790"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527eb4a920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527eb4aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b527eb4b3a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b527eb4b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527eb4b720"/>
        <function-ref name="stop" scoped="" ref="0x2b527eb4b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b527eb4ad00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527eb4ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527eb490a0"/>
        <function-ref name="userId" scoped="" ref="0x2b527eb49230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2b527d47e080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b527d47e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b527d47e400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b527d47e6f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d47e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d47ea70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d47ec00"/>
        <function-ref name="request" scoped="" ref="0x2b527d47ed90"/>
        <function-ref name="granted" scoped="" ref="0x2b527d47d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d47d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527d4817a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527d4817a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527d481b20"/>
        <function-ref name="stop" scoped="" ref="0x2b527d481cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b527d471430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b527d471430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b527d4717b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527d470780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d470780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d470b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b527d470de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b527d470de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b527d46c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b527d465020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b527d465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b527d4653a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b527d465740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b527d465740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d465ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d465c50"/>
        <function-ref name="start" scoped="" ref="0x2b527d465de0"/>
        <function-ref name="stop" scoped="" ref="0x2b527d464020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d49b320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d49b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d49b6a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d49b830"/>
        <function-ref name="start" scoped="" ref="0x2b527d49b9c0"/>
        <function-ref name="stop" scoped="" ref="0x2b527d49bb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527d49a370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527d49a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d49a6f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d49a880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d49aa10"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d49aba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d49ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527d498020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527d498020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d4983a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527d498530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d4986c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d498850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527d4989e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527d499530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527d499530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d4998b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d4b4cd0" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d4b4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d4bc0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d4bc230"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d4bc3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d4bc550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d4bc6e0"/>
        <function-ref name="get" scoped="" ref="0x2b527d4bc870"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d4bca00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d4ba1b0"/>
        <function-ref name="set" scoped="" ref="0x2b527d4bcb90"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d4bcd20"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d4ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b527d4b4350" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d4b4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527d4b46d0"/>
        <function-ref name="noAck" scoped="" ref="0x2b527d4b4860"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527d4b49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527d497020" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527d497020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527d4973a0"/>
        <function-ref name="source" scoped="" ref="0x2b527d497530"/>
        <function-ref name="address" scoped="" ref="0x2b527d4976c0"/>
        <function-ref name="destination" scoped="" ref="0x2b527d497850"/>
        <function-ref name="setSource" scoped="" ref="0x2b527d4979e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527d497b70"/>
        <function-ref name="type" scoped="" ref="0x2b527d497d00"/>
        <function-ref name="setType" scoped="" ref="0x2b527d48e020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527d48e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527d48e340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527d48e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527d50f9f0" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527d50f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d50fd70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d50e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d50e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d50e340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d50e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527d50e760" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527d50e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d50eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527d4b37d0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527d4b37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d4b3b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d4b3d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d513020"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d5131b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d513340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527d510400" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527d510400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d510780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527d510910"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d510aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d510c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527d510dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527d5136c0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527d5136c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d513a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b527d50f060" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d50f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527d50f3e0"/>
        <function-ref name="noAck" scoped="" ref="0x2b527d50f570"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527d50f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527d513cb0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527d513cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527d5110a0"/>
        <function-ref name="source" scoped="" ref="0x2b527d511230"/>
        <function-ref name="address" scoped="" ref="0x2b527d5113c0"/>
        <function-ref name="destination" scoped="" ref="0x2b527d511550"/>
        <function-ref name="setSource" scoped="" ref="0x2b527d5116e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527d511870"/>
        <function-ref name="type" scoped="" ref="0x2b527d511a00"/>
        <function-ref name="setType" scoped="" ref="0x2b527d511b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527d511d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527d510020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527d5101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d5092f0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d5092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d509670"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d509800"/>
        <function-ref name="start" scoped="" ref="0x2b527d509990"/>
        <function-ref name="stop" scoped="" ref="0x2b527d509b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527d508e10" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527d508e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b527cce50d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d5071c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d507350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d5074e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d507670"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d507800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527d50cbc0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d50cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d509020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527d508320" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527d508320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b527cce50d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d5086a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d5052b0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d5052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d505630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d5057c0"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d505950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d505ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d505c70"/>
        <function-ref name="get" scoped="" ref="0x2b527d505e00"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d504020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d504660"/>
        <function-ref name="set" scoped="" ref="0x2b527d5041b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d504340"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d5044d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b527d500970" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b527d500970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b527cce50d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b527d500cf0"/>
        <function-ref name="offset" scoped="" ref="0x2b527d500e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b527d505030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d539c40" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d539c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d538020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d5381b0"/>
        <function-ref name="start" scoped="" ref="0x2b527d538340"/>
        <function-ref name="stop" scoped="" ref="0x2b527d5384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b527d5966e0" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2b527d5966e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d596a60"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d596bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b527d52db80" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b527d52db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527d526020"/>
        <function-ref name="stop" scoped="" ref="0x2b527d5261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b527d54a660" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2b527d54a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d54a9e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d54ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527d5395f0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d5395f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d539970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b527d523870" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2b527d523870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b527d523bf0"/>
        <function-ref name="flush" scoped="" ref="0x2b527d523d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b527d599c70" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2b527d599c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d598020"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d5981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b527d527410" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b527d527410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b527d527790"/>
        <function-ref name="resetSend" scoped="" ref="0x2b527d527920"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b527d527ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b527d527c40"/>
        <function-ref name="putData" scoped="" ref="0x2b527d527dd0"/>
        <function-ref name="putDone" scoped="" ref="0x2b527d531020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b527d5311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d531430" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d531430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d5317b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d531940"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d531ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d531c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d531df0"/>
        <function-ref name="get" scoped="" ref="0x2b527d52d020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d52d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d52d7f0"/>
        <function-ref name="set" scoped="" ref="0x2b527d52d340"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d52d4d0"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d52d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b527d592a00" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b527d592a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d592d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d591020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b527d532a40" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b527d532a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b527d532dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b527d536020"/>
        <function-ref name="startSend" scoped="" ref="0x2b527d5361b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b527d536340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b527d535080" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b527d535080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b527d535400"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b527d535590"/>
        <function-ref name="endPacket" scoped="" ref="0x2b527d535720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b527d65a020" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2b527d65a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d65a3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d65a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527d65fde0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527d65fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b527cce50d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d65e1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d65e350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d65e4e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d65e670"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d65e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b527d65a800" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2b527d65a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d65ab80"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d65ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527d65f6c0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527d65f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b527cce50d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d65fa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b527d65ec20" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2b527d65ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b527cce50d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b527d65d020"/>
        <function-ref name="offset" scoped="" ref="0x2b527d65d1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b527d65d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d65c920" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d65c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d65cca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d65ce30"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d65b020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d65b1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d65b340"/>
        <function-ref name="get" scoped="" ref="0x2b527d65b4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d65b660"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d65bca0"/>
        <function-ref name="set" scoped="" ref="0x2b527d65b980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d65b7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d65bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b527d65de80" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b527d65de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b527d65c220"/>
        <function-ref name="nextByte" scoped="" ref="0x2b527d65c3b0"/>
        <function-ref name="startSend" scoped="" ref="0x2b527d65c540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b527d65c6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b527d65d590" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b527d65d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b527d65d910"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b527d65daa0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b527d65dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b527d655e40" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b527d655e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d6541e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b527d654370"/>
        <function-ref name="receive" scoped="" ref="0x2b527d654500"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b527d654690"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b527d654820"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b527d6549b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d654b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b527d658e10" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b527d658e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b527d6551c0"/>
        <function-ref name="resetSend" scoped="" ref="0x2b527d655350"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b527d6554e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b527d655670"/>
        <function-ref name="putData" scoped="" ref="0x2b527d655800"/>
        <function-ref name="putDone" scoped="" ref="0x2b527d655990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b527d655b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d654dc0" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d654dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d653180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d653310"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d6534a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d653630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d6537c0"/>
        <function-ref name="get" scoped="" ref="0x2b527d653950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d653ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d6521b0"/>
        <function-ref name="set" scoped="" ref="0x2b527d653c70"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d653e00"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d652020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b527d6776c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2b527d6776c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b527d677a40"/>
        <function-ref name="offset" scoped="" ref="0x2b527d677bd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b527d677d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d6aa020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d6aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d6aa3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d6aa530"/>
        <function-ref name="start" scoped="" ref="0x2b527d6aa6c0"/>
        <function-ref name="stop" scoped="" ref="0x2b527d6aa850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527d6a9050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527d6a9050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d6a93d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6a9560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6a96f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d6a9880"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d6a9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b527d6a7df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b527d6a7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d6a61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527d6a6450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527d6a6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d6a67d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527d6a6960"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6a6af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6a6c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527d6a6e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b527d6999e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527d6999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527d6a1020"/>
        <function-ref name="clear" scoped="" ref="0x2b527d6a1750"/>
        <function-ref name="isValid" scoped="" ref="0x2b527d6a2890"/>
        <function-ref name="set" scoped="" ref="0x2b527d6a1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b527d6d48a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6d48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b527d6d4c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b527d6d4db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b527d693020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b527d6931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527d6a7210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527d6a7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d6a7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b527d6a4800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6a4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527d6a4b80"/>
        <function-ref name="noAck" scoped="" ref="0x2b527d6a4d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527d6a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527d6a5120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527d6a5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527d6a54a0"/>
        <function-ref name="source" scoped="" ref="0x2b527d6a5630"/>
        <function-ref name="address" scoped="" ref="0x2b527d6a57c0"/>
        <function-ref name="destination" scoped="" ref="0x2b527d6a5950"/>
        <function-ref name="setSource" scoped="" ref="0x2b527d6a5ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527d6a5c70"/>
        <function-ref name="type" scoped="" ref="0x2b527d6a5e00"/>
        <function-ref name="setType" scoped="" ref="0x2b527d6a4020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527d6a41b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527d6a4340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527d6a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b527d698af0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527d698af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527d6960d0"/>
        <function-ref name="clear" scoped="" ref="0x2b527d696800"/>
        <function-ref name="isValid" scoped="" ref="0x2b527d697970"/>
        <function-ref name="set" scoped="" ref="0x2b527d694020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d6c7680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d6c7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d6c7a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d6c7b90"/>
        <function-ref name="start" scoped="" ref="0x2b527d6c7d20"/>
        <function-ref name="stop" scoped="" ref="0x2b527d6c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b527d6f3d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b527d6f3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527d6b60e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527d6b6270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527d6b6400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527d6b6590"/>
        <function-ref name="setCca" scoped="" ref="0x2b527d6b6720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527d6b68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b527d6e6d20" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b527d6e6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b527d6f01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527d6c1760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527d6c1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d6c1ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527d6c1c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6c1e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6c0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527d6c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527d6c67f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527d6c67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d6c6b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6c6d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6c5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d6c51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d6c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b527d6c4880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b527d6c4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d6c4c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b527d6b8970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527d6b8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527d6b8cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527d6b8e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527d6bf030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527d6bf1c0"/>
        <function-ref name="getPower" scoped="" ref="0x2b527d6bf350"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527d6bf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b527d6b6bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6b6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b527d6f2020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b527d6f21b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b527d6f2340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b527d6f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527d6c5b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527d6c5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d6c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b527d6bf810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6bf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527d6bfb90"/>
        <function-ref name="noAck" scoped="" ref="0x2b527d6bfd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527d6be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b527d6f1020" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b527d6f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b527d6f13a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b527d6f1530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b527d6f16c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b527d6f1850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b527d6f19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527d6c2020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527d6c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527d6c23a0"/>
        <function-ref name="source" scoped="" ref="0x2b527d6c2530"/>
        <function-ref name="address" scoped="" ref="0x2b527d6c26c0"/>
        <function-ref name="destination" scoped="" ref="0x2b527d6c2850"/>
        <function-ref name="setSource" scoped="" ref="0x2b527d6c29e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527d6c2b70"/>
        <function-ref name="type" scoped="" ref="0x2b527d6c2d00"/>
        <function-ref name="setType" scoped="" ref="0x2b527d6c1020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527d6c11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527d6c1340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527d6c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b527d6b5a80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527d6b5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b527d6b5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d6e9b80" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d6e9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d6e3020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d6e31b0"/>
        <function-ref name="start" scoped="" ref="0x2b527d6e3340"/>
        <function-ref name="stop" scoped="" ref="0x2b527d6e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b527d6dc9d0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527d6dc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b527d6dcd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b527d6dbb70" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b527d6dbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b527d6da020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b527d6da1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b527d6da340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b527d6da4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b527d6da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b527d6dd140" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527d6dd140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527d6dd4c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527d6dd650"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527d6dd7e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527d6dd970"/>
        <function-ref name="getPower" scoped="" ref="0x2b527d6ddb00"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527d6ddc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b527d6dfd10" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b527d6dfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d6de0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6de270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6de400"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d6de590"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d6de720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b527d6db080" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b527d6db080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b527d6db400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b527d6db590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b527d6db720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b527d6db8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b527d6e0820" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b527d6e0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d6e0ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b527d6dc020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527d6dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527d6dc3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b527d6dc530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527d6dc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527d6e3d00" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d6e3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d6e20a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d6e2230"/>
        <function-ref name="request" scoped="" ref="0x2b527d6e23c0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d6e2550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d6e26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b527d6e2a00" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b527d6e2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d6e2d80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6e0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6e01b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d6e0340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d6e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b527d6df020" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b527d6df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d6df3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527d6df530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6df6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6df850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527d6df9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b527d6dea90" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b527d6dea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d6dee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d6d7390" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d6d7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d6d7710"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d6d78a0"/>
        <function-ref name="start" scoped="" ref="0x2b527d6d7a30"/>
        <function-ref name="stop" scoped="" ref="0x2b527d6d7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b527d6d5330" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b527d6d5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527d6d56b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527d6d5840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527d6d59d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527d6d5b60"/>
        <function-ref name="setCca" scoped="" ref="0x2b527d6d5cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527d6d5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527d6d7e80" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527d6d7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d6d6220"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6d63b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d6d6540"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d6d66d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d6d6860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527d6d6b40" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527d6d6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527d6d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527d71be80" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527d71be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527d718220"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527d7183b0"/>
        <function-ref name="start" scoped="" ref="0x2b527d718540"/>
        <function-ref name="stop" scoped="" ref="0x2b527d7186d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b527d7177e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b527d7177e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527d717b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527d717cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527d717e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527d716030"/>
        <function-ref name="setCca" scoped="" ref="0x2b527d7161c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527d716350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b527d70cae0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b527d70cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527d70ce60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527d70b020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527d70b1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527d70b340"/>
        <function-ref name="setCca" scoped="" ref="0x2b527d70b4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527d70b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b527d700020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527d700020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527d7003a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527d700530"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527d7006c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527d700850"/>
        <function-ref name="getPower" scoped="" ref="0x2b527d7009e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527d700b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b527d704d30" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b527d704d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d70c0e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d70c270"/>
        <function-ref name="modify" scoped="" ref="0x2b527d70c400"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d70c590"/>
        <function-ref name="resend" scoped="" ref="0x2b527d70c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527d718990" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527d718990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527d718d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527d717020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527d7171b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527d717340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527d7174d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b527d703020" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b527d703020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b527d7033a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b527d703530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b527d712020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b527d712020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527d7123a0"/>
        <function-ref name="stop" scoped="" ref="0x2b527d712530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b527d6f9660" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527d6f9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527d6f99e0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527d6f9b70"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527d6f9d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b527d70db50" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b527d70db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b527d714020"/>
        <function-ref name="rfOff" scoped="" ref="0x2b527d7141b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b527d714340"/>
        <function-ref name="startVReg" scoped="" ref="0x2b527d7144d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b527d714660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b527d7147f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b527d714980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b527d714b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d7037f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d7037f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d703b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d703d00"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d702020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d7021b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d702340"/>
        <function-ref name="get" scoped="" ref="0x2b527d7024d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d702660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d702ca0"/>
        <function-ref name="set" scoped="" ref="0x2b527d7027f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d702980"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d702b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b527d716640" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d716640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d7169c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d716b50"/>
        <function-ref name="request" scoped="" ref="0x2b527d716ce0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d716e70"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d715030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b527d73ce40" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2b527d73ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527d6f8310"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527d6f84a0"/>
        <function-ref name="isState" scoped="" ref="0x2b527d6f8630"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527d6f87c0"/>
        <function-ref name="requestState" scoped="" ref="0x2b527d6f8950"/>
        <function-ref name="forceState" scoped="" ref="0x2b527d6f8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b527d7379e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2b527d7379e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d737d60"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d736020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b527d738a10" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2b527d738a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d738d90"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d737020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b527d739a00" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2b527d739a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d739d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d738020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b527d770b80" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b527d770b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b527d77c020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b527d77c1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b527d77c340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b527d77c4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b527d77c660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b527d77c7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b527d77c980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b527d77cb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b527d77cca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b527d77ce30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b527d77b020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b527d77b1b0"/>
        <function-ref name="sync" scoped="" ref="0x2b527d77b340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b527d77b5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b527d77b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b527d76e020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b527d76e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d76ec10"/>
        <function-ref name="readDone" scoped="" ref="0x2b527d76a0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b527d77ba60" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b527d77ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b527d77bde0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b527d76f020"/>
        <function-ref name="rxOn" scoped="" ref="0x2b527d76f1b0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b527d76f340"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b527d76f4d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b527d76f660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b527d76f7f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b527d76f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527d780720" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d780720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d780aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d780c30"/>
        <function-ref name="request" scoped="" ref="0x2b527d780dc0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d77d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d77d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b527d766970" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b527d766970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b527d766cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b527d766e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b527d765030"/>
        <function-ref name="syncDone" scoped="" ref="0x2b527d7651c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b527d765350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b527d7654e0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b527d765670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b527d765800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b527d765990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b527d765b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b527d765cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b527d765e40"/>
        <function-ref name="sync" scoped="" ref="0x2b527d764020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b527d7642b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b527d764440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b527d7898e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b527d7898e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d789c60"/>
        <function-ref name="write" scoped="" ref="0x2b527d789df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b527d7aa020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b527d7aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b527d7aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b527d7a2d90" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2b527d7a2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527d7a0670"/>
        <function-ref name="fired" scoped="" ref="0x2b527d7a85d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527d7a0020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527d7a8a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527d7a0b30"/>
        <function-ref name="start" scoped="" ref="0x2b527d7a9bc0"/>
        <function-ref name="stop" scoped="" ref="0x2b527d7a8110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b527d78c5f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527d78c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d78c970"/>
        <function-ref name="write" scoped="" ref="0x2b527d78cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b527d79d380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b527d79d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d79d700"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d79d890"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d79da20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d79dbb0"/>
        <function-ref name="get" scoped="" ref="0x2b527d79dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d79c020"/>
        <function-ref name="set" scoped="" ref="0x2b527d79c1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d79c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b527d7adb40" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b527d7adb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d7ac750"/>
        <function-ref name="readDone" scoped="" ref="0x2b527d7acbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b527d7c1820" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2b527d7c1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d7c1ba0"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d7c1d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b527d7d11c0" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b527d7d11c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d7d1540"/>
        <function-ref name="write" scoped="" ref="0x2b527d7d16d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b527d7d1a70" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b527d7d1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d7d1df0"/>
        <function-ref name="write" scoped="" ref="0x2b527d7d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b527d7913d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b527d7913d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d791750"/>
        <function-ref name="write" scoped="" ref="0x2b527d7918e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b527d792810" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b527d792810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b527d792b90"/>
        <function-ref name="changed" scoped="" ref="0x2b527d792d20"/>
        <function-ref name="amGroup" scoped="" ref="0x2b527d799020"/>
        <function-ref name="setAddress" scoped="" ref="0x2b527d7991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b527d79e060" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b527d79e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d79e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d79e570"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d79e700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d79e890"/>
        <function-ref name="get" scoped="" ref="0x2b527d79ea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d79ebb0"/>
        <function-ref name="set" scoped="" ref="0x2b527d79ed40"/>
        <function-ref name="clr" scoped="" ref="0x2b527d79d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b527d7cf160" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527d7cf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527d7cf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b527d79c6a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b527d79c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d79ca20"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d79cbb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d79cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d79b020"/>
        <function-ref name="get" scoped="" ref="0x2b527d79b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d79b340"/>
        <function-ref name="set" scoped="" ref="0x2b527d79b4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d79b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527d7674a0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d7674a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d767820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b527d789020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527d789020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d7893a0"/>
        <function-ref name="write" scoped="" ref="0x2b527d789530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b527d7cfa80" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b527d7cfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527d7cfe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b527d7ce1d0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b527d7ce1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d7ce550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d7ce6e0"/>
        <function-ref name="request" scoped="" ref="0x2b527d7ce870"/>
        <function-ref name="granted" scoped="" ref="0x2b527d7cea00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d7ceb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b527d7ccd90" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2b527d7ccd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d7cb180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d7cb310"/>
        <function-ref name="request" scoped="" ref="0x2b527d7cb4a0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d7cb630"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d7cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b527d764740" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b527d764740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b527d764ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b527d764c50"/>
        <function-ref name="rxOn" scoped="" ref="0x2b527d764de0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b527d7ad020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b527d7ad1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b527d7ad340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b527d7ad4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b527d7ad660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b527d791c80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b527d791c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d78c0a0"/>
        <function-ref name="write" scoped="" ref="0x2b527d78c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b527d78ab00" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b527d78ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d78ae80"/>
        <function-ref name="write" scoped="" ref="0x2b527d791030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b527d7cd2e0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b527d7cd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527d7cd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527d7cba80" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527d7cba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527d7cbe00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527d7ca020"/>
        <function-ref name="led1On" scoped="" ref="0x2b527d7ca1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527d7ca340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527d7ca4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d7ca660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527d7ca7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527d7cae30"/>
        <function-ref name="set" scoped="" ref="0x2b527d7ca980"/>
        <function-ref name="led0On" scoped="" ref="0x2b527d7cab10"/>
        <function-ref name="led2On" scoped="" ref="0x2b527d7caca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b527d7c2940" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2b527d7c2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527d7c2cc0"/>
        <function-ref name="runTask" scoped="" ref="0x2b527d7c2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527d767b10" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527d767b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d766020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d7661b0"/>
        <function-ref name="request" scoped="" ref="0x2b527d766340"/>
        <function-ref name="granted" scoped="" ref="0x2b527d7664d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d766660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b527d796520" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b527d796520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d7968a0"/>
        <function-ref name="write" scoped="" ref="0x2b527d796a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b527d78da90" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b527d78da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527d796020"/>
        <function-ref name="write" scoped="" ref="0x2b527d7961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b527d79a0e0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b527d79a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527d79a460"/>
        <function-ref name="disable" scoped="" ref="0x2b527d79a5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b527d79a780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b527d79a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b527d7cc020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2b527d7cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527d7cc3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527d7cc530"/>
        <function-ref name="request" scoped="" ref="0x2b527d7cc6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b527d7cc850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527d7cc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b527d7cd9f0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b527d7cd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527d7cdd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527d82b7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d82b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d82bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b527d828220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b527d828220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527d825b30"/>
        <function-ref name="fired" scoped="" ref="0x2b527d826a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b527d8254e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527d825020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527d824020"/>
        <function-ref name="start" scoped="" ref="0x2b527d826090"/>
        <function-ref name="stop" scoped="" ref="0x2b527d8265a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527d823a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527d823a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527d823da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b527d8212e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b527d8212e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527d91cb30"/>
        <function-ref name="fired" scoped="" ref="0x2b527d91dae0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527d91c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527d91c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527d91b020"/>
        <function-ref name="start" scoped="" ref="0x2b527d91d110"/>
        <function-ref name="stop" scoped="" ref="0x2b527d91d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527ebe7b10" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527ebe7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ebe3390"/>
        <function-ref name="fired" scoped="" ref="0x2b527ebe5360"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ebe5ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ebe5820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ebe3850"/>
        <function-ref name="start" scoped="" ref="0x2b527ebe6970"/>
        <function-ref name="stop" scoped="" ref="0x2b527ebe6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527ebe72c0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527ebe72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ebe7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527ebe0c20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527ebe0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ebdc4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b527ebdd4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ebdde60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ebdd9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ebdc9a0"/>
        <function-ref name="start" scoped="" ref="0x2b527ebdea80"/>
        <function-ref name="stop" scoped="" ref="0x2b527ebdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527ebe03d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527ebe03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ebe0750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b527ebc6440" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ebc6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ebc67c0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ebc6950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ebc6ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ebc6c70"/>
        <function-ref name="fired" scoped="" ref="0x2b527ebc6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b527ebc99d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ebc99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ebc9d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ebc8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ebc81b0"/>
        <function-ref name="get" scoped="" ref="0x2b527ebc8340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ebc84d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ebc8660"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ebc87f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ebc8980"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ebc8b10"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ebc8ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ebc8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b527ebc7120" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ebc7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ebc74a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ebc7630"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ebc77c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ebc7950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ebc7ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ebc7c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ebc7e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ebc6020"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ebc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b527d84bba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b527d84bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527d849020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527d8491b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527d849340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527d8494d0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d849660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b527d84e4d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527d84e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d84e850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527d84e9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527d84eb70"/>
        <function-ref name="get" scoped="" ref="0x2b527d84ed00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527d84d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d84d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527d84d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d84d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d84d660"/>
        <function-ref name="setMode" scoped="" ref="0x2b527d84d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527d84d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b527d84c280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d84c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527d84c600"/>
        <function-ref name="getControl" scoped="" ref="0x2b527d84c790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527d84c920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527d84cab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527d84cc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527d84cdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527d84b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527d84b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b527d84b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b527ebbc0c0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ebbc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ebbc440"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ebbc5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ebbc760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ebbc8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b527ebbca80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b527ebbf710" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ebbf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ebbfa90"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ebbfc20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ebbfdb0"/>
        <function-ref name="get" scoped="" ref="0x2b527ebbe020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ebbe1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ebbe340"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ebbe4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ebbe660"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ebbe7f0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ebbe980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ebbeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527ebc35b0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527ebc35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ebc1df0"/>
        <function-ref name="fired" scoped="" ref="0x2b527ebc2df0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ebc17a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ebc12e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ebbf2e0"/>
        <function-ref name="start" scoped="" ref="0x2b527ebc2420"/>
        <function-ref name="stop" scoped="" ref="0x2b527ebc2930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527ebc4ca0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527ebc4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ebc30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b527ebbeda0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ebbeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ebbd180"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ebbd310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ebbd4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ebbd630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ebbd7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ebbd950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ebbdae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ebbdc70"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ebbde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b527d898020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527d898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527d898e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d897800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d897340"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d897cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b527d8c4950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b527d8c4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527d8c2780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d8c1150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d8c2c40"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d8c1610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b527d8e05f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527d8e05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527d8c5430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d8c5db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d8c58f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527d8c42a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527ebd9020" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527ebd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ebd6870"/>
        <function-ref name="fired" scoped="" ref="0x2b527ebd8840"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ebd6220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ebd8d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ebd6d30"/>
        <function-ref name="start" scoped="" ref="0x2b527ebd9e30"/>
        <function-ref name="stop" scoped="" ref="0x2b527ebd8380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b527ebd3780" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b527ebd3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ebcf020"/>
        <function-ref name="fired" scoped="" ref="0x2b527ebd0020"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ebd09a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ebd04e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ebcf4e0"/>
        <function-ref name="start" scoped="" ref="0x2b527ebd25d0"/>
        <function-ref name="stop" scoped="" ref="0x2b527ebd2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527ebd53d0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527ebd53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527ebd4240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ebd4bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ebd4700"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ebd30d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b527d9156a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b527d9156a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d915a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d915bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d915d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d914020"/>
        <function-ref name="get" scoped="" ref="0x2b527d9141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d914340"/>
        <function-ref name="set" scoped="" ref="0x2b527d9144d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d914660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b527d9149d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b527d9149d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d914d50"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d913020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d9131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d913340"/>
        <function-ref name="get" scoped="" ref="0x2b527d9134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d913660"/>
        <function-ref name="set" scoped="" ref="0x2b527d9137f0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d913980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b527d913ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b527d913ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d9120a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d912230"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d9123c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d912550"/>
        <function-ref name="get" scoped="" ref="0x2b527d9126e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d912870"/>
        <function-ref name="set" scoped="" ref="0x2b527d912a00"/>
        <function-ref name="clr" scoped="" ref="0x2b527d912b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b527d916370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b527d916370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d9166f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d916880"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d916a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d916ba0"/>
        <function-ref name="get" scoped="" ref="0x2b527d916d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d915020"/>
        <function-ref name="set" scoped="" ref="0x2b527d9151b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d915340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b527d910380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b527d910380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d910700"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d910890"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d910a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d910bb0"/>
        <function-ref name="get" scoped="" ref="0x2b527d910d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d90f020"/>
        <function-ref name="set" scoped="" ref="0x2b527d90f1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d90f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b527d9170e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b527d9170e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d917460"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d9175f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d917780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d917910"/>
        <function-ref name="get" scoped="" ref="0x2b527d917aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d917c30"/>
        <function-ref name="set" scoped="" ref="0x2b527d917dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d916020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b527d911020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b527d911020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d9113a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d911530"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d9116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d911850"/>
        <function-ref name="get" scoped="" ref="0x2b527d9119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d911b70"/>
        <function-ref name="set" scoped="" ref="0x2b527d911d00"/>
        <function-ref name="clr" scoped="" ref="0x2b527d910020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d90d930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d90d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d90dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d90de40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d90c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d90c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d90c340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d90c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d90c660"/>
        <function-ref name="get" scoped="" ref="0x2b527d90c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d90c980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d90cb10"/>
        <function-ref name="set" scoped="" ref="0x2b527d90cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d90ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d90b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d90b2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d90b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d90e710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d90e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d90ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d90ec20"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d90edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d90d020"/>
        <function-ref name="get" scoped="" ref="0x2b527d90d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d90d340"/>
        <function-ref name="set" scoped="" ref="0x2b527d90d4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d90d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d958480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d958480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d958800"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d958990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d958b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d958cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d958e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d957020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d9571b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d957340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d9574d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d957660"/>
        <function-ref name="set" scoped="" ref="0x2b527d9577f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d957980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d957b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d957da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d956020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d9091b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d9091b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d909530"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d9096c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d909850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d9099e0"/>
        <function-ref name="get" scoped="" ref="0x2b527d909b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d909d00"/>
        <function-ref name="set" scoped="" ref="0x2b527d958020"/>
        <function-ref name="clr" scoped="" ref="0x2b527d9581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d953020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d953020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d9533a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d953530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d9536c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d953850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d9539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d953b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d953d00"/>
        <function-ref name="get" scoped="" ref="0x2b527d952020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d9521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d952340"/>
        <function-ref name="set" scoped="" ref="0x2b527d9524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d952660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d9527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d952a80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d952c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d955d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d955d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d954180"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d954310"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d9544a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d954630"/>
        <function-ref name="get" scoped="" ref="0x2b527d9547c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d954950"/>
        <function-ref name="set" scoped="" ref="0x2b527d954ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d954c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d94ede0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d94ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d94d180"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d94d310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d94d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d94d630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d94d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d94d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d94dae0"/>
        <function-ref name="get" scoped="" ref="0x2b527d94dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d94de00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d94c020"/>
        <function-ref name="set" scoped="" ref="0x2b527d94c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d94c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d94c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d94c760"/>
        <function-ref name="clr" scoped="" ref="0x2b527d94c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d94fb70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d94fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d94e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d94e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d94e340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d94e4d0"/>
        <function-ref name="get" scoped="" ref="0x2b527d94e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d94e7f0"/>
        <function-ref name="set" scoped="" ref="0x2b527d94e980"/>
        <function-ref name="clr" scoped="" ref="0x2b527d94eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d949930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d949930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d949cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d949e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d948020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d9481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d948340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d9484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d948660"/>
        <function-ref name="get" scoped="" ref="0x2b527d9487f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d948980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d948b10"/>
        <function-ref name="set" scoped="" ref="0x2b527d948ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d948e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d947020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d9472b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d947440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d94a710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d94a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d94aa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d94ac20"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d94adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d949020"/>
        <function-ref name="get" scoped="" ref="0x2b527d9491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d949340"/>
        <function-ref name="set" scoped="" ref="0x2b527d9494d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d949660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d944480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d944480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d944800"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d944990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d944b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d944cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d944e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d943020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d9431b0"/>
        <function-ref name="get" scoped="" ref="0x2b527d943340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d9434d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d943660"/>
        <function-ref name="set" scoped="" ref="0x2b527d9437f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d943980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d943b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d943da0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d942020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d9451b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d9451b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d945530"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d9456c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d945850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d9459e0"/>
        <function-ref name="get" scoped="" ref="0x2b527d945b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d945d00"/>
        <function-ref name="set" scoped="" ref="0x2b527d944020"/>
        <function-ref name="clr" scoped="" ref="0x2b527d9441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527d93f020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527d93f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d93f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d93f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d93f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d93f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d93f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d93fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d93fd00"/>
        <function-ref name="get" scoped="" ref="0x2b527d93e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d93e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d93e340"/>
        <function-ref name="set" scoped="" ref="0x2b527d93e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d93e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d93e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d93ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b527d93ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527d941d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d941d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d940180"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d940310"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d9404a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d940630"/>
        <function-ref name="get" scoped="" ref="0x2b527d9407c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d940950"/>
        <function-ref name="set" scoped="" ref="0x2b527d940ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d940c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b527d9795a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b527d9795a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b527d979920"/>
        <function-ref name="disable" scoped="" ref="0x2b527d979ab0"/>
        <function-ref name="captured" scoped="" ref="0x2b527d979c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b527d979dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b527d97e210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b527d97e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527d97e590"/>
        <function-ref name="disable" scoped="" ref="0x2b527d97e720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b527d97e8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b527d97ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b527d97ee30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b527d97ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527d97d1e0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d97d370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b527d97d500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b527d97d690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2b527d963da0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2b527d963da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527d962180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b527d962310"/>
        <function-ref name="captured" scoped="" ref="0x2b527d9624a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527d962630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527d9627c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b527d962950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b527d965020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b527d965020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b527d9653a0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d965530"/>
        <function-ref name="captured" scoped="" ref="0x2b527d9656c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b527d965850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b527d965ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527d965ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527d965e60"/>
        <function-ref name="getControl" scoped="" ref="0x2b527d963020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527d9631b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527d963340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527d9634d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527d963660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527d9637f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527d963980"/>
        <function-ref name="setControl" scoped="" ref="0x2b527d963b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2b527d962c20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527d962c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527d961020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527d9611b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527d961340"/>
        <function-ref name="toggle" scoped="" ref="0x2b527d9614d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527d961660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527d9617f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527d961980"/>
        <function-ref name="get" scoped="" ref="0x2b527d961b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527d961ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527d961e30"/>
        <function-ref name="set" scoped="" ref="0x2b527d960020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527d9601b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527d960340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527d9605d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527d960760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b527d9a5c40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b527d9a5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9a4020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9a41b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9a4340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9a44d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9a4660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9a47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b527d99bbc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b527d99bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d99a020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d99a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d99a340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d99a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d99a660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d99a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b527d9a2bc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b527d9a2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9a1020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9a11b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9a1340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9a14d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9a1660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b527d9a0bc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b527d9a0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d99f020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d99f1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d99f340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d99f4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d99f660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d99f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b527d9abd20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b527d9abd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9a60e0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9a6270"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9a6400"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9a6590"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9a6720"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9a68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b527d99dbc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b527d99dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d99c0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d99c230"/>
        <function-ref name="disable" scoped="" ref="0x2b527d99c3c0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d99c550"/>
        <function-ref name="enable" scoped="" ref="0x2b527d99c6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d99c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b527d9a4bc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b527d9a4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9a3020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9a31b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9a3340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9a34d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9a3660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b527d99abc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b527d99abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d999020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9991b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d999340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9994d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d999660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b527d9a8e70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b527d9a8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9ac220"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9ac3b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9ac540"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9ac6d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9ac860"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9ac9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b527d99fbc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b527d99fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d99e020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d99e1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d99e340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d99e4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d99e660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d99e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b527d9a6c80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b527d9a6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9a50a0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9a5230"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9a53c0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9a5550"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9a56e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9a5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b527d99cc40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b527d99cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d99b020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d99b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d99b340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d99b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d99b660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d99b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b527d9a3bc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b527d9a3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9a2020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9a21b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9a2340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9a24d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9a2660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b527d9a1bc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b527d9a1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9a0020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9a01b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9a0340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9a04d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9a0660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b527d9acdc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b527d9acdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d9ab180"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9ab310"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9ab4a0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9ab630"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9ab7c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9ab950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b527d99ebc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b527d99ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d99d020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d99d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d99d340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d99d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d99d660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d99d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b527d991a30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b527d991a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d991db0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d990020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9901b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d990340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9904d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d990660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b527d987bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b527d987bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d986020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9861b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d986340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9864d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d986660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b527d98ea30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b527d98ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d98edb0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d98d020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d98d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d98d340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d98d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d98d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b527d98ca30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b527d98ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d98cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d98b020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d98b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d98b340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d98b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d98b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b527d994a30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b527d994a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d994db0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d993020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9931b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d993340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9934d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d993660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b527d989a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b527d989a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d988020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9881b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d988340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9884d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d988660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b527d990a30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b527d990a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d990db0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d98f020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d98f1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d98f340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d98f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d98f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b527d986bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b527d986bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d985020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9851b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d985340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9854d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d985660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b527d9989d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b527d9989d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d998d50"/>
        <function-ref name="fired" scoped="" ref="0x2b527d995020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9951b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d995340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9954d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d995660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b527d98ba30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b527d98ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d98bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d98a020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d98a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d98a340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d98a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d98a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b527d993a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b527d993a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d993db0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d991020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9911b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d991340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9914d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d991660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b527d988bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b527d988bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d987020"/>
        <function-ref name="fired" scoped="" ref="0x2b527d9871b0"/>
        <function-ref name="disable" scoped="" ref="0x2b527d987340"/>
        <function-ref name="edge" scoped="" ref="0x2b527d9874d0"/>
        <function-ref name="enable" scoped="" ref="0x2b527d987660"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d9877f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b527d98fa30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b527d98fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d98fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d98e020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d98e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d98e340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d98e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d98e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b527d98da30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b527d98da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d98ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d98c020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d98c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d98c340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d98c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d98c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b527d995a30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b527d995a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d995db0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d994020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9941b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d994340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9944d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d994660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b527d98aa30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b527d98aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527d98adb0"/>
        <function-ref name="fired" scoped="" ref="0x2b527d989020"/>
        <function-ref name="disable" scoped="" ref="0x2b527d9891b0"/>
        <function-ref name="edge" scoped="" ref="0x2b527d989340"/>
        <function-ref name="enable" scoped="" ref="0x2b527d9894d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b527d989660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b527daa7610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b527daa7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527daa7990"/>
        <function-ref name="fired" scoped="" ref="0x2b527daa7b20"/>
        <function-ref name="disable" scoped="" ref="0x2b527daa7cb0"/>
        <function-ref name="edge" scoped="" ref="0x2b527daa7e40"/>
        <function-ref name="enable" scoped="" ref="0x2b527da99020"/>
        <function-ref name="getValue" scoped="" ref="0x2b527da991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b527da53a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b527da53a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527da53db0"/>
        <function-ref name="disable" scoped="" ref="0x2b527daa7020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b527daa71b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b527daa7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b527da97610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b527da97610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527da97990"/>
        <function-ref name="fired" scoped="" ref="0x2b527da97b20"/>
        <function-ref name="disable" scoped="" ref="0x2b527da97cb0"/>
        <function-ref name="edge" scoped="" ref="0x2b527da97e40"/>
        <function-ref name="enable" scoped="" ref="0x2b527da96020"/>
        <function-ref name="getValue" scoped="" ref="0x2b527da961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b527da98a70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b527da98a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527da98df0"/>
        <function-ref name="disable" scoped="" ref="0x2b527da97020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b527da971b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b527da97340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b527ddc2e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b527ddc2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc1410"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b527ddcb160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b527ddcb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddcb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b527ddc5e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527ddc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc4210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b527ddbf880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b527ddbf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbfc00"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b527de1c0a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b527de1c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1c420"/>
        <function-ref name="write" scoped="" ref="0x2b527de1c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b527ddbe0a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b527ddbe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbe420"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbe5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b527de11500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b527de11500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de11880"/>
        <function-ref name="write" scoped="" ref="0x2b527de11a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b527de13500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b527de13500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de13880"/>
        <function-ref name="write" scoped="" ref="0x2b527de13a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b527ddca490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b527ddca490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddca810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b527de19880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b527de19880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de19c00"/>
        <function-ref name="write" scoped="" ref="0x2b527de19d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b527de14500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527de14500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de14880"/>
        <function-ref name="write" scoped="" ref="0x2b527de14a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b527ddc4e50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b527ddc4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc3210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b527ddc3e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b527ddc3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc2210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b527ddba880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b527ddba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbac00"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b527ddbb0a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b527ddbb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbb420"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b527ddbe880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b527ddbe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbec00"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b527ddcea90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527ddcea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527ddcee10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527ddcd020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527ddcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b527ddc9e00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527ddc9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b527ddc8490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b527ddc8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc8910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b527de18c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527de18c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de160a0"/>
        <function-ref name="write" scoped="" ref="0x2b527de16230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b527ddc8be0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b527ddc8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b527de14ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527de14ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de130a0"/>
        <function-ref name="write" scoped="" ref="0x2b527de13230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b527ddc9160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527ddc9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b527de190a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b527de190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de19420"/>
        <function-ref name="write" scoped="" ref="0x2b527de195b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b527ddc3670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b527ddc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc39f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b527ddc4670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527ddc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc49f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b527ddcdad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b527ddcdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddcde50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b527de1a0a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b527de1a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1a420"/>
        <function-ref name="write" scoped="" ref="0x2b527de1a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b527de1c880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b527de1c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1cc00"/>
        <function-ref name="write" scoped="" ref="0x2b527de1cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b527de1a880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b527de1a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1ac00"/>
        <function-ref name="write" scoped="" ref="0x2b527de1ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b527de12ce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b527de12ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de110a0"/>
        <function-ref name="write" scoped="" ref="0x2b527de11230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b527de13ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b527de13ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de120a0"/>
        <function-ref name="write" scoped="" ref="0x2b527de12230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b527ddbb880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b527ddbb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbbc00"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b527de1b0a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b527de1b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1b420"/>
        <function-ref name="write" scoped="" ref="0x2b527de1b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b527de15ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b527de15ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de140a0"/>
        <function-ref name="write" scoped="" ref="0x2b527de14230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b527ddbd880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b527ddbd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbdc00"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b527de11ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b527de11ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527de0f0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527de0f230"/>
        <function-ref name="write" scoped="" ref="0x2b527de0f3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527de0f550"/>
        <function-ref name="readDone" scoped="" ref="0x2b527de0f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b527ddcd480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b527ddcd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddcd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b527ddc5670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b527ddc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc59f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b527ddc2670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b527ddc2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc29f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b527de1d0a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b527de1d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1d420"/>
        <function-ref name="write" scoped="" ref="0x2b527de1d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b527ddbd0a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b527ddbd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbd420"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b527de1d880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b527de1d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1dc00"/>
        <function-ref name="write" scoped="" ref="0x2b527de1dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b527ddc1870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b527ddc1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddc1bf0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddc1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b527ddcb7b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b527ddcb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddcbb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b527ddbf0a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b527ddbf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbf420"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527ddcfe20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527ddcfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527ddce1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527ddce350"/>
        <function-ref name="request" scoped="" ref="0x2b527ddce4e0"/>
        <function-ref name="granted" scoped="" ref="0x2b527ddce670"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527ddce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b527ddc72f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b527ddc72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b527ddc5020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b527ddc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b527de15500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b527de15500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de15880"/>
        <function-ref name="write" scoped="" ref="0x2b527de15a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b527de16ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b527de16ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de150a0"/>
        <function-ref name="write" scoped="" ref="0x2b527de15230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b527ddc97b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527ddc97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b527de16500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527de16500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de16880"/>
        <function-ref name="write" scoped="" ref="0x2b527de16a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b527de12500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b527de12500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de12880"/>
        <function-ref name="write" scoped="" ref="0x2b527de12a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b527ddba0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b527ddba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddba420"/>
        <function-ref name="write" scoped="" ref="0x2b527ddba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b527de1b880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b527de1b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1bc00"/>
        <function-ref name="write" scoped="" ref="0x2b527de1bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b527ddcbe00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b527ddcbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddca1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b527ddcaae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b527ddcaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddcae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b527ddbc0a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b527ddbc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbc420"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b527ddc7940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b527ddc7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddc7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b527ddbc880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b527ddbc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddbcc00"/>
        <function-ref name="write" scoped="" ref="0x2b527ddbcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b527de180a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b527de180a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de18820"/>
        <function-ref name="write" scoped="" ref="0x2b527de189b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b527de0f9b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b527de0f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527de0fd30"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527de0e020"/>
        <function-ref name="write" scoped="" ref="0x2b527de0e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527de0e340"/>
        <function-ref name="readDone" scoped="" ref="0x2b527de0e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b527daac630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b527daac630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527daac9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527daacb40"/>
        <function-ref name="write" scoped="" ref="0x2b527daaccd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527daace60"/>
        <function-ref name="readDone" scoped="" ref="0x2b527daab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b527daae680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daae680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527daaea00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527daaeb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527daaed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b527daab8c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b527daab8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527daabc40"/>
        <function-ref name="write" scoped="" ref="0x2b527daabdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b527daaa6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b527daaa6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527daaaa70"/>
        <function-ref name="write" scoped="" ref="0x2b527daaac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527dab1960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527dab1960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dab1ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527dab1e70"/>
        <function-ref name="request" scoped="" ref="0x2b527daae030"/>
        <function-ref name="granted" scoped="" ref="0x2b527daae1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527daae350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b527daa9510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b527daa9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527daa9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b527dae9680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b527dae9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527dae9a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527dae9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b527dafabb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b527dafabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527daf8020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527daf81b0"/>
        <function-ref name="write" scoped="" ref="0x2b527daf8340"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527daf84d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b527daf8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b527daa8930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527daa8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527daa8cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527daa8e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527dafb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b527daf2080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b527daf2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b527daf2400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b527daf1020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2b527daf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527daf13a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527daf1530"/>
        <function-ref name="isState" scoped="" ref="0x2b527daf16c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527daf1850"/>
        <function-ref name="requestState" scoped="" ref="0x2b527daf19e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b527daf1b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b527daf5400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b527daf5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527daf5780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527daf5910"/>
        <function-ref name="request" scoped="" ref="0x2b527daf5aa0"/>
        <function-ref name="granted" scoped="" ref="0x2b527daf5c30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527daf5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b527daf7020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b527daf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527daf73a0"/>
        <function-ref name="write" scoped="" ref="0x2b527daf7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b527daf7db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b527daf7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527daf6180"/>
        <function-ref name="write" scoped="" ref="0x2b527daf6310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527daf1df0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527daf1df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527daf01c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527daf0350"/>
        <function-ref name="led1On" scoped="" ref="0x2b527daf04e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527daf0670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527daf0800"/>
        <function-ref name="get" scoped="" ref="0x2b527daf0990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527daf0b20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527daea1b0"/>
        <function-ref name="set" scoped="" ref="0x2b527daf0cb0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527daf0e40"/>
        <function-ref name="led2On" scoped="" ref="0x2b527daea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527dafb810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527dafb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dafbb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527dafbd20"/>
        <function-ref name="request" scoped="" ref="0x2b527dafa020"/>
        <function-ref name="granted" scoped="" ref="0x2b527dafa1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527dafa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b527dae4120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2b527dae4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527dae44a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b527dae4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b527daf6ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b527daf6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527daf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b527db38770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b527db38770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527db38af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527db38c80"/>
        <function-ref name="isState" scoped="" ref="0x2b527db38e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527db30020"/>
        <function-ref name="requestState" scoped="" ref="0x2b527db301b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b527db30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b527db33280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b527db33280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527db33600"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527db33790"/>
        <function-ref name="isState" scoped="" ref="0x2b527db33920"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527db33ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2b527db33c40"/>
        <function-ref name="forceState" scoped="" ref="0x2b527db33dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527db2f020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527db2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527db2f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b527db2fb70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b527db2fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527db2e020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527db2e1b0"/>
        <function-ref name="isState" scoped="" ref="0x2b527db2e340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527db2e4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b527db2e660"/>
        <function-ref name="forceState" scoped="" ref="0x2b527db2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b527dd91020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b527dd91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527dd913a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527dd91530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b527db6d8f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b527db6d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b527db6dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527db6ec40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527db6ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527db6d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527db6d1b0"/>
        <function-ref name="request" scoped="" ref="0x2b527db6d340"/>
        <function-ref name="granted" scoped="" ref="0x2b527db6d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527db6d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527ecb9440" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ecb9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527ecb97c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527ecb9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b527ecb8d70" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b527ecb8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527ecb7180"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527ecb7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b527ecb75a0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b527ecb75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b527ecb7920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b527ecb9be0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b527ecb9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b527ecb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527ecbb770" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527ecbb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527ecbbaf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527ecbbc80"/>
        <function-ref name="request" scoped="" ref="0x2b527ecbbe10"/>
        <function-ref name="granted" scoped="" ref="0x2b527ecb9020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527ecb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b527ecb82b0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b527ecb82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b527ecb8630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b527ecb87c0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b527ecb8950"/>
        <function-ref name="write" scoped="" ref="0x2b527ecb8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b527db5b6b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527db5b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527db5ba30"/>
        <function-ref name="configure" scoped="" ref="0x2b527db5bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b527db58850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b527db58850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527db58bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527db58d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b527db56a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b527db56a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b527db56dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b527db59020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b527db59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b527db593a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b527db57690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b527db57690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527db57a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527db57ba0"/>
        <function-ref name="request" scoped="" ref="0x2b527db57d30"/>
        <function-ref name="granted" scoped="" ref="0x2b527db56020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527db561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527db5c430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527db5c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527db5c7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527db5c940"/>
        <function-ref name="request" scoped="" ref="0x2b527db5cad0"/>
        <function-ref name="granted" scoped="" ref="0x2b527db5cc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527db5cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b527db596a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b527db596a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b527db59a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b527db59bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b527db59d40"/>
        <function-ref name="write" scoped="" ref="0x2b527db58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b527dbae2a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527dbae2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527dbae620"/>
        <function-ref name="txDone" scoped="" ref="0x2b527dbae7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b527dbb0250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dbb0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527dbb05f0"/>
        <function-ref name="configure" scoped="" ref="0x2b527dbb0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b527dbafc50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b527dbafc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527dc08020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527dc081b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b527dc073e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b527dc073e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b527dc07780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b527dbb0a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b527dbb0a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b527dbb0d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b527dc07a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b527dc07a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527dc07dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527dc06020"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527dc061b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527dc06340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527dc064d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527dc06660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527dc067f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527dc06980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527dc06b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527dc06ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527dc06e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527dc05020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527dc051b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527dc05440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527dc055d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527dc05760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527dc058f0"/>
        <function-ref name="isUart" scoped="" ref="0x2b527dc05a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527dc05c10"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527dc05da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527dc04020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527dc041b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527dc04340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527dc044d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527dc04660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527dc049f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527dc04b80"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527dc04d10"/>
        <function-ref name="tx" scoped="" ref="0x2b527dc03020"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527dc031b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527dc03340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527dc034d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527dc03660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527dc037f0"/>
        <function-ref name="rx" scoped="" ref="0x2b527dc03980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527dc03b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527dc03ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527dc03e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527dc02020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527dc021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527dc02c20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527dc02c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527dc01020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527dc011b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b527dc01340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527dc014d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527dc01660"/>
        <function-ref name="get" scoped="" ref="0x2b527dc017f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527dc01980"/>
        <function-ref name="led2On" scoped="" ref="0x2b527dc00020"/>
        <function-ref name="set" scoped="" ref="0x2b527dc01ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527dc01b10"/>
        <function-ref name="led0On" scoped="" ref="0x2b527dc01e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b527dc085b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b527dc085b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dc08950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527dc08ae0"/>
        <function-ref name="request" scoped="" ref="0x2b527dc08c70"/>
        <function-ref name="granted" scoped="" ref="0x2b527dc08e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527dc07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527dbb1470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527dbb1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dbb1810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527dbb19a0"/>
        <function-ref name="request" scoped="" ref="0x2b527dbb1b30"/>
        <function-ref name="granted" scoped="" ref="0x2b527dbb1cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527dbb1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b527dbaf060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b527dbaf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b527dbaf3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b527dbaf570"/>
        <function-ref name="splitRead" scoped="" ref="0x2b527dbaf700"/>
        <function-ref name="write" scoped="" ref="0x2b527dbaf890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b527dc02480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b527dc02480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527dc02800"/>
        <function-ref name="txDone" scoped="" ref="0x2b527dc02990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2b527dc002f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2b527dc002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527dc00670"/>
        <function-ref name="runTask" scoped="" ref="0x2b527dc00800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b527dbf35e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b527dbf35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527dbf3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b527dbf4d10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527dbf4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527dbf30e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b527dbf3270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b527dbf8020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527dbf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527dbf83a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527dbf8530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527dbf86c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527dbf8850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527dbf89e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527dbf8b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527dbf8d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527dbf7020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527dbf71b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527dbf7340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527dbf74d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527dbf7660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527dbf77f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527dbf7a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527dbf7c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527dbf7da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527dbf6020"/>
        <function-ref name="isUart" scoped="" ref="0x2b527dbf61b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527dbf6340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527dbf64d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527dbf6660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527dbf67f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527dbf6980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527dbf6b10"/>
        <function-ref name="getMode" scoped="" ref="0x2b527dbf6ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527dbf5220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527dbf53b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527dbf5540"/>
        <function-ref name="tx" scoped="" ref="0x2b527dbf56d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527dbf5860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527dbf59f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527dbf5b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527dbf5d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527dbf4020"/>
        <function-ref name="rx" scoped="" ref="0x2b527dbf41b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527dbf4340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527dbf44d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527dbf4660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527dbf47f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527dbf4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b527dc14b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b527dc14b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527dc13020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527dc131b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527dc13340"/>
        <function-ref name="toggle" scoped="" ref="0x2b527dc134d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527dc13660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527dc137f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527dc13980"/>
        <function-ref name="get" scoped="" ref="0x2b527dc13b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527dc13ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527dc13e30"/>
        <function-ref name="set" scoped="" ref="0x2b527dc12020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527dc121b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527dc12340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527dc125d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527dc12760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b527dbeb780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b527dbeb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527dbebb00"/>
        <function-ref name="txDone" scoped="" ref="0x2b527dbebc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b527dc12b20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b527dc12b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527dc11020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527dc111b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527dc11340"/>
        <function-ref name="toggle" scoped="" ref="0x2b527dc114d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527dc11660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527dc117f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527dc11980"/>
        <function-ref name="get" scoped="" ref="0x2b527dc11b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527dc11ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527dc11e30"/>
        <function-ref name="set" scoped="" ref="0x2b527dc10020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527dc101b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527dc10340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527dc105d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527dc10760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b527dc10b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b527dc10b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527dc0f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527dc0f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527dc0f340"/>
        <function-ref name="toggle" scoped="" ref="0x2b527dc0f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527dc0f660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527dc0f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527dc0f980"/>
        <function-ref name="get" scoped="" ref="0x2b527dc0fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527dc0fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527dc0fe30"/>
        <function-ref name="set" scoped="" ref="0x2b527dc0e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527dc0e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527dc0e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527dc0e5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527dc0e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b527dbf2c70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b527dbf2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527dbef020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527dbef1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527dbef340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527dbef4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527dbef660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527dbef7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527dbef980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527dbefb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527dbefca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527dbefe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527dbee020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527dbee1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527dbee340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527dbee5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527dbee760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527dbee8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527dbeea80"/>
        <function-ref name="isUart" scoped="" ref="0x2b527dbeec10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527dbeeda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527dbed020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527dbed1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527dbed340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527dbed4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527dbed660"/>
        <function-ref name="getMode" scoped="" ref="0x2b527dbed7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527dbedb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527dbedd10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527dbec020"/>
        <function-ref name="tx" scoped="" ref="0x2b527dbec1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527dbec340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527dbec4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527dbec660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527dbec7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527dbec980"/>
        <function-ref name="rx" scoped="" ref="0x2b527dbecb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527dbecca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527dbece30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527dbeb020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527dbeb1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527dbeb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2b527dc1ed10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b527dc1ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b527dbe90e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b527dbe9270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b527dbe9400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b527dbe9590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b527dbe9720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b527dbe98b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b527dbe9a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b527dbe9bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527dbe9d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b527dbe8020"/>
        <function-ref name="getData" scoped="" ref="0x2b527dbe81b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b527dbe8340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b527dbe84d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b527dbe8760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b527dbe88f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b527dbe8a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b527dbe8c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b527dbe8da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b527dc1c020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b527dc1c1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b527dc1c340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b527dc1c4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b527dc1c660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b527dc1c7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b527dc1c980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b527dc1cd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b527dc1b020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b527dc1b1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b527dc1b340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b527dc1b4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b527dc1b660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b527dc1b7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b527dc1b980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b527dc1bb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b527dc1bca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b527dc1be30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b527dc1a020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b527dc1a1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b527dc1a340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b527dc1a4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b527dc1a660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b527dc1a7f0"/>
        <function-ref name="setData" scoped="" ref="0x2b527dc1a980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b527dc1ab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b527dc1aca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b527dc1ae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b527dc19020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b527dc191b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b527dc19340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b527dc198d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b527dc19a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b527dc19bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b527dc19d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b527dc18020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b527dc181b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b527dc18340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b527dc184d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b527dc18660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b527dc187f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b527dc16b20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b527dc16b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527dc15020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527dc151b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527dc15340"/>
        <function-ref name="toggle" scoped="" ref="0x2b527dc154d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527dc15660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527dc157f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527dc15980"/>
        <function-ref name="get" scoped="" ref="0x2b527dc15b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527dc15ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527dc15e30"/>
        <function-ref name="set" scoped="" ref="0x2b527dc14020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527dc141b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527dc14340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527dc145d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527dc14760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b527dbea150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527dbea150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527dbea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b527dc18bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b527dc18bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527dc17020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527dc171b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527dc17340"/>
        <function-ref name="toggle" scoped="" ref="0x2b527dc174d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527dc17660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527dc177f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527dc17980"/>
        <function-ref name="get" scoped="" ref="0x2b527dc17b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527dc17ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527dc17e30"/>
        <function-ref name="set" scoped="" ref="0x2b527dc16020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527dc161b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527dc16340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527dc165d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527dc16760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527ecb0d90" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ecb0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527ecaf180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527ecaf310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b527eca9020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b527eca9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527eca93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527eca15d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527eca15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527eca1950"/>
        <function-ref name="configure" scoped="" ref="0x2b527eca1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b527eca9630" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b527eca9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b527eca99b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b527eca9b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b527eca9cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b527eca9e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b527eca7020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b527eca71b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b527eca7340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b527eca74d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527eca7660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b527eca77f0"/>
        <function-ref name="getData" scoped="" ref="0x2b527eca7980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b527eca7b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b527eca7ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b527eca6020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b527eca61b0"/>
        <function-ref name="getIV" scoped="" ref="0x2b527eca6340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b527eca64d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b527eca6660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b527eca67f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b527eca6980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b527eca6b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b527eca6ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b527eca6e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b527eca5020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b527eca51b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b527eca5540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b527eca56d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b527eca5860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b527eca59f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b527eca5b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b527eca5d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b527eca4020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b527eca41b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b527eca4340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b527eca44d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b527eca4660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b527eca47f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b527eca4980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b527eca4b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b527eca4ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b527eca4e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b527eca3020"/>
        <function-ref name="setData" scoped="" ref="0x2b527eca31b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b527eca3340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b527eca34d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b527eca3660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b527eca37f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b527eca3980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b527eca3b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b527eca2420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b527eca25b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b527eca2740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b527eca28d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b527eca2a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b527eca2bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b527eca2d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b527eca1020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b527eca11b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b527eca1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b527ecaa760" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b527ecaa760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527ecaaae0"/>
        <function-ref name="txDone" scoped="" ref="0x2b527ecaac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527ecb0140" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527ecb0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527ecb04c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527ecb0650"/>
        <function-ref name="request" scoped="" ref="0x2b527ecb07e0"/>
        <function-ref name="granted" scoped="" ref="0x2b527ecb0970"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527ecb0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b527ecafd40" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b527ecafd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527ecae0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527ecae270"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527ecae400"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527ecae590"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527ecae720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527ecae8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527ecaea40"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527ecaebd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527ecaed60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527ecad020"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527ecad1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527ecad340"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527ecad4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527ecad760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527ecad8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527ecada80"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527ecadc10"/>
        <function-ref name="isUart" scoped="" ref="0x2b527ecadda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527ecac020"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527ecac1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527ecac340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527ecac4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527ecac660"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527ecac7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ecac980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527ecacd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527ecab020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527ecab1b0"/>
        <function-ref name="tx" scoped="" ref="0x2b527ecab340"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527ecab4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527ecab660"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527ecab7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527ecab980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527ecabb10"/>
        <function-ref name="rx" scoped="" ref="0x2b527ecabca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527ecabe30"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527ecaa020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527ecaa1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527ecaa340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527ecaa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527ecaf5a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527ecaf5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527ecaf920"/>
        <function-ref name="userId" scoped="" ref="0x2b527ecafab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527dce72c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527dce72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527dce7640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527dce77d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527dce68a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dce68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527dce6c20"/>
        <function-ref name="configure" scoped="" ref="0x2b527dce6db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b527dceb4d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b527dceb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527dceb850"/>
        <function-ref name="txDone" scoped="" ref="0x2b527dceb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527dce8020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527dce8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dce83a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527dce8530"/>
        <function-ref name="request" scoped="" ref="0x2b527dce86c0"/>
        <function-ref name="granted" scoped="" ref="0x2b527dce8850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527dce89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b527dce93f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527dce93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527dce9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527dce7ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dce7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527dce7e50"/>
        <function-ref name="userId" scoped="" ref="0x2b527dce6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b527dce2e50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dce2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527dce1210"/>
        <function-ref name="userId" scoped="" ref="0x2b527dce13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b527dce4060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b527dce4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527dce4400"/>
        <function-ref name="txDone" scoped="" ref="0x2b527dce4590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b527dce2840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b527dce2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527dce2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b527dce4990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b527dce4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527dce4d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b527dce2060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b527dce2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b527dce23e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b527dce2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527dcde850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527dcde850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527dcdebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527dcded80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527dcdc570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527dcdc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527dcdc910"/>
        <function-ref name="configure" scoped="" ref="0x2b527dcdcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b527dcdd020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527dcdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dcdd3a0"/>
        <function-ref name="requested" scoped="" ref="0x2b527dcdd530"/>
        <function-ref name="granted" scoped="" ref="0x2b527dcdd6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527dcdd850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527dcdd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527dcdfa80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527dcdfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dcdfe20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527dcde020"/>
        <function-ref name="request" scoped="" ref="0x2b527dcde1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b527dcde340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527dcde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527dcddc30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527dcddc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527dcdc020"/>
        <function-ref name="userId" scoped="" ref="0x2b527dcdc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527ed84020" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527ed84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ed843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b527ed84630" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b527ed84630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b527ed849b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b527ed84b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b527ed84cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b527ed84e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b527ed806c0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b527ed806c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b527ed80a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527ed80bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b527ed7e400" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b527ed7e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b527ed7e7a0"/>
        <function-ref name="configure" scoped="" ref="0x2b527ed7e930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b527ed7ebc0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b527ed7ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b527ed7d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b527ed7d1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b527ed7d340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b527ed7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b527ed80e40" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b527ed80e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527ed7f1e0"/>
        <function-ref name="requested" scoped="" ref="0x2b527ed7f370"/>
        <function-ref name="granted" scoped="" ref="0x2b527ed7f500"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527ed7f690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b527ed7f820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527ed7d720" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527ed7d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527ed7daa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527ed7dc30"/>
        <function-ref name="led1On" scoped="" ref="0x2b527ed7ddc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527ed7c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527ed7c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527ed7c340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527ed7c4d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527ed7cb10"/>
        <function-ref name="set" scoped="" ref="0x2b527ed7c7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b527ed7c660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527ed7c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527ed81850" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527ed81850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527ed81bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527ed81d80"/>
        <function-ref name="request" scoped="" ref="0x2b527ed80020"/>
        <function-ref name="granted" scoped="" ref="0x2b527ed801b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527ed80340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b527ed7fa70" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b527ed7fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b527ed7fdf0"/>
        <function-ref name="userId" scoped="" ref="0x2b527ed7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b527ed7cde0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b527ed7cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527ed7b180"/>
        <function-ref name="runTask" scoped="" ref="0x2b527ed7b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b527dcd4540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b527dcd4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b527dcd48c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b527dcd4a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b527dcd4be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b527dcd4d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b527dcd1020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b527dcd11b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b527dcd1340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b527dcd14d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527dcd1660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b527dcd17f0"/>
        <function-ref name="getData" scoped="" ref="0x2b527dcd1980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b527dcd1b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b527dcd1ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b527dcd0020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b527dcd01b0"/>
        <function-ref name="getIV" scoped="" ref="0x2b527dcd0340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b527dcd04d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b527dcd0660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b527dcd07f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b527dcd0980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b527dcd0b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b527dcd0ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b527dcd0e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b527dccf020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b527dccf1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b527dccf540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b527dccf6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b527dccf860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b527dccf9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b527dccfb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b527dccfd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b527dcce020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b527dcce1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b527dcce340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b527dcce4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b527dcce660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b527dcce7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b527dcce980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b527dcceb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b527dcceca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b527dccee30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b527dccd020"/>
        <function-ref name="setData" scoped="" ref="0x2b527dccd1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b527dccd340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b527dccd4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b527dccd660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b527dccd7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b527dccd980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b527dccdb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b527dccc420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b527dccc5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b527dccc740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b527dccc8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b527dccca60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b527dcccbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b527dcccd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b527dccb020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b527dccb1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b527dccb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2b527dd20250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2b527dd20250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b527dd205d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b527dd20760"/>
        <function-ref name="setUctl" scoped="" ref="0x2b527dd208f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b527dd20a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b527dd20c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b527dd20da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b527dd1f020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b527dd1f1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b527dd1f340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b527dd1f4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b527dd1f660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b527dd1f7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b527dd1f980"/>
        <function-ref name="getUbr" scoped="" ref="0x2b527dd1fc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b527dd1fda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b527dd1e020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b527dd1e1b0"/>
        <function-ref name="isUart" scoped="" ref="0x2b527dd1e340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b527dd1e4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b527dd1e660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b527dd1e7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b527dd1e980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b527dd1eb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b527dd1eca0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527dd1ee30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b527dd1d220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b527dd1d3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b527dd1d540"/>
        <function-ref name="tx" scoped="" ref="0x2b527dd1d6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b527dd1d860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b527dd1d9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b527dd1db80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b527dd1dd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b527dd1c020"/>
        <function-ref name="rx" scoped="" ref="0x2b527dd1c1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b527dd1c340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b527dd1c4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b527dd1c660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b527dd1c7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b527dd1c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b527dd1acb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b527dd1acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527dd190a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527dd19230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527dd193c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527dd19550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527dd196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527dd19870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527dd19a00"/>
        <function-ref name="get" scoped="" ref="0x2b527dd19b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527dd19d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527dd18020"/>
        <function-ref name="set" scoped="" ref="0x2b527dd181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527dd18340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527dd184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527dd18760"/>
        <function-ref name="clr" scoped="" ref="0x2b527dd188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2b527dcc8430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b527dcc8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b527dcc87b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b527dcc8940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b527dcc8ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b527dcc8c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b527dcc8df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b527dcc7020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b527dcc71b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b527dcc7340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527dcc74d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b527dcc7660"/>
        <function-ref name="getData" scoped="" ref="0x2b527dcc77f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b527dcc7980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b527dcc7b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b527dcc7da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b527dcc6020"/>
        <function-ref name="getIV" scoped="" ref="0x2b527dcc61b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b527dcc6340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b527dcc64d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b527dcc6660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b527dcc67f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b527dcc6980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b527dcc6b10"/>
        <function-ref name="isI2C" scoped="" ref="0x2b527dcc6ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b527dcc6e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b527dd24020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b527dd243b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b527dd24540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b527dd246d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b527dd24860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b527dd249f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b527dd24b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b527dd24d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b527dd23020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b527dd231b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b527dd23340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b527dd234d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b527dd23660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b527dd237f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b527dd23980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b527dd23b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b527dd23ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b527dd23e30"/>
        <function-ref name="setData" scoped="" ref="0x2b527dd22020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b527dd221b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b527dd22340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b527dd224d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b527dd22660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b527dd227f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b527dd22980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b527dd21020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b527dd211b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b527dd21340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b527dd214d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b527dd21660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b527dd217f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b527dd21980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b527dd21b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b527dd21ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b527dd21e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b527dd1cd40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b527dd1cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527dd1b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527dd1b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527dd1b400"/>
        <function-ref name="toggle" scoped="" ref="0x2b527dd1b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527dd1b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527dd1b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527dd1ba40"/>
        <function-ref name="get" scoped="" ref="0x2b527dd1bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527dd1bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527dd1a020"/>
        <function-ref name="set" scoped="" ref="0x2b527dd1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527dd1a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527dd1a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527dd1a760"/>
        <function-ref name="clr" scoped="" ref="0x2b527dd1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b527ddf6c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b527ddf6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf5210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b527de01da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b527de01da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de00180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b527ddfab50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527ddfab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf9020"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b527ddf4670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b527ddf4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf49f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b527ddede50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b527ddede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de50210"/>
        <function-ref name="write" scoped="" ref="0x2b527de503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b527ddf4e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b527ddf4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf3210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b527de442f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b527de442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de44670"/>
        <function-ref name="write" scoped="" ref="0x2b527de44800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b527de462f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b527de462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de46670"/>
        <function-ref name="write" scoped="" ref="0x2b527de46800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b527ddff120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b527ddff120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddff4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b527de4c670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b527de4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de4cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b527de482f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527de482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de48670"/>
        <function-ref name="write" scoped="" ref="0x2b527de48800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b527ddf9c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b527ddf9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf7020"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b527ddf7c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b527ddf7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf6020"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b527ddee670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b527ddee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddee9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddeeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b527ddf0e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b527ddf0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddef210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b527ddf3670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b527ddf3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf39f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b527de02760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527de02760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527de02ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527de02c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527de02e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b527ddfdaa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527ddfdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfde20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b527ddfc120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b527ddfc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfc5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b527de4ba70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527de4ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4bdf0"/>
        <function-ref name="write" scoped="" ref="0x2b527de4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b527ddfc870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b527ddfc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfcbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b527de48ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527de48ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de48e50"/>
        <function-ref name="write" scoped="" ref="0x2b527de46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b527ddffdc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527ddffdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfd180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b527de4de50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b527de4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4c210"/>
        <function-ref name="write" scoped="" ref="0x2b527de4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b527ddf7480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b527ddf7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf7800"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b527ddf9480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527ddf9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf9800"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b527de01750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b527de01750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de01ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b527de4ee50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b527de4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4d210"/>
        <function-ref name="write" scoped="" ref="0x2b527de4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b527de50670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b527de50670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de509f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de50b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b527de4d670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b527de4d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de4db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b527de45ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b527de45ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de45e50"/>
        <function-ref name="write" scoped="" ref="0x2b527de44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b527de46ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b527de46ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de46e50"/>
        <function-ref name="write" scoped="" ref="0x2b527de45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b527ddef670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b527ddef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddef9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddefb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b527de50e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b527de50e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4e210"/>
        <function-ref name="write" scoped="" ref="0x2b527de4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b527de49ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b527de49ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de49e50"/>
        <function-ref name="write" scoped="" ref="0x2b527de48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b527ddf2670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b527ddf2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf29f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b527de44ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b527de44ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527de44e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527de43020"/>
        <function-ref name="write" scoped="" ref="0x2b527de431b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527de43340"/>
        <function-ref name="readDone" scoped="" ref="0x2b527de434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b527de01100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b527de01100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de01480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b527ddfa370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b527ddfa370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddfa6f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddfa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b527ddf6480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b527ddf6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf6800"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b527ddeee50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b527ddeee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dded210"/>
        <function-ref name="write" scoped="" ref="0x2b527dded3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b527ddf3e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b527ddf3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf2210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b527dded670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b527dded670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dded9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddedb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b527ddf5670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b527ddf5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf59f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b527de00450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b527de00450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de007d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b527ddf5e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b527ddf5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf4210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527de03a80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527de03a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527de03e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527de02020"/>
        <function-ref name="request" scoped="" ref="0x2b527de021b0"/>
        <function-ref name="granted" scoped="" ref="0x2b527de02340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527de024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b527ddfb020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b527ddfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b527ddfbcc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b527ddfbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b527de492f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b527de492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de49670"/>
        <function-ref name="write" scoped="" ref="0x2b527de49800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b527de4aad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b527de4aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4ae50"/>
        <function-ref name="write" scoped="" ref="0x2b527de49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b527ddfd450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527ddfd450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfd7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b527de4a2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527de4a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4a670"/>
        <function-ref name="write" scoped="" ref="0x2b527de4a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b527de452f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b527de452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de45670"/>
        <function-ref name="write" scoped="" ref="0x2b527de45800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b527ddefe50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b527ddefe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddee210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b527de4e670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b527de4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b527de00aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b527de00aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de00e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b527ddff770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b527ddff770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddffaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b527ddf2e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b527ddf2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf0210"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b527ddfb670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b527ddfb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527ddfb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b527ddf0670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b527ddf0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527ddf09f0"/>
        <function-ref name="write" scoped="" ref="0x2b527ddf0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b527de4ce50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b527de4ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de4b610"/>
        <function-ref name="write" scoped="" ref="0x2b527de4b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b527de437a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b527de437a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527de43b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527de43cb0"/>
        <function-ref name="write" scoped="" ref="0x2b527de43e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527de42020"/>
        <function-ref name="readDone" scoped="" ref="0x2b527de421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b527de2ec60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b527de2ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2d210"/>
        <function-ref name="write" scoped="" ref="0x2b527de2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b527de39da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b527de39da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de37180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b527de31b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527de31b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de30020"/>
        <function-ref name="write" scoped="" ref="0x2b527de301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b527de2b670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b527de2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de2bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b527de24e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b527de24e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de23210"/>
        <function-ref name="write" scoped="" ref="0x2b527de233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b527de2be50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b527de2be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2a210"/>
        <function-ref name="write" scoped="" ref="0x2b527de2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b527de7b2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b527de7b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de7b670"/>
        <function-ref name="write" scoped="" ref="0x2b527de7b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b527de7e2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b527de7e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de7e670"/>
        <function-ref name="write" scoped="" ref="0x2b527de7e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b527de36120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b527de36120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de364a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b527de20670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b527de20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de209f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de20b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b527de7f2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527de7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de7f670"/>
        <function-ref name="write" scoped="" ref="0x2b527de7f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b527de30c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b527de30c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2f020"/>
        <function-ref name="write" scoped="" ref="0x2b527de2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b527de2fc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b527de2fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2e020"/>
        <function-ref name="write" scoped="" ref="0x2b527de2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b527de25670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b527de25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de259f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de25b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b527de28e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b527de28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de27210"/>
        <function-ref name="write" scoped="" ref="0x2b527de273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b527de2a670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b527de2a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de2ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b527de3a760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527de3a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527de3aae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527de3ac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527de3ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b527de35aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527de35aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de35e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b527de34120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b527de34120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de345a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b527de1fa70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527de1fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1fdf0"/>
        <function-ref name="write" scoped="" ref="0x2b527de81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b527de34870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b527de34870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de34bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b527de7fad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527de7fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de7fe50"/>
        <function-ref name="write" scoped="" ref="0x2b527de7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b527de36dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527de36dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de35180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b527de21e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b527de21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de20210"/>
        <function-ref name="write" scoped="" ref="0x2b527de203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b527de2f480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b527de2f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2f800"/>
        <function-ref name="write" scoped="" ref="0x2b527de2f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b527de30480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527de30480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de30800"/>
        <function-ref name="write" scoped="" ref="0x2b527de30990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b527de39750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b527de39750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de39ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b527de22e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b527de22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de21210"/>
        <function-ref name="write" scoped="" ref="0x2b527de213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b527de23670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b527de23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de239f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de23b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b527de21670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b527de21670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de219f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de21b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b527de7dad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b527de7dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de7de50"/>
        <function-ref name="write" scoped="" ref="0x2b527de7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b527de7ead0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b527de7ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de7ee50"/>
        <function-ref name="write" scoped="" ref="0x2b527de7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b527de27670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b527de27670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de279f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de27b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b527de23e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b527de23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de22210"/>
        <function-ref name="write" scoped="" ref="0x2b527de223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b527de80ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b527de80ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de80e50"/>
        <function-ref name="write" scoped="" ref="0x2b527de7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b527de29670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b527de29670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de299f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de29b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b527de7bad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b527de7bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527de7be50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527de7a020"/>
        <function-ref name="write" scoped="" ref="0x2b527de7a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527de7a340"/>
        <function-ref name="readDone" scoped="" ref="0x2b527de7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b527de39100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b527de39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de39480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b527de31370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b527de31370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de316f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de31880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b527de2e480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b527de2e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2e800"/>
        <function-ref name="write" scoped="" ref="0x2b527de2e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b527de25e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b527de25e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de24210"/>
        <function-ref name="write" scoped="" ref="0x2b527de243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b527de2ae50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b527de2ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de29210"/>
        <function-ref name="write" scoped="" ref="0x2b527de293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b527de24670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b527de24670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de249f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de24b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b527de2d670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b527de2d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de2db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b527de37450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b527de37450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de377d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b527de2de50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b527de2de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de2b210"/>
        <function-ref name="write" scoped="" ref="0x2b527de2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527de3b9e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527de3b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527de3bd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527de3a020"/>
        <function-ref name="request" scoped="" ref="0x2b527de3a1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b527de3a340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527de3a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b527de32020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b527de32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b527de32cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b527de32cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de310a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b527de802f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b527de802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de80670"/>
        <function-ref name="write" scoped="" ref="0x2b527de80800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b527de81ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b527de81ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de81e50"/>
        <function-ref name="write" scoped="" ref="0x2b527de80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b527de35450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527de35450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de357d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b527de812f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527de812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de81670"/>
        <function-ref name="write" scoped="" ref="0x2b527de81800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b527de7d2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b527de7d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de7d670"/>
        <function-ref name="write" scoped="" ref="0x2b527de7d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b527de27e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b527de27e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de25210"/>
        <function-ref name="write" scoped="" ref="0x2b527de253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b527de22670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b527de22670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de229f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de22b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b527de37aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b527de37aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de37e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b527de36770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b527de36770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de36af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b527de29e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b527de29e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de28210"/>
        <function-ref name="write" scoped="" ref="0x2b527de283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b527de32670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b527de32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527de329f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b527de28670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b527de28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de289f0"/>
        <function-ref name="write" scoped="" ref="0x2b527de28b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b527de20e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b527de20e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de1f610"/>
        <function-ref name="write" scoped="" ref="0x2b527de1f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b527de7a7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b527de7a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527de7ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527de7acb0"/>
        <function-ref name="write" scoped="" ref="0x2b527de7ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527de79020"/>
        <function-ref name="readDone" scoped="" ref="0x2b527de791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b527de72b30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b527de72b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b527de6f020"/>
        <function-ref name="changed" scoped="" ref="0x2b527de6f1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b527de6f340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b527de6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b527de71d30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b527de71d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b527de5b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b527de57310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b527de57310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b527de57690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2b527de548c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b527de548c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de54c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b527deae020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b527deae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527deae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b527dea3cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b527dea3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dea60a0"/>
        <function-ref name="write" scoped="" ref="0x2b527dea6230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2b527dea65b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2b527dea65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527dea6930"/>
        <function-ref name="stop" scoped="" ref="0x2b527dea6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b527dea7210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b527dea7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dea7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b527de93020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b527de93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de933a0"/>
        <function-ref name="write" scoped="" ref="0x2b527de93530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b527de938c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b527de938c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527de93c40"/>
        <function-ref name="isInput" scoped="" ref="0x2b527de93dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527de92020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527de921b0"/>
        <function-ref name="get" scoped="" ref="0x2b527de92340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527de924d0"/>
        <function-ref name="set" scoped="" ref="0x2b527de92660"/>
        <function-ref name="clr" scoped="" ref="0x2b527de927f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b527de89b40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b527de89b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b527de8c970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b527de91490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b527de91490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527de91810"/>
        <function-ref name="write" scoped="" ref="0x2b527de919a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b527de91d30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b527de91d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527de8e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527de8e270"/>
        <function-ref name="toggle" scoped="" ref="0x2b527de8e400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527de8e590"/>
        <function-ref name="get" scoped="" ref="0x2b527de8e720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527de8e8b0"/>
        <function-ref name="set" scoped="" ref="0x2b527de8ea40"/>
        <function-ref name="clr" scoped="" ref="0x2b527de8ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b527decf020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b527decf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b527decfe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b527decdd20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b527decdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b527deccb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527debd260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527debd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527debb090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527debba10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527debb550"/>
        <function-ref name="overflow" scoped="" ref="0x2b527deba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2b527deb9890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b527deb9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527deb66e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527df1b090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527deb6ba0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527df1b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b527df17190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527df17190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527df17510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527df176a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527df17830"/>
        <function-ref name="get" scoped="" ref="0x2b527df179c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527df17b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527df17ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527df17e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527df15030"/>
        <function-ref name="overflow" scoped="" ref="0x2b527df151c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527df15350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527df154e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b527df19060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527df19060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedd5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b527cedd930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527df19e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527df18820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527df18360"/>
        <function-ref name="overflow" scoped="" ref="0x2b527df18ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2b527de945a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2b527de945a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527de94920"/>
        <function-ref name="isInput" scoped="" ref="0x2b527de94ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527de94c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527de94dd0"/>
        <function-ref name="get" scoped="" ref="0x2b527df11020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527df111b0"/>
        <function-ref name="set" scoped="" ref="0x2b527df11340"/>
        <function-ref name="clr" scoped="" ref="0x2b527df114d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b527df0fc50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b527df0fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527df0e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527df0e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b527df0e340"/>
        <function-ref name="toggle" scoped="" ref="0x2b527df0e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527df0e660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b527df0e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527df0e980"/>
        <function-ref name="get" scoped="" ref="0x2b527df0eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b527df0eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b527df0ee30"/>
        <function-ref name="set" scoped="" ref="0x2b527df0d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b527df0d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b527df0d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b527df0d5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527df0d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b527df109e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b527df109e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527df10d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b527df0f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b527df0f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527df0f340"/>
        <function-ref name="get" scoped="" ref="0x2b527df0f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527df0f660"/>
        <function-ref name="set" scoped="" ref="0x2b527df0f7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b527df0f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527df12a20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527df12a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527df12da0"/>
        <function-ref name="stop" scoped="" ref="0x2b527df08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b527def9cb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b527def9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527def80a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527def8230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527def83c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527def8550"/>
        <function-ref name="setCca" scoped="" ref="0x2b527def86e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527def8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b527def59f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b527def59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b527def5d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b527def9020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b527def9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527def93a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527def9530"/>
        <function-ref name="modify" scoped="" ref="0x2b527def96c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527def9850"/>
        <function-ref name="resend" scoped="" ref="0x2b527def99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527defc6d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527defc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527defca50"/>
        <function-ref name="stop" scoped="" ref="0x2b527defcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b527def7190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b527def7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b527def7510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b527deef650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b527deef650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527deef9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527deefb60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527deefcf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527deefe80"/>
        <function-ref name="setCca" scoped="" ref="0x2b527deee030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527deee1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b527df517c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b527df517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527df50d50"/>
        <function-ref name="clear" scoped="" ref="0x2b527df4e4c0"/>
        <function-ref name="isValid" scoped="" ref="0x2b527df50620"/>
        <function-ref name="set" scoped="" ref="0x2b527df4ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b527df3a020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b527df3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df3a3a0"/>
        <function-ref name="write" scoped="" ref="0x2b527df3a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b527df3a890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b527df3a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df3ac10"/>
        <function-ref name="write" scoped="" ref="0x2b527df3ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b527deee5e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b527deee5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b527deee960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b527df3d530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b527df3d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527df3d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b527df4c880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b527df4c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b527df4cc00"/>
        <function-ref name="disable" scoped="" ref="0x2b527df4cd90"/>
        <function-ref name="captured" scoped="" ref="0x2b527df4b020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b527df4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b527deed7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2b527deed7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527dee9090"/>
        <function-ref name="fired" scoped="" ref="0x2b527deeb090"/>
        <function-ref name="startAt" scoped="" ref="0x2b527deeba10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527deeb550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527dee9550"/>
        <function-ref name="start" scoped="" ref="0x2b527deec6a0"/>
        <function-ref name="stop" scoped="" ref="0x2b527deecbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b527dee9a00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527dee9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527dee9d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527df52020"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527df521b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527df52340"/>
        <function-ref name="getPower" scoped="" ref="0x2b527df524d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527df52660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b527df3f550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527df3f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df3f8d0"/>
        <function-ref name="write" scoped="" ref="0x2b527df3fa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b527df3fe00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b527df3fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df3e1c0"/>
        <function-ref name="write" scoped="" ref="0x2b527df3e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b527df33d40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b527df33d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527df360e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b527df36270"/>
        <function-ref name="sfd" scoped="" ref="0x2b527df36400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527def08c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527def08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527def0c40"/>
        <function-ref name="cancel" scoped="" ref="0x2b527def0dd0"/>
        <function-ref name="modify" scoped="" ref="0x2b527deef020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527deef1b0"/>
        <function-ref name="resend" scoped="" ref="0x2b527deef340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b527df41d10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527df41d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527df400e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527df40270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527df40400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b527df3dc60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527df3dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527df3c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b527df44820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b527df44820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527df44ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527df44d30"/>
        <function-ref name="toggle" scoped="" ref="0x2b527df43020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527df431b0"/>
        <function-ref name="get" scoped="" ref="0x2b527df43340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527df434d0"/>
        <function-ref name="set" scoped="" ref="0x2b527df43660"/>
        <function-ref name="clr" scoped="" ref="0x2b527df437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527def1820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527def1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527def1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b527df529a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527df529a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527df52d20"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527df51020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527df511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b527df46b30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527df46b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527df4c020"/>
        <function-ref name="isSet" scoped="" ref="0x2b527df4c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527df4c340"/>
        <function-ref name="set" scoped="" ref="0x2b527df4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b527df3c3e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527df3c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df3c960"/>
        <function-ref name="write" scoped="" ref="0x2b527df3caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b527df41020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b527df41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527df413a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527df41530"/>
        <function-ref name="request" scoped="" ref="0x2b527df416c0"/>
        <function-ref name="granted" scoped="" ref="0x2b527df41850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527df419e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b527df4b500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b527df4b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527df4b980"/>
        <function-ref name="isInput" scoped="" ref="0x2b527df4bb10"/>
        <function-ref name="toggle" scoped="" ref="0x2b527df4bca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527df4be30"/>
        <function-ref name="get" scoped="" ref="0x2b527df44020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527df441b0"/>
        <function-ref name="set" scoped="" ref="0x2b527df44340"/>
        <function-ref name="clr" scoped="" ref="0x2b527df444d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b527df38130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b527df38130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df384b0"/>
        <function-ref name="write" scoped="" ref="0x2b527df38640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b527df389c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b527df389c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df38d40"/>
        <function-ref name="write" scoped="" ref="0x2b527df37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b527df3e6d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b527df3e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527df3ea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b527df43b40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b527df43b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527df42020"/>
        <function-ref name="isInput" scoped="" ref="0x2b527df421b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527df42340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527df424d0"/>
        <function-ref name="get" scoped="" ref="0x2b527df42660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527df427f0"/>
        <function-ref name="set" scoped="" ref="0x2b527df42980"/>
        <function-ref name="clr" scoped="" ref="0x2b527df42b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527df366c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527df366c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527df36a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527df36bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b527df36d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527df35020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527df351b0"/>
        <function-ref name="get" scoped="" ref="0x2b527df35340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527df354d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527df35b10"/>
        <function-ref name="set" scoped="" ref="0x2b527df35660"/>
        <function-ref name="led0On" scoped="" ref="0x2b527df357f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b527df35980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b527df3b5e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b527df3b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527df3b960"/>
        <function-ref name="write" scoped="" ref="0x2b527df3baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527def0020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527def0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527def03a0"/>
        <function-ref name="stop" scoped="" ref="0x2b527def0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b527df40780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b527df40780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527df40b00"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527df40c90"/>
        <function-ref name="write" scoped="" ref="0x2b527df40e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527df3f020"/>
        <function-ref name="readDone" scoped="" ref="0x2b527df3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b527df3ede0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b527df3ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527df3d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b527df3ce80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b527df3ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527df3b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b527deeed70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b527deeed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b527deed180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b527dfd6c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b527dfd6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd5210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b527dfdf020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b527dfdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b527dfd9c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527dfd9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd8020"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b527dfd3670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b527dfd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd39f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b527dfcce50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b527dfcce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfcb210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfcb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b527dfd3e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b527dfd3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd2210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b527dfc02f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b527dfc02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc0670"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b527dfc22f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b527dfc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc2670"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b527dfde370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b527dfde370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfde6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b527dfc8670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b527dfc8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc89f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b527dfc32f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527dfc32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc3670"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b527dfd8c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b527dfd8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd7020"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b527dfd7c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b527dfd7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd6020"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b527dfce670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b527dfce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfce9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b527dfd0e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b527dfd0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfcf210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfcf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b527dfd2670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b527dfd2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd29f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b527dfe28f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527dfe28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527dfe2c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527dfe2e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527dfe1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b527dfddd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527dfddd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b527dfdc370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b527dfdc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b527dfc7a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527dfc7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc7df0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b527dfdcac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b527dfdcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b527dfc3ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527dfc3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc3e50"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b527dfdd060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527dfdd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdd3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b527dfc9e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b527dfc9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc8210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b527dfd7480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b527dfd7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd7800"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b527dfd8480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527dfd8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd8800"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b527dfe1940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b527dfe1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfe1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b527dfcae50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b527dfcae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc9210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b527dfcb670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b527dfcb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfcb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfcbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b527dfc9670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b527dfc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc99f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b527dfc1ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b527dfc1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc1e50"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b527dfc2ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b527dfc2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc2e50"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b527dfcf670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b527dfcf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfcf9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfcfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b527dfcbe50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b527dfcbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfca210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b527dfc4ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b527dfc4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc4e50"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b527dfd1670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b527dfd1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd19f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b527dfc0ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b527dfc0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527dfc0e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527dfbe020"/>
        <function-ref name="write" scoped="" ref="0x2b527dfbe1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527dfbe340"/>
        <function-ref name="readDone" scoped="" ref="0x2b527dfbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b527dfe12f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b527dfe12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfe1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b527dfd9490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b527dfd9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd9810"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b527dfd6480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b527dfd6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd6800"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b527dfcee50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b527dfcee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfcc210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfcc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b527dfd2e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b527dfd2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd1210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b527dfcc670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b527dfcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfcc9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b527dfd5670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b527dfd5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd59f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b527dfdf670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b527dfdf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdf9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b527dfd5e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b527dfd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd3210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527dfe3c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527dfe3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527dfe2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527dfe21b0"/>
        <function-ref name="request" scoped="" ref="0x2b527dfe2340"/>
        <function-ref name="granted" scoped="" ref="0x2b527dfe24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527dfe2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b527dfdb160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b527dfdb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b527dfdbe00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b527dfdbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfd91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b527dfc42f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b527dfc42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc4670"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b527dfc5ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b527dfc5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc5e50"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b527dfdd6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527dfdd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdda30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b527dfc52f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527dfc52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc5670"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b527dfc12f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b527dfc12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc1670"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b527dfcfe50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b527dfcfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfce210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b527dfca670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b527dfca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfca9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfcab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b527dfdfcc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b527dfdfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfde0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b527dfde9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b527dfde9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfded40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b527dfd1e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b527dfd1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd0210"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b527dfdb7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b527dfdb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfdbb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b527dfd0670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b527dfd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfd09f0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b527dfc8e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b527dfc8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfc7610"/>
        <function-ref name="write" scoped="" ref="0x2b527dfc77a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b527dfbe7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b527dfbe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527dfbeb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527dfbecb0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfbee40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527e028020"/>
        <function-ref name="readDone" scoped="" ref="0x2b527e0281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b527e01ddf0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b527e01ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e01a1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b527e01a350"/>
        <function-ref name="sfd" scoped="" ref="0x2b527e01a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e01a7c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e01a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e01ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b527e019020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b527e019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b527e0193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527e01d5c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527e01d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527e01d940"/>
        <function-ref name="stop" scoped="" ref="0x2b527e01dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b527e011380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b527e011380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527e011700"/>
        <function-ref name="isInput" scoped="" ref="0x2b527e011890"/>
        <function-ref name="toggle" scoped="" ref="0x2b527e011a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527e011bb0"/>
        <function-ref name="get" scoped="" ref="0x2b527e011d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527e010020"/>
        <function-ref name="set" scoped="" ref="0x2b527e0101b0"/>
        <function-ref name="clr" scoped="" ref="0x2b527e010340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b527e009b90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b527e009b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b527e008020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b527e0081b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b527e008340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b527e0084d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b527e008660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b527e0087f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b527e008980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b527e008b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b527e008ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b527e008e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b527e007020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b527e0071b0"/>
        <function-ref name="sync" scoped="" ref="0x2b527e007340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b527e0075d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b527e007760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b527e05e9d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2b527e05e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e05ed50"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e05d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b527e007d70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b527e007d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527e005330"/>
        <function-ref name="clear" scoped="" ref="0x2b527e005a60"/>
        <function-ref name="isValid" scoped="" ref="0x2b527e006ba0"/>
        <function-ref name="set" scoped="" ref="0x2b527e004210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b527e0106b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b527e0106b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527e010a30"/>
        <function-ref name="isInput" scoped="" ref="0x2b527e010bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b527e010d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527e00f020"/>
        <function-ref name="get" scoped="" ref="0x2b527e00f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527e00f340"/>
        <function-ref name="set" scoped="" ref="0x2b527e00f4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b527e00f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b527e002cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b527e002cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e0010a0"/>
        <function-ref name="write" scoped="" ref="0x2b527e001230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b527e001590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b527e001590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e001910"/>
        <function-ref name="write" scoped="" ref="0x2b527e001aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b527e0006d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b527e0006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e000a50"/>
        <function-ref name="write" scoped="" ref="0x2b527e000be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b527e00a330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e00a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527e00a6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527e00a840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527e00a9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527e00ab60"/>
        <function-ref name="getPower" scoped="" ref="0x2b527e00acf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527e00ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b527e014550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b527e014550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e0148d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b527e014a60"/>
        <function-ref name="sfd" scoped="" ref="0x2b527e014bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b527e00c3a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b527e00c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e00c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b527e012020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b527e012020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b527e0123a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b527e012530"/>
        <function-ref name="toggle" scoped="" ref="0x2b527e0126c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b527e012850"/>
        <function-ref name="get" scoped="" ref="0x2b527e0129e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b527e012b70"/>
        <function-ref name="set" scoped="" ref="0x2b527e012d00"/>
        <function-ref name="clr" scoped="" ref="0x2b527e011020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b527dfff020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527dfff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527dfff3a0"/>
        <function-ref name="write" scoped="" ref="0x2b527dfff530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e015620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e015620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e0159a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b527e0091e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e0091e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527e009560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527e0096f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527e009880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e013020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e0133a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b527e00e6e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b527e00e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527e00ea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527e00ebf0"/>
        <function-ref name="request" scoped="" ref="0x2b527e00ed80"/>
        <function-ref name="granted" scoped="" ref="0x2b527e00d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527e00d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b527e001e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b527e001e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e0001c0"/>
        <function-ref name="write" scoped="" ref="0x2b527e000350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b527e00d530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b527e00d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527e00d8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527e00da40"/>
        <function-ref name="write" scoped="" ref="0x2b527e00dbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527e00dd60"/>
        <function-ref name="readDone" scoped="" ref="0x2b527e00c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b527dfff8b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b527dfff8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527dfffe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b527e0137c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b527e0137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b527e013b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527dffe150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527dffe150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527dffe4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527dffe660"/>
        <function-ref name="led1On" scoped="" ref="0x2b527dffe7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527dffe980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527dffeb10"/>
        <function-ref name="get" scoped="" ref="0x2b527dffeca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527dffee30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527dffd4d0"/>
        <function-ref name="set" scoped="" ref="0x2b527dffd020"/>
        <function-ref name="led0On" scoped="" ref="0x2b527dffd1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b527dffd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b527e0023e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b527e0023e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e002760"/>
        <function-ref name="write" scoped="" ref="0x2b527e0028f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b527e004b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b527e004b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e002020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b527e00fa50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b527e00fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b527e00fdd0"/>
        <function-ref name="disable" scoped="" ref="0x2b527e00e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b527e00e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b527e00e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b527e00cad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527e00cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e00a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b527e015ca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b527e015ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b527e0140a0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e014230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b527e06ba70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527e06ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b527e06bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b527e06f670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e06f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527e06f9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527e06fb80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527e06fd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527e06c020"/>
        <function-ref name="getPower" scoped="" ref="0x2b527e06c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527e06c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b527e069550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e069550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527e068b00"/>
        <function-ref name="clear" scoped="" ref="0x2b527e0672a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b527e0683d0"/>
        <function-ref name="set" scoped="" ref="0x2b527e0679d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b527e06b0c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e06b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527e06b440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527e06b5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527e06b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b527e062480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e062480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e062800"/>
        <function-ref name="isSet" scoped="" ref="0x2b527e062990"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e062b20"/>
        <function-ref name="set" scoped="" ref="0x2b527e062cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b527e066660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e066660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527e064ce0"/>
        <function-ref name="clear" scoped="" ref="0x2b527e063460"/>
        <function-ref name="isValid" scoped="" ref="0x2b527e0645b0"/>
        <function-ref name="set" scoped="" ref="0x2b527e063b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b527e06c6e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b527e06c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527e06ca60"/>
        <function-ref name="noAck" scoped="" ref="0x2b527e06cbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527e06cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b527e0c9020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b527e0c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b527e0c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b527e060d20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e060d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527e0cb0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527e0cb270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527e0cb400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527e0cb590"/>
        <function-ref name="getPower" scoped="" ref="0x2b527e0cb720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527e0cb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b527e0c04a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e0c04a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e0c0820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e0c09b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e0c0b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e0c0cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e0c0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b527e0c9a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e0c9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527e0c7020"/>
        <function-ref name="clear" scoped="" ref="0x2b527e0c7750"/>
        <function-ref name="isValid" scoped="" ref="0x2b527e0c88d0"/>
        <function-ref name="set" scoped="" ref="0x2b527e0c7e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b527e0ca640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e0ca640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527e0ca9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527e0cab50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527e0cace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b527e0c18b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e0c18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e0c1c30"/>
        <function-ref name="isSet" scoped="" ref="0x2b527e0c1dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e0c0020"/>
        <function-ref name="set" scoped="" ref="0x2b527e0c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b527e0bc820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b527e0bc820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e0be4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b527e0beb80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b527e0beb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e0bd7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b527e0c5af0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e0c5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527e0c30d0"/>
        <function-ref name="clear" scoped="" ref="0x2b527e0c3800"/>
        <function-ref name="isValid" scoped="" ref="0x2b527e0c4970"/>
        <function-ref name="set" scoped="" ref="0x2b527e0c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b527e0cbc50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b527e0cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527e0ca020"/>
        <function-ref name="noAck" scoped="" ref="0x2b527e0ca1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527e0ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b527e0d94e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b527e0d94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e0d0150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527e0d07c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527e0d07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e0cf620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527e0ce020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527e0cfae0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527e0ce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b527e1377d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b527e1377d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e12bc40"/>
        <function-ref name="fired" scoped="" ref="0x2b527e12c260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e12b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e12cb60"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e12a590"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e12a110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e12c6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e136400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e12b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e1368d0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e136da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b527e12ab80" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b527e12ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e1287d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e139130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e139130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e1394b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527e16baf0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527e16baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e167390"/>
        <function-ref name="fired" scoped="" ref="0x2b527e169360"/>
        <function-ref name="startAt" scoped="" ref="0x2b527e169ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e169820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527e167850"/>
        <function-ref name="start" scoped="" ref="0x2b527e16a970"/>
        <function-ref name="stop" scoped="" ref="0x2b527e16ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e16b2a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e16b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e16b620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527ee8a260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527ee8a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ee88b30"/>
        <function-ref name="fired" scoped="" ref="0x2b527ee89a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ee884e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ee88020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ee86020"/>
        <function-ref name="start" scoped="" ref="0x2b527ee89090"/>
        <function-ref name="stop" scoped="" ref="0x2b527ee895a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527ee8b9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527ee8b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ee8bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b527ee72a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ee72a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ee72e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ee70020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ee701b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ee70340"/>
        <function-ref name="fired" scoped="" ref="0x2b527ee704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b527ee74020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ee74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ee743a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ee74530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ee746c0"/>
        <function-ref name="get" scoped="" ref="0x2b527ee74850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ee749e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ee74b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ee74d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ee73020"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ee731b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ee73340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ee734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b527ee73760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ee73760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ee73ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ee73c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ee73e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ee72020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ee721b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ee72340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ee724d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ee72660"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ee727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b527ee68760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b527ee68760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527ee68ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527ee68c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527ee68e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527ee66020"/>
        <function-ref name="fired" scoped="" ref="0x2b527ee661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b527ee6bdd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527ee6bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527ee6a180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527ee6a310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ee6a4a0"/>
        <function-ref name="get" scoped="" ref="0x2b527ee6a630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ee6a7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ee6a950"/>
        <function-ref name="getMode" scoped="" ref="0x2b527ee6aae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ee6ac70"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ee6ae00"/>
        <function-ref name="setMode" scoped="" ref="0x2b527ee69020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527ee691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527ee6ebf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527ee6ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ee6b4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b527ee6c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ee6ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ee6c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ee6b9a0"/>
        <function-ref name="start" scoped="" ref="0x2b527ee6da80"/>
        <function-ref name="stop" scoped="" ref="0x2b527ee6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527ee6e360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527ee6e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527ee6e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b527ee69440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527ee69440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527ee697c0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527ee69950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527ee69ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527ee69c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527ee69e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527ee68020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527ee681b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527ee68340"/>
        <function-ref name="setControl" scoped="" ref="0x2b527ee684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b527e117080" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527e117080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e116020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527e1169a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527e1164e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527e116e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b527e10e0f0" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b527e10e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e10d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527e10d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527e10d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527e10de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b527e112cd0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527e112cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e111b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527e10f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527e10f090"/>
        <function-ref name="overflow" scoped="" ref="0x2b527e10fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527ee845f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527ee845f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ee82e50"/>
        <function-ref name="fired" scoped="" ref="0x2b527ee83e00"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ee82800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ee82340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ee81340"/>
        <function-ref name="start" scoped="" ref="0x2b527ee83430"/>
        <function-ref name="stop" scoped="" ref="0x2b527ee83940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b527ee7ed20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b527ee7ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527ee7b670"/>
        <function-ref name="fired" scoped="" ref="0x2b527ee7c550"/>
        <function-ref name="startAt" scoped="" ref="0x2b527ee7b020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527ee7ca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527ee7bb30"/>
        <function-ref name="start" scoped="" ref="0x2b527ee7db60"/>
        <function-ref name="stop" scoped="" ref="0x2b527ee7c090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527ee819b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527ee819b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527ee7f7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527ee7e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527ee7fca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527ee7e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b527e1a6020" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b527e1a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e1a63a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e1a6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b527e1abcd0" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527e1abcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e1a7670"/>
        <function-ref name="fired" scoped="" ref="0x2b527e1a8550"/>
        <function-ref name="startAt" scoped="" ref="0x2b527e1a7020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e1a8a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527e1a7b30"/>
        <function-ref name="start" scoped="" ref="0x2b527e1a9b60"/>
        <function-ref name="stop" scoped="" ref="0x2b527e1a8090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b527e13f830" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527e13f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e1accf0"/>
        <function-ref name="fired" scoped="" ref="0x2b527e13c300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e1ac0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e13cc00"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e1ab660"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e1ab1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e13c780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e13d480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e1ac6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e13d950"/>
        <function-ref name="stop" scoped="" ref="0x2b527e13de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b527e1c7a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b527e1c7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e1c7d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e1c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b527e1cd640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b527e1cd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e1c9c40"/>
        <function-ref name="fired" scoped="" ref="0x2b527e1ca1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e1c9020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e1caae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e1c7590"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e1c7110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e1ca660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e1cb390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e1c9630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e1cb860"/>
        <function-ref name="stop" scoped="" ref="0x2b527e1cbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b527e1d2150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527e1d2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e1ce700"/>
        <function-ref name="fired" scoped="" ref="0x2b527e1d1c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e1d0a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e1d05b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e1cd090"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e1ceba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e1d0110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e1d2d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e1ce0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e1d12a0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e1d1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b527e1c42b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b527e1c42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e1c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527e1c3690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527e1c3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e1c15b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527e1c0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527e1c1a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b527e1c04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b527e1ba8c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527e1ba8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e219cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b527e21a320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e2190d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e21ac20"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e218660"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e2181e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e21a7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e21c4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e2196e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e21c9b0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e21ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b527e1b12c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b527e1b12c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e1ad870"/>
        <function-ref name="fired" scoped="" ref="0x2b527e1b0e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e1aec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e1ae780"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e21f1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e1adcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e1ae300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e1b0020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e1ad260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e1b04f0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e1b09c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b527e208c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b527e208c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e206210"/>
        <function-ref name="write" scoped="" ref="0x2b527e2063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b527e211020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b527e211020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e2113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b527e20bc70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b527e20bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e20a020"/>
        <function-ref name="write" scoped="" ref="0x2b527e20a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b527e205670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b527e205670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e2059f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e205b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b527e1fee50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b527e1fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fd210"/>
        <function-ref name="write" scoped="" ref="0x2b527e1fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b527e205e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b527e205e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e204210"/>
        <function-ref name="write" scoped="" ref="0x2b527e2043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b527e1f12f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b527e1f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f1670"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b527e1f42f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b527e1f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f4670"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b527e210370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b527e210370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e2106f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b527e1f9670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b527e1f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f99f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b527e1f52f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b527e1f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f5670"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b527e20ac60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b527e20ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e209020"/>
        <function-ref name="write" scoped="" ref="0x2b527e2091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b527e209c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b527e209c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e208020"/>
        <function-ref name="write" scoped="" ref="0x2b527e2081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b527e1ff670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b527e1ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1ff9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b527e202e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b527e202e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e200210"/>
        <function-ref name="write" scoped="" ref="0x2b527e2003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b527e204670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b527e204670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e2049f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e204b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b527e213970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b527e213970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b527e213cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b527e213e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b527e212030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b527e20fd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b527e20fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b527e20d370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b527e20d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b527e1f8a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b527e1f8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f8df0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b527e20dac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b527e20dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b527e1f5ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b527e1f5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f5e50"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b527e20f060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b527e20f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b527e1fbe50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b527e1fbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f9210"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b527e209480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b527e209480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e209800"/>
        <function-ref name="write" scoped="" ref="0x2b527e209990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b527e20a480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b527e20a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e20a800"/>
        <function-ref name="write" scoped="" ref="0x2b527e20a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b527e212950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b527e212950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e212cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b527e1fce50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b527e1fce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fb210"/>
        <function-ref name="write" scoped="" ref="0x2b527e1fb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b527e1fd670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b527e1fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b527e1fb670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b527e1fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1fbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b527e1f2ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b527e1f2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f2e50"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b527e1f4ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b527e1f4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f4e50"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b527e200670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b527e200670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e2009f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e200b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b527e1fde50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b527e1fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fc210"/>
        <function-ref name="write" scoped="" ref="0x2b527e1fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b527e1f6ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b527e1f6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f6e50"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b527e203670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b527e203670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e2039f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e203b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b527e1f1ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b527e1f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527e1f1e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527e1f0020"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f01b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527e1f0340"/>
        <function-ref name="readDone" scoped="" ref="0x2b527e1f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b527e212300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b527e212300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e212680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b527e20b490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b527e20b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e20b810"/>
        <function-ref name="write" scoped="" ref="0x2b527e20b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b527e208480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b527e208480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e208800"/>
        <function-ref name="write" scoped="" ref="0x2b527e208990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b527e1ffe50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b527e1ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fe210"/>
        <function-ref name="write" scoped="" ref="0x2b527e1fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b527e204e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b527e204e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e203210"/>
        <function-ref name="write" scoped="" ref="0x2b527e2033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b527e1fe670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b527e1fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fe9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1feb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b527e206670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b527e206670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e2069f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e206b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b527e211670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b527e211670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e2119f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b527e206e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b527e206e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e205210"/>
        <function-ref name="write" scoped="" ref="0x2b527e2053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527e215d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527e215d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527e2130a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527e213230"/>
        <function-ref name="request" scoped="" ref="0x2b527e2133c0"/>
        <function-ref name="granted" scoped="" ref="0x2b527e213550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527e2136e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b527e20c160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b527e20c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b527e20ce00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b527e20ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b527e1f62f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b527e1f62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f6670"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b527e1f7ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b527e1f7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f7e50"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b527e20f6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b527e20f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b527e1f72f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b527e1f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f7670"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b527e1f22f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b527e1f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f2670"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b527e200e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b527e200e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1ff210"/>
        <function-ref name="write" scoped="" ref="0x2b527e1ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b527e1fc670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b527e1fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1fc9f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b527e211cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b527e211cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e2100a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b527e2109c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b527e2109c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e210d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b527e203e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b527e203e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e202210"/>
        <function-ref name="write" scoped="" ref="0x2b527e2023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b527e20c7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b527e20c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b527e20cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b527e202670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b527e202670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e2029f0"/>
        <function-ref name="write" scoped="" ref="0x2b527e202b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b527e1f9e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b527e1f9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b527e1f8610"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f87a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b527e1f07a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b527e1f07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b527e1f0b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b527e1f0cb0"/>
        <function-ref name="write" scoped="" ref="0x2b527e1f0e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b527e1ef020"/>
        <function-ref name="readDone" scoped="" ref="0x2b527e1ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b527e23ba20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b527e23ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b527e23bda0"/>
        <function-ref name="rand32" scoped="" ref="0x2b527e23a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b527e238920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b527e238920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e23b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e23f9a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e23f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e23fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b527e234a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b527e234a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b527e234da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b527e233020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b527e235940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b527e235940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e234560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e235080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e235080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e235400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b527e23daa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b527e23daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527e23de20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527e226020"/>
        <function-ref name="isState" scoped="" ref="0x2b527e2261b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527e226340"/>
        <function-ref name="requestState" scoped="" ref="0x2b527e2264d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b527e226660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e295020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2953a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e295530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2956c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e295850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2959e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527e296220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527e296220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2965a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e296730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2968c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e296a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e296be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e291e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e291e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e290210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2903a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e290530"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e2906c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e290850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527e294a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527e294a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e294da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e291020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2911b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e291340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2914d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b527e28f8f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b527e28f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b527e28fc70"/>
        <function-ref name="rand32" scoped="" ref="0x2b527e28fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e291750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e291750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e291ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b527e28e170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e28e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527e28e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527e28e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527e28e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b527e290ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b527e290ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527e290e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527e28f020"/>
        <function-ref name="isState" scoped="" ref="0x2b527e28f1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527e28f340"/>
        <function-ref name="requestState" scoped="" ref="0x2b527e28f4d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b527e28f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b527e292690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b527e292690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527e292a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527e292ba0"/>
        <function-ref name="isState" scoped="" ref="0x2b527e292d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527e27d020"/>
        <function-ref name="requestState" scoped="" ref="0x2b527e27d1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b527e27d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527e277950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527e277950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e277cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e27aaa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e27aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e27ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b527e277200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b527e277200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e277580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527e2703f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527e2703f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e270770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e272b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e272b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e270020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e276e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e276e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2721e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b527e270a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e270a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527e270df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527e26f020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527e26f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b527e272570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b527e272570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2728f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527e2b8020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527e2b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e2b86b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e2b86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2b8a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2b8bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2b8d50"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e2b7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527e2bc960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527e2bc960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2bcce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2bce70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2bb030"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e2bb1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2bb350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b527e2bbca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b527e2bbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2ba0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2ba230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2ba3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e2ba550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2ba6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e2bb5f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e2bb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2bb970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527e2bdcb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527e2bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527e2bc0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527e2bc230"/>
        <function-ref name="request" scoped="" ref="0x2b527e2bc3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b527e2bc550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527e2bc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b527e2baa50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b527e2baa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2badd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b527e2b9170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b527e2b9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e2b94f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e2b9680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2b9810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2b99a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e2b9b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e2aed70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e2aed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2ad180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2ad310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2ad4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e2ad630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2ad7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527e2adb10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527e2adb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b527e2f5db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2b527e2f5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e2f4180"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e2f4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b527e2ac2f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e2ac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527e2ac670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527e2ac800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527e2ac990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527e2acb20"/>
        <function-ref name="getPower" scoped="" ref="0x2b527e2accb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527e2ace40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b527e2b0a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b527e2b0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2b0da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2af020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2af1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e2af340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b527e2abb70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b527e2abb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b527e2aa020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b527e2aa1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b527e2aa340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b527e2aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b527e2ab170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e2ab170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2ab4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527e2ab680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527e2ab810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b527e2b0370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b527e2b0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2b06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b527e2b37b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b527e2b37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527e2b3b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527e2b3cc0"/>
        <function-ref name="request" scoped="" ref="0x2b527e2b3e50"/>
        <function-ref name="granted" scoped="" ref="0x2b527e2b2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527e2b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b527e2b24d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b527e2b24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e2b2850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2b29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2b2b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e2b2d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e2b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b527e2af840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b527e2af840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e2afbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b527e2ae020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b527e2ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e2ae3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e2ae530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e2ae6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e2ae850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e2ae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e2d5dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e2d5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e2d4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b527e2d4410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b527e2d4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b527e2d4790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b527e2d4920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b527e2d4ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b527e2d4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527e33fb80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527e33fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527e33e020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527e33e1b0"/>
        <function-ref name="start" scoped="" ref="0x2b527e33e340"/>
        <function-ref name="stop" scoped="" ref="0x2b527e33e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e33d860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e33d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e33dbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e33dd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e33c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e33c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e33c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527e33c690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527e33c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e33ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527e343cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527e343cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e3400a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e340230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e3403c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e340550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e3406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b527e33f080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b527e33f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b527e33f400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b527e33f590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b527e33f720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b527e33f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b527e33e800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b527e33e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527e33eb80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527e33ed10"/>
        <function-ref name="isState" scoped="" ref="0x2b527e33d020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527e33d1b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b527e33d340"/>
        <function-ref name="forceState" scoped="" ref="0x2b527e33d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b527e33cd90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b527e33cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527e33b180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527e33b310"/>
        <function-ref name="start" scoped="" ref="0x2b527e33b4a0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e33b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e340980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e340980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e340d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b527e3382d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b527e3382d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b527e338650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b527e3387e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b527e338970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b527e338b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b527e33a580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b527e33a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b527e33a900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b527e33aa90"/>
        <function-ref name="isState" scoped="" ref="0x2b527e33ac20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b527e33adb0"/>
        <function-ref name="requestState" scoped="" ref="0x2b527e339020"/>
        <function-ref name="forceState" scoped="" ref="0x2b527e3391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e32bd70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e32bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e32a180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e32a310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e32a4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e32a630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e32a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527e32e350" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527e32e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e32e6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e32e860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e32e9f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e32eb80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e32ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b527e32b020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b527e32b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b527e32b3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b527e32b530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b527e32b6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b527e32b850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b527e32b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b527e3261c0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527e3261c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527e326540"/>
        <function-ref name="noAck" scoped="" ref="0x2b527e3266d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527e326860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b527e329410" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b527e329410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b527e329790"/>
        <function-ref name="setRetries" scoped="" ref="0x2b527e329920"/>
        <function-ref name="getRetries" scoped="" ref="0x2b527e329ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b527e329c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b527e329dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527e37e690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527e37e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e37ea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e37f860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e37f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e37fbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e37fd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e37e020"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e37e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e37e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b527e37c610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b527e37c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b527e37c990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b527e37cb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b527e37ccb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b527e37ce40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b527e37b020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b527e37b1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b527e37b340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b527e37b4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b527e37b660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b527e37b7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b527e37b980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b527e37bb10"/>
        <function-ref name="sync" scoped="" ref="0x2b527e37bca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b527e37a020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b527e37a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b527e3808b0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b527e3808b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527e380c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527e380dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527e37f020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527e37f1b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b527e37f340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527e37f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b527e381ce0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b527e381ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b527e3800a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b527e3791f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b527e3791f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b527e379570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b527e379700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b527e379890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b527e379a20"/>
        <function-ref name="setCca" scoped="" ref="0x2b527e379bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b527e379d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527e382a80" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e382a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e382e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e381020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e3811b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e381340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e3814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527e386020" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527e386020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e3863a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e386530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e3866c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e386850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e3869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b527e385df0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b527e385df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e3831c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b527e37ece0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b527e37ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b527e37d0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b527e37d230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b527e37d3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b527e37d550"/>
        <function-ref name="getPower" scoped="" ref="0x2b527e37d6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b527e37d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b527e37a4d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b527e37a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b527e37a950"/>
        <function-ref name="changed" scoped="" ref="0x2b527e37aae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b527e37ac70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b527e37ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b527e37db70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b527e37db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b527e37c020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b527e37c1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b527e37c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e385210" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e385210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e385590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527e377d30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527e377d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527e3760e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527e376270"/>
        <function-ref name="led1On" scoped="" ref="0x2b527e376400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527e376590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527e376720"/>
        <function-ref name="get" scoped="" ref="0x2b527e3768b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527e376a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527e3751b0"/>
        <function-ref name="set" scoped="" ref="0x2b527e376bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527e376d60"/>
        <function-ref name="led2On" scoped="" ref="0x2b527e375020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527e383470" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e383470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e3837f0"/>
        <function-ref name="source" scoped="" ref="0x2b527e383980"/>
        <function-ref name="address" scoped="" ref="0x2b527e383b10"/>
        <function-ref name="destination" scoped="" ref="0x2b527e383ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e383e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e382020"/>
        <function-ref name="type" scoped="" ref="0x2b527e3821b0"/>
        <function-ref name="setType" scoped="" ref="0x2b527e382340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e3824d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e382660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e3827f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b527e3770f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2b527e3770f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b527e377470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b527e377600"/>
        <function-ref name="request" scoped="" ref="0x2b527e377790"/>
        <function-ref name="granted" scoped="" ref="0x2b527e377920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b527e377ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b527e3e1a80" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b527e3e1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b527e3e1e00"/>
        <function-ref name="stopDone" scoped="" ref="0x2b527e3de020"/>
        <function-ref name="start" scoped="" ref="0x2b527e3de1b0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e3de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b527e3cc8f0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b527e3cc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b527e3cb740"/>
        <function-ref name="eventTime" scoped="" ref="0x2b527e3cbc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527e3db020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e3db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e3db3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e3db530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e3db6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e3db850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e3db9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b527e3dd880" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b527e3dd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e3ddc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b527e3d9e80" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b527e3d9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b527e3d8220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b527e3d83b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b527e3d8540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b527e3d86d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b527e3d0750" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b527e3d0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e3cf570"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e3cee50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e3ce9d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e3cfe40"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e3ce380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e3deb20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e3deb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e3dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b527e3d94e0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b527e3d94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527e3d9860"/>
        <function-ref name="noAck" scoped="" ref="0x2b527e3d99f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527e3d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b527e3d7320" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b527e3d7320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e3d6130"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e3d5af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e3d5670"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e3d6a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e3d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527e3dbc90" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e3dbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e3da0a0"/>
        <function-ref name="source" scoped="" ref="0x2b527e3da230"/>
        <function-ref name="address" scoped="" ref="0x2b527e3da3c0"/>
        <function-ref name="destination" scoped="" ref="0x2b527e3da550"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e3da6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e3da870"/>
        <function-ref name="type" scoped="" ref="0x2b527e3daa00"/>
        <function-ref name="setType" scoped="" ref="0x2b527e3dab90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e3dad20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e3d9020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e3d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b527e3d3590" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b527e3d3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b527e3d2390"/>
        <function-ref name="eventTime" scoped="" ref="0x2b527e3d28a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b527e42e1c0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b527e42e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e42e540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b527e431020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b527e431020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e4313a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e431530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e4316c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e431850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e4319e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b527e436e20" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b527e436e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b527e435c60"/>
        <function-ref name="eventTime" scoped="" ref="0x2b527e4331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b527e43fcb0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b527e43fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e43eb20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e43b4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e43b020"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e43c410"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e43c920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527e43bae0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e43bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e43be60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e439020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e4391b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e439340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e4394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b527e432880" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b527e432880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e432c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b527e431d10" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2b527e431d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e4300e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e430270"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e430400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e430590"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e430720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2b527e42d430" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b527e42d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527e42cb00"/>
        <function-ref name="clear" scoped="" ref="0x2b527e42a2a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b527e42c3d0"/>
        <function-ref name="set" scoped="" ref="0x2b527e42a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b527e430a80" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2b527e430a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e430e00"/>
        <function-ref name="source" scoped="" ref="0x2b527e42f020"/>
        <function-ref name="address" scoped="" ref="0x2b527e42f1b0"/>
        <function-ref name="destination" scoped="" ref="0x2b527e42f340"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e42f4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e42f660"/>
        <function-ref name="type" scoped="" ref="0x2b527e42f7f0"/>
        <function-ref name="setType" scoped="" ref="0x2b527e42f980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e42fb10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e42fca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e42fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e433bc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e433bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e432020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b527e425480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b527e425480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e425800"/>
        <function-ref name="isSet" scoped="" ref="0x2b527e425990"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e425b20"/>
        <function-ref name="set" scoped="" ref="0x2b527e425cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b527e4241e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b527e4241e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e424e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b527e421590" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b527e421590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b527e421910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b527e421aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b527e421c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b527e421dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b527e420020"/>
        <function-ref name="get" scoped="" ref="0x2b527e4201b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b527e420340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b527e420980"/>
        <function-ref name="set" scoped="" ref="0x2b527e4204d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b527e420660"/>
        <function-ref name="led2On" scoped="" ref="0x2b527e4207f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b527e422500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b527e422500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e421170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b527e3c64d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b527e3c64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e3c5390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e3c4c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e3c4800"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e3c5c60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e3c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527e439780" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e439780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e439b00"/>
        <function-ref name="source" scoped="" ref="0x2b527e439c90"/>
        <function-ref name="address" scoped="" ref="0x2b527e439e20"/>
        <function-ref name="destination" scoped="" ref="0x2b527e438020"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e4381b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e438340"/>
        <function-ref name="type" scoped="" ref="0x2b527e4384d0"/>
        <function-ref name="setType" scoped="" ref="0x2b527e438660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e4387f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e438980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e438b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b527e437210" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b527e437210"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b527e436020"/>
        <function-ref name="eventTime" scoped="" ref="0x2b527e436530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2b527e42e880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2b527e42e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e42ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2b527e429660" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b527e429660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b527e428ce0"/>
        <function-ref name="clear" scoped="" ref="0x2b527e426460"/>
        <function-ref name="isValid" scoped="" ref="0x2b527e4285b0"/>
        <function-ref name="set" scoped="" ref="0x2b527e426b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527e52b020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527e52b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e52b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e52b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e52b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e52b850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e52b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527e52bc30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e52bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e52a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e52a1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e52a340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e52a4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e52a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527e52a8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e52a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e52ac30"/>
        <function-ref name="source" scoped="" ref="0x2b527e52adc0"/>
        <function-ref name="address" scoped="" ref="0x2b527e529020"/>
        <function-ref name="destination" scoped="" ref="0x2b527e5291b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e529340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e5294d0"/>
        <function-ref name="type" scoped="" ref="0x2b527e529660"/>
        <function-ref name="setType" scoped="" ref="0x2b527e5297f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e529980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e529b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e529ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b527e528020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b527e528020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527e5283a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b527e528530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527e5286c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527efa43b0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527efa43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527efa4730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527efa48c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527efa4a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b527efa4be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527efa4d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527efa3020" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527efa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527efa33a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527efa3530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527efa36c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527efa3850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527efa39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527efa3c30" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527efa3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527efa2020"/>
        <function-ref name="source" scoped="" ref="0x2b527efa21b0"/>
        <function-ref name="address" scoped="" ref="0x2b527efa2340"/>
        <function-ref name="destination" scoped="" ref="0x2b527efa24d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b527efa2660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527efa27f0"/>
        <function-ref name="type" scoped="" ref="0x2b527efa2980"/>
        <function-ref name="setType" scoped="" ref="0x2b527efa2b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527efa2ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527efa2e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527efa1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b527efa12b0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b527efa12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527efa1630"/>
        <function-ref name="noAck" scoped="" ref="0x2b527efa17c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527efa1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527ef98e50" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527ef98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527ef97210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527ef973a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527ef97530"/>
        <function-ref name="cancel" scoped="" ref="0x2b527ef976c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527ef97850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b527ef97b00" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527ef97b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527ef97e80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527ef96030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527ef961c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527ef96350"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527ef964e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b527ef96730" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527ef96730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527ef96ab0"/>
        <function-ref name="source" scoped="" ref="0x2b527ef96c40"/>
        <function-ref name="address" scoped="" ref="0x2b527ef96dd0"/>
        <function-ref name="destination" scoped="" ref="0x2b527ef95020"/>
        <function-ref name="setSource" scoped="" ref="0x2b527ef951b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527ef95340"/>
        <function-ref name="type" scoped="" ref="0x2b527ef954d0"/>
        <function-ref name="setType" scoped="" ref="0x2b527ef95660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527ef957f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527ef95980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527ef95b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527e490940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527e490940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e490cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e490e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e48d020"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e48d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e48d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b527e4c0400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527e4c0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e4c07a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e4c0930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e4c0ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e4c0c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e4c0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b527e4c24b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527e4c24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e4c2850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e4c29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e4c2b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e4c2d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e4c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b527e4be720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e4be720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e4beaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e4bec30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e4bedc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e53c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e53c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b527e53c480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2b527e53c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e53c800"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e53c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b527e53cc60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2b527e53cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e53b020"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e53b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b527e4bf060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e4bf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e4bf3e0"/>
        <function-ref name="source" scoped="" ref="0x2b527e4bf570"/>
        <function-ref name="address" scoped="" ref="0x2b527e4bf700"/>
        <function-ref name="destination" scoped="" ref="0x2b527e4bf890"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e4bfa20"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e4bfbb0"/>
        <function-ref name="type" scoped="" ref="0x2b527e4bfd40"/>
        <function-ref name="setType" scoped="" ref="0x2b527e4be020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e4be1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e4be340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e4be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b527e523830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b527e523830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e5224c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527e522b30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527e522b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e521970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527e520340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527e521e30"/>
        <function-ref name="overflow" scoped="" ref="0x2b527e520800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b527e51ee60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b527e51ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedf5c0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b527cedf930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527e51aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527e505dd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMAMasterC.JoinRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e505dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e504180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e504310"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e5044a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e504630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e5047c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e505800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMAMasterC.JoinRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e505800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e505b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527e504a10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMAMasterC.JoinRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e504a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e504d90"/>
        <function-ref name="source" scoped="" ref="0x2b527e503020"/>
        <function-ref name="address" scoped="" ref="0x2b527e5031b0"/>
        <function-ref name="destination" scoped="" ref="0x2b527e503340"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e5034d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e503660"/>
        <function-ref name="type" scoped="" ref="0x2b527e5037f0"/>
        <function-ref name="setType" scoped="" ref="0x2b527e503980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e503b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e503ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e503e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527e501dc0" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527e501dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527e500180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e500310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e5004a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527e500630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527e5007c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527e500a10" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e500a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e500d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e4fe020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e4fe1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e4fe340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e4fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527e4fe720" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e4fe720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e4feaa0"/>
        <function-ref name="source" scoped="" ref="0x2b527e4fec30"/>
        <function-ref name="address" scoped="" ref="0x2b527e4fedc0"/>
        <function-ref name="destination" scoped="" ref="0x2b527e4fd020"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e4fd1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e4fd340"/>
        <function-ref name="type" scoped="" ref="0x2b527e4fd4d0"/>
        <function-ref name="setType" scoped="" ref="0x2b527e4fd660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e4fd7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e4fd980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e4fdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b527e4fdda0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b527e4fdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527e57c180"/>
        <function-ref name="noAck" scoped="" ref="0x2b527e57c310"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527e57c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527efefd90" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527efefd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527efee180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527efee310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527efee4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527efee630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527efee7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527efeea10" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527efeea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527efeed90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527efed020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527efed1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527efed340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527efed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527efed720" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527efed720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527efedaa0"/>
        <function-ref name="source" scoped="" ref="0x2b527efedc30"/>
        <function-ref name="address" scoped="" ref="0x2b527efeddc0"/>
        <function-ref name="destination" scoped="" ref="0x2b527efec020"/>
        <function-ref name="setSource" scoped="" ref="0x2b527efec1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527efec340"/>
        <function-ref name="type" scoped="" ref="0x2b527efec4d0"/>
        <function-ref name="setType" scoped="" ref="0x2b527efec660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527efec7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527efec980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527efecb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b527efecda0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMAMasterC.JoinSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b527efecda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b527efeb180"/>
        <function-ref name="noAck" scoped="" ref="0x2b527efeb310"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b527efeb4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b527efe1020" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMAMasterC.JoinSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b527efe1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527efe13a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527efe1530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527efe16c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527efe1850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527efe19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b527efe1c90" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMAMasterC.JoinSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b527efe1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b527efe00a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527efe0230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527efe03c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b527efe0550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b527efe06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b527efe0930" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMAMasterC.JoinSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527efe0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527efe0cb0"/>
        <function-ref name="source" scoped="" ref="0x2b527efe0e40"/>
        <function-ref name="address" scoped="" ref="0x2b527efdf020"/>
        <function-ref name="destination" scoped="" ref="0x2b527efdf1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b527efdf340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527efdf4d0"/>
        <function-ref name="type" scoped="" ref="0x2b527efdf660"/>
        <function-ref name="setType" scoped="" ref="0x2b527efdf7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527efdf980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527efdfb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527efdfca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotTimer" ref="0x2b527e57a550" loc="5:SlotTimerC.nc">
      <component-ref qname="SlotTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotTimer" scoped="" ref="0x2b527e57a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="setEpochTime" scoped="" ref="0x2b527e57a8d0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b527e57aa60"/>
        <function-ref name="scheduleSlot" scoped="" ref="0x2b527e57abf0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b527e57ad80"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b527e577020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2b527e569670" loc="12:SlotTimerP.nc">
      <component-ref qname="SlotTimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2b527e569670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e565c40"/>
        <function-ref name="fired" scoped="" ref="0x2b527e5671e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e565020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e567ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e564590"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e564110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e567660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e568390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e565630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e568860"/>
        <function-ref name="stop" scoped="" ref="0x2b527e568d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2b527e56e0f0" loc="11:SlotTimerP.nc">
      <component-ref qname="SlotTimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2b527e56e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e56a630"/>
        <function-ref name="fired" scoped="" ref="0x2b527e56db70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e56c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e56c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e569020"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e56aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e56c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e56ece0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e56a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e56d220"/>
        <function-ref name="stop" scoped="" ref="0x2b527e56d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2b527e574b60" loc="10:SlotTimerP.nc">
      <component-ref qname="SlotTimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2b527e574b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e56f110"/>
        <function-ref name="fired" scoped="" ref="0x2b527e5725f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e5714a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e571020"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e56fa10"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e56f590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e572a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e573790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e571ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e573c60"/>
        <function-ref name="stop" scoped="" ref="0x2b527e572170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotTimer" ref="0x2b527e577bb0" loc="7:SlotTimerP.nc">
      <component-ref qname="SlotTimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotTimer" scoped="" ref="0x2b527e577bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="setEpochTime" scoped="" ref="0x2b527e574020"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b527e5741b0"/>
        <function-ref name="scheduleSlot" scoped="" ref="0x2b527e574340"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b527e5744d0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b527e574660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b527e552dc0" loc="3:Timer32C.nc">
      <component-ref qname="SlotTimerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b527e552dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e59c390"/>
        <function-ref name="fired" scoped="" ref="0x2b527e59e970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e59d720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e59d2a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e59cc90"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e59c810"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e59edf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e59fa80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e59dd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e59e020"/>
        <function-ref name="stop" scoped="" ref="0x2b527e59e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b527e5495a0" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5495a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e545a80"/>
        <function-ref name="fired" scoped="" ref="0x2b527e547090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e547e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e547990"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e5444a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e544020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e547510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e548200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e545470"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e5486d0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e548ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527e541020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527e541020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e53f870"/>
        <function-ref name="fired" scoped="" ref="0x2b527e540840"/>
        <function-ref name="startAt" scoped="" ref="0x2b527e53f220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e540d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527e53fd30"/>
        <function-ref name="start" scoped="" ref="0x2b527e541e30"/>
        <function-ref name="stop" scoped="" ref="0x2b527e540380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527e543640" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527e543640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527e5439c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527efc5de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527efc5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527efc16e0"/>
        <function-ref name="fired" scoped="" ref="0x2b527efc26b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527efc1090"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527efc2b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527efc1ba0"/>
        <function-ref name="start" scoped="" ref="0x2b527efc3ca0"/>
        <function-ref name="stop" scoped="" ref="0x2b527efc21f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527efc5590" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527efc5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527efc5910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b527f056760" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b527f056760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527f056ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527f056c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527f056e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527f055020"/>
        <function-ref name="fired" scoped="" ref="0x2b527f0551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b527f05ad20" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527f05ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527f0580e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527f058270"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527f058400"/>
        <function-ref name="get" scoped="" ref="0x2b527f058590"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527f058720"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527f0588b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b527f058a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527f058bd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b527f058d60"/>
        <function-ref name="setMode" scoped="" ref="0x2b527f057020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527f0571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b527f057440" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527f057440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527f0577c0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527f057950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527f057ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527f057c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527f057e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527f056020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527f0561b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527f056340"/>
        <function-ref name="setControl" scoped="" ref="0x2b527f0564d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b527f04c440" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b527f04c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b527f04c7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b527f04c950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b527f04cae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b527f04cc70"/>
        <function-ref name="fired" scoped="" ref="0x2b527f04ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b527f04f9c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b527f04f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527f04fd40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b527f04e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527f04e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b527f04e340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527f04e4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527f04e660"/>
        <function-ref name="getMode" scoped="" ref="0x2b527f04e7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527f04e980"/>
        <function-ref name="overflow" scoped="" ref="0x2b527f04eb10"/>
        <function-ref name="setMode" scoped="" ref="0x2b527f04eca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b527f04ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527f0538b0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527f0538b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527f04f0d0"/>
        <function-ref name="fired" scoped="" ref="0x2b527f0510d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527f051a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527f051590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527f04f590"/>
        <function-ref name="start" scoped="" ref="0x2b527f0526e0"/>
        <function-ref name="stop" scoped="" ref="0x2b527f052bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b527f053020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b527f053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b527f0533a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b527f04d120" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b527f04d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b527f04d4a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b527f04d630"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b527f04d7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b527f04d950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b527f04dae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b527f04dc70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b527f04de00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b527f04c020"/>
        <function-ref name="setControl" scoped="" ref="0x2b527f04c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b527efbe140" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527efbe140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527efbbb30"/>
        <function-ref name="fired" scoped="" ref="0x2b527efbd9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527efbb4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527efbb020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527f065020"/>
        <function-ref name="start" scoped="" ref="0x2b527efbd020"/>
        <function-ref name="stop" scoped="" ref="0x2b527efbd530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b527f063b90" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b527f063b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527f05f4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b527f0604e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b527f060e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527f0609a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527f05f9a0"/>
        <function-ref name="start" scoped="" ref="0x2b527f0629d0"/>
        <function-ref name="stop" scoped="" ref="0x2b527f060020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b527f065690" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b527f065690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b527f0645b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b527f063020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b527f064a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b527f0634e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b527e5b41d0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b527e5b41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e5b4550"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e5b46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b527e5b7020" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b527e5b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e5b5870"/>
        <function-ref name="fired" scoped="" ref="0x2b527e5b6840"/>
        <function-ref name="startAt" scoped="" ref="0x2b527e5b5220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e5b6d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b527e5b5d30"/>
        <function-ref name="start" scoped="" ref="0x2b527e5b7e30"/>
        <function-ref name="stop" scoped="" ref="0x2b527e5b6380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b527e53da20" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527e53da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e5b9020"/>
        <function-ref name="fired" scoped="" ref="0x2b527e5bb510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e5ba300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e5bbe10"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e5b9920"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e5b94a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e5bb990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e5bc670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e5ba910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e5bcb40"/>
        <function-ref name="stop" scoped="" ref="0x2b527e5bb090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b527e5a5d90" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b527e5a5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b527e5a4180"/>
        <function-ref name="runTask" scoped="" ref="0x2b527e5a4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b527e5aaa70" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b527e5aaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e5a5020"/>
        <function-ref name="fired" scoped="" ref="0x2b527e5a8510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e5a6300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e5a8e10"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e5a5920"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e5a54a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e5a8990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e5a96b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e5a6910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e5a9b80"/>
        <function-ref name="stop" scoped="" ref="0x2b527e5a8090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b527e5b02b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b527e5b02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e5acaa0"/>
        <function-ref name="fired" scoped="" ref="0x2b527e5ae020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e5aee00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e5ae960"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e5aa4c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e5aa020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e5ae4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e5af020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e5ac470"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e5af510"/>
        <function-ref name="stop" scoped="" ref="0x2b527e5afa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b527e5997d0" loc="3:Timer32C.nc">
      <component-ref qname="SlotTimerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5997d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e596c40"/>
        <function-ref name="fired" scoped="" ref="0x2b527e597260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e596020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e597b60"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e595590"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e595110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e5976e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e598400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e596630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e5988d0"/>
        <function-ref name="stop" scoped="" ref="0x2b527e598da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b527e5920f0" loc="3:Timer32C.nc">
      <component-ref qname="SlotTimerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b527e5920f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b527cedfd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b527cedd180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b527e58f630"/>
        <function-ref name="fired" scoped="" ref="0x2b527e591b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b527e590920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b527e5904a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b527e58d020"/>
        <function-ref name="gett0" scoped="" ref="0x2b527e58fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b527e590020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b527e592ce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b527e58f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b527e591220"/>
        <function-ref name="stop" scoped="" ref="0x2b527e5916f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b527e5882f0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMAMasterC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b527e5882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b527e588670"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b527e588800"/>
        <function-ref name="getPayload" scoped="" ref="0x2b527e588990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b527e588b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b527e588cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b527e589cc0" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMAMasterC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b527e589cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b527e5880a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b527e587020" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMAMasterC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b527e587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b527e5873a0"/>
        <function-ref name="source" scoped="" ref="0x2b527e587530"/>
        <function-ref name="address" scoped="" ref="0x2b527e5876c0"/>
        <function-ref name="destination" scoped="" ref="0x2b527e587850"/>
        <function-ref name="setSource" scoped="" ref="0x2b527e5879e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b527e587b70"/>
        <function-ref name="type" scoped="" ref="0x2b527e587d00"/>
        <function-ref name="setType" scoped="" ref="0x2b527e586020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b527e5861b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b527e586340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b527e5864d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b527ccf20e0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b527ccf0460" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b527ccf01e0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b527ccefab0" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b527ccef830" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b527ccf17b0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b527ccf0cb0" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b527cd0b020" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
              <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cd0c680" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b527cd0c9d0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527cd0cd00" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b527ccfe2b0" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b527cd31020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b527cd33270" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b527cd32840" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b527cd35b00" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b527cd339e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b527cd38d10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b527cd35420" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b527cd32120" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b527c90bb70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b527c8c5c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b527cd832a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b527cd83020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b527cd875d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b527cd4ab60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b527cd48650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b527cd83b10" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b527cd82a00" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b527cd84790" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b527cd82270" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b527cd87d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b527cd86540" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b527cd84020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b527cd4ab60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b527cd48650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b527cd86d10" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b527cd4ab60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b527cd48650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b527cd98270" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b527cd957f0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b527cd95570" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b527cd943c0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b527cd94140" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b527cd96d80" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b527cd96580" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b527cd98c20" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b527cd989a0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b527cd9f560" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b527cd9d020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b527cd9fc60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b527cd9da00" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b527cd9d780" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b527cd9c410" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b527cd9c190" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b527cd9cb00" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b527cd8d810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b527cd8a2a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b527cd8a020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b527cd8b020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b527cd71ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b527cd8b760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b527cd8f9b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b527cd8d120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b527cd8f270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b527cd8e0e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b527cd8e9f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b527cd8e770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b527cd8acb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b527cd8aa30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b527cdb59f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b527cc6f2b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b527ca49420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b527c809020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b527c808020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b527c809790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b527c81b020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b527c81b870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527cf00260" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527cf00260"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b527cf004a0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527cf004a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2b527ceffac0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527cf004a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b527cf00d70" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b527ceff150" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527ceff480" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2b527ceff810" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527cf004a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b527cefa660" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cefa060" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527cefa390" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b527cefb790" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b527cefdc10" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cefd990" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b527cefcde0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cefc800" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b527cefcb50" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b527ceee0d0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b527ceef740" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b527ceefac0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527ceefdf0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b527cf126d0" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cf120d0" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527cf12400" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b527cf11840" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b527cf15430" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cf151b0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b527cf14950" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cf14370" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b527cf146c0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b527cef4100" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527cef4100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b527cef4340" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527cef4340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2b527cef3020" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cef4c40" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2b527cef3c50" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527cef4340"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527cef39d0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotTimer" loc="1:SlotTimer.nc">
      <function command="" provided="0" name="setEpochTime" ref="0x2b527cf0d660" loc="2:SlotTimer.nc">
        <interfacedef-ref qname="SlotTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2b527cf0d3e0" loc="2:SlotTimer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2b527cf0b110" loc="5:SlotTimer.nc">
        <interfacedef-ref qname="SlotTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b527cf0ce20" loc="5:SlotTimer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="scheduleSlot" ref="0x2b527cf0c750" loc="4:SlotTimer.nc">
        <interfacedef-ref qname="SlotTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b527cf0c4d0" loc="4:SlotTimer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2b527cf0ba50" loc="6:SlotTimer.nc">
        <interfacedef-ref qname="SlotTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b527cf0b7d0" loc="6:SlotTimer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEpochTime" ref="0x2b527cf0ddb0" loc="3:SlotTimer.nc">
        <interfacedef-ref qname="SlotTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b527cf3a760" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b527cf38020" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b527cf30610" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b527cf30390" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b527cf34980" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b527cf34700" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b527cf33880" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b527cf33290" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b527cf335f0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b527cf4a2f0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b527cf4dcd0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527cf4a060" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b527cf45020" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b527cf47ce0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b527cf45df0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b527cf45820" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527cf45b60" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b527cf46bc0" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b527cf43720" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b527cf44dc0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527cf43130" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b527cf43480" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b527cf47510" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b527cf49bb0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b527cf49280" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527cf495c0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b527cf49910" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b527cfb66f0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b527cfb5070" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b527cfb2120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b527cf86450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b527cf86870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b527cf909c0" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b527cf91990" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b527cf91020" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b527cf901f0" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b527cfb8470" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b527cfab660" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b527cfaedb0" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2b527cfcc020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527cfced70" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b527cfce5d0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b527cfd1390" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2b527cfdd020" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2b527cfc3de0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf633b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b527cf63bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b527cfc3b60" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf633b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b527cf63bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2b527cfdf0e0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2b527cfbd2a0" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf5e360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b527cf5eba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b527cfbd020" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf5e360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b527cf5eba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b527cfd6750" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2b527cfd4cf0" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2b527cfbe830" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf60290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2b527cf60a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2b527cfbda90" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf5e360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2b527cf5eba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2b527cfe3830" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2b527cfe35b0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2b527cfbae40" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b527cfd6020" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2b527cfbe040" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf60290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b527cf60a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b527cfbfda0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf60290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b527cf60a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2b527cfbcc80" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b527cfd6e80" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2b527cfba690" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2b527cfba410" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2b527cfe1190" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2b527cfe1910" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b527cfd8070" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2b527cfda020" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2b527cfde070" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b527cfd87b0" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2b527cfdd800" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b527cfd55c0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b527cfe2070" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2b527cf4b330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2b527cf65a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2b527cfd5d60" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2b527cfd3bd0" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2b527cfbc4d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2b527cfbc250" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b527cfd1d30" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527cfd1ab0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2b527cfbf600" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b527cf633b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2b527cf63bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2b527cfdf850" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b527cfdc020" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2b527cfd9800" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b527cf86450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b527cf86870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b527cfd9580" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b527cf86450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b527cf86870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2b527cfdaaf0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b527cf6f420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b527cf6f840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b527cfda870" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b527cf6f420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b527cf6f840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b527cfd0730" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2b527cfd4570" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2b527cfe2880" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2b527cfd3480" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2b527cfdc790" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2b527cfde850" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527cff7ce0" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527cff7ce0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b527cff4020" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527cff4020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b527cff4940" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527cff4020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b527cff3a50" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b527cff31f0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b527cff11f0" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b527cfea5b0" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b527cfead60" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b527cfe95a0" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b527cfe8510" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b527cfe7c60" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b527cfe54d0" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b527cfe9d30" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b527cfe40b0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b527cfe5dc0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b527cfecdf0" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b527cfe8cf0" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b527cfe74b0" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b527d058860" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b527d0570e0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b527d072a50" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b527d0711f0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b527d06db10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b527d06d890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b527d0742d0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b527d0700e0" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b527d06c490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b527d071930" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b527d0722b0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b527d06f7c0" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b527d074a70" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b527d075420" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b527d070860" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b527d06d020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b527d06f070" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b527d075b50" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b527d32d020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b527d32d750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b527d32e0e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b527d32b5e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b527d32e7e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b527d32de70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b527d32f2b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b527d32f980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b527d37e460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b527d37ecc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b527d3a5a40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b527d3c4e00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b527d3c1020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b527d3c4570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b527d3c36d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b527d3c1950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b527d3b6020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b527d3bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b527d3b7d20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b527d3bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b527d3b8020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b527d3b8b20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b527d3bd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b527d3b88a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b527d3bd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b527d3b7470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b527d3bd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b527d437770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b527d4967a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d496520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b527d495840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4955c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b527d491d30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d491730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527d491a60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b527d493da0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b527d492ce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d492720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527d492a50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b527d4b95f0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4b9370" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b527d4b87d0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4b8550" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b527d4b5940" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4b56c0" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b527d4bf840" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b527cce8930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d4bf5c0" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b527d48b400" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d48b180" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b527d48d840" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b527d48c350" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d48c0d0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b527d487d00" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d487720" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b527d487a70" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b527d489800" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d489220" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b527d489570" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b527d4842e0" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d484060" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b527d483680" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d4830d0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b527d4833f0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b527cce8550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b527d4850b0" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d486e00" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b527d4bdd00" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b527cce8930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b527d4bd720" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b527d4bda70" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b527cce8930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b527d4bbb50" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b527cce8930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b527d4aab00" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4aa540" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527d4aa870" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b527d4a5620" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4a5020" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527d4a5350" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b527d4a4660" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b527d4a82a0" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4a8020" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b527d4a6750" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d4a6170" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b527d4a64c0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b527d500020" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d501960" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b527d501ce0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b527d5030e0" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b527d501020" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d503970" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b527d503ce0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b527d523580" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b527d526de0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b527d52c770" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b527d52bbe0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b527d529840" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527d5295c0" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b527d52a4a0" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b527d52b350" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527d52b0d0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b527d5270e0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b527d52ad50" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b527d5330e0" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b527d533a10" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b527d534720" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b527d5344a0" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b527d5325c0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b527d532340" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b527d530270" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b527d52f020" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527d530c10" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b527d52faf0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b527d52f870" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b527d6a37a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527d6a37a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b527d6a39e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d6a39e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b527d69f840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d6a39e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d69f5c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b527d69c9d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d69c750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b527d6a05f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6a0370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b527d69bd00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d6a39e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d69b710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b527d69ba70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d6a39e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b527d690e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d690810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b527d690ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b527d6d4020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d68fd70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b527d690020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b527d691560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b527d6912e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b527d6f3430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6f31b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b527d6f6720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6f64a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b527d6b2dc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b527d6b2b40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b527d6b22a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b527d6b2020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b527d6f7880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b527d6f7600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b527d6f45e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6f4360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b527d6e8e60" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b527d6e8850" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b527d6e8bd0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b527d6bc0c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d6bdaa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b527d6bddf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b527d6b86d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d6b80d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b527d6b8440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b527d6bcba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b527c12b110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d6bc920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b527d6b9600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d6b9380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b527d6bd2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d6bd020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b527d6bb720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d6bb4a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b527d6ec650" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6ec3d0" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b527d6ef730" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6ef110" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b527d6ef4a0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b527d6ed630" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6ed3b0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b527d6eeb30" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6ee510" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b527d6ee8a0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b527d6ea630" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6ea3b0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b527d6b50b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6bede0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b527d70aca0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d70a6e0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b527d70aa10" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b527d707020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b527d704930" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b527d706ab0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b527d704360" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527d704690" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b527d7062b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b527d707bb0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b527d706020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b527d708780" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b527d708500" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b527d701b50" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b527d701350" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b527d6fa020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6fcc90" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b527d6fc490" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b527ccaaea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b527cca7c70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6fc190" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b527d6f9360" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b527cca67c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b527cca30d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527d6f9060" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b527d70f6e0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b527d70d840" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b527d70d070" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b527d715e20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b527d711e80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b527d70e020" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b527d70e840" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b527d7116c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b527d73ca70" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b527d73d020" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b527d73c2a0" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b527d73c020" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b527d73d790" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b527d6fdca0" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b527d6fda20" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b527d73e7a0" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b527d73e520" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b527d772640" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b527d772060" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b527d7723b0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b527d773020" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b527d774690" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b527d774020" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b527d774400" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b527d77aa40" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b527d77a7c0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b527d7738a0" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b527d777540" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b527d7772c0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b527d779b90" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b527d779910" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b527d7708a0" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b527d7756b0" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b527d775430" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b527d770070" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b527d778350" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b527d6d1360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b527d6d1ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b527d778b40" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b527d77a020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b527d7791f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b527d777ce0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b527d76c2b0" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b527d76c2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b527d76cb70" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b527d76b8f0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b527d76c2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b527d76b340" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b527d76b660" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b527d76c2b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b527d78bc10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b527ccab090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527d78b990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b527d78a710" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b527ccab090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527d78a490" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b527d7abc60" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b527d6d1360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b527d6d1ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527d7a7020" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527d7a7020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b527d7a7260" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b527d7a3e00" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b527d7a5e40" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b527d7a3460" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b527d7a4e60" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b527d7a31d0" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b527d7a4640" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b527d7a2620" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b527d7a7dc0" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b527d7a7b40" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527d7a7260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b527d7a5680" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b527d793560" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b527d7924f0" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b527d793d40" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b527cce8930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b527d795cd0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b527cce8930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b527d7956f0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b527cce8930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b527d795a40" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b527cce8d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b527d7d0e50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b527ccab090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b527d790e80" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b527ccab090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b527d790020" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b527d790890" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b527d790be0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b527d78d610" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b527ccab090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b527d78f770" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b527d78d020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b527d78d370" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b527d797c30" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b527d797470" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b527d798ce0" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b527d798420" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b527d97a030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b527d9791f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b527d97a9d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b527d97a750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b527d97c7a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b527d9a9020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b527d9a8ac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b527d9aa7c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b527d9a82a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b527d9a8020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b527d9aa020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b527d9a9820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b527da8a2b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b527da8ab00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b527da89390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b527dab9b60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527dab9580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b527dab98d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b527dab3dd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527dab3490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b527dab37e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b527dab3b30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b527dab56b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b527ccab090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527dab50d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b527dab5420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b527daba730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b527ccab090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527daba150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b527daba4a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b527dab62c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527dab7930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b527dab7c80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b527dab6020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b527daefcf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b527daef380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b527daef710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527daefa50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b527daeb3c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b527daec6a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b527daeca30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527daecd70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b527daeb110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b527daf3c90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b527daf3a10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b527db5e120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b527cf6f420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b527cf6f840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b527db66d70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527db66af0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b527db622a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527db62020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b527db63610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b527db62d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527db62ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2b527dc269d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2b527dbdc420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2b527dc2d620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b527dc2d3a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2b527dbe5af0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2b527dc2ac50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2b527dc325e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2b527dbdd540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2b527dc372d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b527dbdf500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2b527dbdf280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2b527dbe1a10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2b527dc34070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2b527dc2b550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2b527dc26270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2b527dc2ec30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2b527dc21350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2b527dc1e9d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2b527dbe4980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2b527dc368b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2b527dc331f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2b527dbdfdc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2b527dbe78c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2b527dc2e460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b527dc2e1e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2b527dbe7190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2b527dc2a4d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2b527dc25190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2b527dc20b00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2b527dc1e270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2b527dc29b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2b527dc258c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2b527dc2ddb0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2b527dc23390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2b527dbe30e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2b527dc317e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2b527dc247b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2b527dc28ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2b527dc33de0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2b527dc33b60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2b527dc1f2d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2b527dc2fa60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2b527dc29420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2b527dbe5390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b527cf9c240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b527cf9c660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b527dbe5110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b527cf9c240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b527cf9c660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2b527dc36190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2b527dbe12a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b527dbe1020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2b527dc349d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b527dc34750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2b527dc23b60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2b527dbe0b50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2b527dbe3850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2b527dc2f2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2b527dc2f020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b527c12c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2b527dbe4270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2b527dc24020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2b527dc28350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2b527dc2bcc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2b527dc31020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2b527dc32d30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2b527dc379f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2b527dbddc80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2b527dc1fa40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2b527dbe03c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b527dbe0140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2b527dc21b10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2b527dbdcb50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2b527dc20350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b527de54620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b527de543a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b527dea4bc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b527dea4280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b527dea45f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527dea4920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b527dea3960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b527dea33a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b527dea36d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527de8d730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527de8d730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b527de8d970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527de8d970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b527de894d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527de8d970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b527de89250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b527de8d970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b527def55e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b527df339e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b527df33020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b527df33750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b527df347f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b527df34020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b527df37d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b527df492a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b527c12c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527df49020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b527df4a2a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527df4a020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b527df462a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527df46020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b527df472a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b527df47020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:54" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b527ccf9720"/>
                <typename><typedef-ref name="message_t" ref="0x2b527ccf8d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527e0bf910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527e0bf910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b527e0bc270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b527e135020" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b527e135020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b527e12fc50" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b527e1335b0" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b527e131360" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b527e132d60" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b527e1310d0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b527e1325b0" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b527e12eca0" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b527e12e420" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b527e133d90" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b527c801090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b527e135b90" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b527e135910" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b527e12f2f0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b527e131d00" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b527e12f060" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b527e134680" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b527e134400" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b527c12c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b527e134e80" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b527e23c600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b527e23c600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b527e2382a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b527c810980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b527e23c600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b527e238020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b527e23c600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
