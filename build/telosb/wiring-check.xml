<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b3bbbef89a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3bbbf4e020"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b3bbbf4e020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3bbc0f4590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="LinkCtrl" scoped="" ref="0x2b3bbbef3470"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbbf4f570"/></to>
    </wire>
    <wire loc="50:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2b3bbbf4f570"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc127480"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="LinkSnd" scoped="" ref="0x2b3bbbf16650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbc12e710"/></to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbc12e710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbc126020"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="LinkRcv" scoped="" ref="0x2b3bbbf20020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc12e0c0"/></to>
    </wire>
    <wire loc="44:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbc12e0c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd872720"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2b3bbbf26e40"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd8673f0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd8673f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd82e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbbf01370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc96b020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd575dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd50db70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd4b3750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd4d0080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd3bf130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd292620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd164820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbcaa67e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbe023a40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbcdd8020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbca26510"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbc796280"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbc722780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbde0dca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbc1c8c80"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b3bbc0f4c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b3bbba083a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b3bbba083a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b3bbbe5e140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b3bbc1126c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbbf4d3d0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbbf4d3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbbf475d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbc112dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b3bbbf47ce0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b3bbbf48910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b3bbbf48910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbbf69850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b3bbbf46400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbbf496d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b3bbbf46ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbc5ddc40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbbf69850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbbf727e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b3bbbf82de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b3bbbf93020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bbbbb5080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bbbf92360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b3bbbfd65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc07e6d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b3bbbfe7020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc09cb30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b3bbbfcd700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc083160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b3bbbff8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc0a9cb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b3bbbfd4aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc084480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b3bbbfdb020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc0a9020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b3bbbff5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc0b7cb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b3bbbfe25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc0a2220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b3bbbfd7b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc0409d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b3bbbffaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc0922f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b3bbbfdd3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc093610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b3bbbfe65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc094220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b3bbbfcc700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc07c7a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b3bbbff7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc0c62f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b3bbbfe5be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc0b26d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b3bbbfd3890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc07dac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b3bbbfc6060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc02bc80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b3bbbfdbda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc0a1610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b3bbbfbb0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc085020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b3bbbfe1a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc0c16d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b3bbbfc7690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc08ca90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b3bbbff9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc0b07a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b3bbbfd0cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc08dde0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b3bbbfdc1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc0b1ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b3bbbff6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc0bf7a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b3bbbfe30c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc0abb30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b3bbbfdab80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc0c0ac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b3bbbffba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbc09acb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b3bbbfd9a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc0b7020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b3bbbfde570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bbc09a020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b3bbbfdf020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b3bbc0b9b30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b3bbc029c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0295b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b3bbc0282f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b3bbc0d8aa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b3bbc028940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b3bbc0d5260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc08a930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc02bc80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc088020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0295b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc082020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc02bc80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc0817a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0295b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc07b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc02bc80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc09fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0295b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b3bbc022c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b3bbc0212f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b3bbc0d59f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b3bbc021940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b3bbc0d4240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc099b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc0972f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc091160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc08f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc0af610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc0aec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc0a8b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc0a62f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc0c5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc0c47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc0be610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc0bdc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbc0b6b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b3bbc0b42f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbbe5c040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b3bbbe595d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b3bbba782d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd872720"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc906210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc1253b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="14:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b3bbc124b60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc908020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc908020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc928680"/></to>
    </wire>
    <wire loc="15:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b3bbc122020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b3bbd5ce020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b3bbd5ce020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b3bbd5c9080"/></to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2b3bbc132a90"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b3bbd6c6c50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b3bbd6c6c50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b3bbd6adb90"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2b3bbc13adf0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b3bbd6caaa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2b3bbc138c70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd6cf5c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2b3bbc135340"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbd80acc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbd80acc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2a2cb0"/></to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2b3bbc1300d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd7fd800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd7fd800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc906210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b3bbc130790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7f7530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7f7530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe325140"/></to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b3bbc12f500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd7f1140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd7f1140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc906210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2b3bbc12fca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7ede60"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7ede60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2fa4c0"/></to>
    </wire>
    <wire loc="40:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b3bbc14e5f0"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b3bbd7e4240"/></to>
    </wire>
    <wire loc="16:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b3bbd7e4240"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b3bbd7e3d90"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1cdd10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1c84f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2b3bbc1c9020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1ca320"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1ca320"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbc6f37a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b3bbc1c5bd0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b3bbc1e0310"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b3bbc1e0310"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b3bbc6f5060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b3bbc723430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b3bbc1c1400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b3bbc6f5060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b3bbc24a050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b3bbc1ff1e0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b3bbc6f60c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b3bbc6f60c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b3bbc24ea70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc6f5800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc6f0080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc6f06f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbc6f8c00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc6f8c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbc2501d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc6f78f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbda12c70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbda12c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc64d2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc2481d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc6f5800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbda0bd70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc24cca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b3bbc24ae60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbda12020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbda12020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbc64e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbc243710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbda0b5d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbda0b5d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b3bbc64f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc24cca0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc2f73e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b3bbc24a050"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b3bbc2f6dc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b3bbc24ea70"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b3bbc2f7cd0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc2501d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbc2f85b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc2f4570"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc2481d0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b3bbc2f5710"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b3bbc24ae60"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbc2ef740"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbc243710"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b3bbc2f4be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbc30ed30"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbc30ed30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b3bbc307550"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbc2ee180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbc5b39a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbc5b39a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b3bbc5ad9d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbc2eb2c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5ca2a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbc30b860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b3bbc302130"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc30e500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc30abc0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b3bbc326860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2b3bbc3f73f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b3bbc3f73f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4ed100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b3bbc300800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2b3bbc3f53f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b3bbc3f53f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4e9d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b3bbc324800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2b3bbc3f33f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b3bbc3f33f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4e3740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b3bbc322800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2b3bbc4233f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b3bbc4233f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4b0740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b3bbc320800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2b3bbc3f13f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b3bbc3f13f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4b5d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b3bbc399cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc46ad10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b3bbc3b7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4a5740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b3bbc4053d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc497740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b3bbc4143e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc51fd10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b3bbc4033f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc492100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b3bbc3b3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc49cd10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b3bbc3cf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4d8740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b3bbc3ee020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc516100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b3bbc3dd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc528740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b3bbc3fd3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4be740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b3bbc4213e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc504d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b3bbc40c3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc51a740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b3bbc393cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc45bd10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b3bbc3fb3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4b9100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b3bbc38fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc487100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b3bbc3adcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4c4d10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b3bbc3c9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4c9740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b3bbc3e8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc508100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b3bbc3d7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc51a740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b3bbc39dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc473740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b3bbc3bbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc478260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b3bbc3a6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4b5d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b3bbc4073f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc497740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b3bbc41b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc52dd10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b3bbc40e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc51a740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b3bbc3d4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4ab3f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b3bbc3bf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4e9d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b3bbc3e2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc532100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b3bbc4193e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc528740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b3bbc3f93e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4f2740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b3bbc397cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc464740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b3bbc3b5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4a0100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b3bbc3e6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc504d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b3bbc3b1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc497740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b3bbc3cd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4d3100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b3bbc3ec020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc512d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b3bbc3db020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc523100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b3bbc3a3e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4473f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b3bbc38dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc483d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b3bbc3abcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4be740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b3bbc3c7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4fb100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b3bbc41f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4ff740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b3bbc4123e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc51a740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b3bbc3c3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4f2740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b3bbc39bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc46e100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b3bbc3b9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc474d10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b3bbc3d6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4b0740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b3bbc4163e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc523100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b3bbc3d1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4dde00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b3bbc3f0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4e3740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b3bbc3df020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc52dd10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b3bbc395cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc45f100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b3bbc3e4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4ff740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b3bbc391cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc48c740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b3bbc3afcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc492100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b3bbc3cb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4ced10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b3bbc3ea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc50d740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b3bbc3d9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc51fd10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b3bbc39fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc443e00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b3bbc3bdcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc47e740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b3bbc3a8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4b9100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b3bbc3c5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4f7d10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b3bbc3ff3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4c4d10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b3bbc41d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc532100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b3bbc4013f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4c4d10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b3bbc3c1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc4ed100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b3bbc4103e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc51fd10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b3bbc43e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc508100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b3bbc409060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bbc49cd10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b3bbc5ad9d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbc5a6b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbc5d4c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbc5ddc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbc5cdc40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b3bbc5c2910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b3bbc5e0360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b3bbc5e0360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbc5da710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b3bbc5c8b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b3bbc5df6a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b3bbc5df6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbc6011d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b3bbc5c7e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b3bbc5de9c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b3bbc5de9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbc5fdd70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbc605930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2b3bbc3ee020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbc600480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2b3bbc3ec020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbc5fb020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2b3bbc3ea020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbda11be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbc30ed30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbda11440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc64dad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc64dad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc6ae400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc64c8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbda0bd70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc64d2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc6af020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc6af020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbde083a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b3bbc64f1d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b3bbc649b60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc64e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbc6b0210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc6b0210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbde09540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc6ae400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbde078b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b3bbc648c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbc30b860"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc6aecd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc64c8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc636a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc6ae400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbc6d29d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbc6af7a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbc6af7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbde08b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc6e7b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc30e500"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbde06210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc6aecd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3bbde069d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b3bbde0c330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b3bbde04c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbddd33a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc6e7b20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bbddd3b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bbc6d2400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbddd20f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbc6d29d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbddd2d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc6d0720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b3bbc722de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b3bbc723430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b3bbc718020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3bbbf4e020"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b3bbc718740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc710320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc710320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc7968d0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc7968d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc7c7810"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbc70f370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbc7a0110"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbc70d020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc79da40"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbc70e530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc7a0e70"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc742080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc79c720"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc70dc90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc79e490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbc796280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbc7c71c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbc791dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc742a00"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbc79b120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbc794480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbc79bd70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc795940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b3bbc7914a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b3bbc91b6c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbc794480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbc900de0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbc795940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc9006c0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b3bbc8ffc20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b3bbc7914a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbc7bb020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc791dc0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbc8fd920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc791dc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbc8f4dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc791dc0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b3bbc8fe590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b3bbc7bdc40"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b3bbc8fee80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b3bbc7c17d0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b3bbc7c0020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b3bbc8f8e10"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b3bbc7b5860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1ca320"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b3bbc8f5e40"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b3bbc1ff1e0"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b3bbc8296e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b3bbc7da4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b3bbc82dc70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b3bbc826a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b3bbc8fb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b3bbc8fb800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc928680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc94d340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbc907050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbc9277f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbc9277f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbd5f5da0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b3bbc906df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b3bbc96c880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b3bbc96c880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b3bbd5f3c00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc96a760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbc96a760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbd5f18f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbc9409e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd2ea550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd2ea550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd34ca80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc9348a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc95ebb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc95ebb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc98f700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbc906210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc96eb20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbc96eb20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd5f3020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc903800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc968810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc968810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc990670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc96b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd5f22d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbc93faf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd2e6660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd2e6660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd348af0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc94d340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbd569b80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbc956d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbd5ee830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b3bbc953500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b3bbd5f0b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbc961970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbc991740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbc991740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc98f700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbd569080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc990670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b3bbd2ec6e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b3bbc955790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b3bbc98e2e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b3bbc98e2e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b3bbd5ce020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbc95da80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbc98f080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbc98f080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbd2eba70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b3bbd5e60f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbc94c430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5ed860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbc992350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbc992350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbd559ca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd5ec690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbc9910f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbc9910f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbd557a50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b3bbd5e84d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b3bbd0dfb30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd5ecce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2e1d20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd5ebb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd34d640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbd5ea610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbc9e3dc0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbc9e3dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbca25970"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b3bbd5e71f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbc988990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbc988990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbc981020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbd5e6d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbd569b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b3bbd565d90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbd2eba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbd34c020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbd559ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbd54ea20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbd569080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbd5612d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b3bbc94be70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd5595f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd5595f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b3bbd54e370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbd2ec6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b3bbd34ec50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc94c430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbd55bcb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbd55bcb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbd5507b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b3bbc94b160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd55a960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbd55a960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b3bbd54f4d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b3bbc993560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b3bbd556170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b3bbd556170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b3bbd54c020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbd557a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbd54d840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b3bbd565d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc98d9f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc98d9f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc984690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5556b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd4b8220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbd4b8220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd4b6a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd4b7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd5cf2a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbd5cf2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd5cc3b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5ced70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd56dcf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbd56dcf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b3bbd567860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd567860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbc989600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbc989600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbc9822e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd555020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd56a980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd56a980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd565690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd565690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd514aa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd514aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd510e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd511950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc988300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbc988300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd2967c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd2967c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd290020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc981e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbc9f3950"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbc9f3950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbca26b80"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b3bbc9783f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b3bbc9eebf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b3bbc9eebf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b3bbca23740"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b3bbc97f6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbd16f6d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b3bbc97f6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbd2995c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b3bbd2995c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbd292ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b3bbd16f6d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbd163020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b3bbc9702a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b3bbd16c020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b3bbd16c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd1638c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b3bbc977060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbd16ccb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbd16ccb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbd1d0650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbc9b8330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbc9b0920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b3bbc9b7420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b3bbd4d6a20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b3bbd4d6a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b3bbd4cfa20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b3bbc9b3110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbd4d8aa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b3bbd4d8aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbcddc280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbc9b7bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b3bbc9a6b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b3bbc9a7ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b3bbc9a8c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b3bbc9e00c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b3bbca22b40"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b3bbca16d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b3bbcaa3220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b3bbcaa3220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b3bbca9d2e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b3bbca13060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b3bbcb9f370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b3bbcb9f370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcb921b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b3bbca12380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b3bbcb9cce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b3bbcb9cce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbd5710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b3bbca116a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b3bbcb99380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b3bbcb99380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbccd70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b3bbca0f0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b3bbcc0a210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b3bbcc0a210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b3bbcceea30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b3bbca441d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbd035e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbd035e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcd51960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b3bbca432e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b3bbd0327b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b3bbd0327b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbca439f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd031ae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd031ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbca45a80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd033ad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd033ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbca45160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd030160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd030160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbca4ab00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd08e870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd08e870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbca063d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd08c880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd08c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbca06c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd08b0a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd08b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbca4d5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd093e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd093e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbca48020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd092670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd092670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b3bbca0a520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b3bbd07e500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b3bbd07e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbca4ea90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd07fce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd07fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbca488e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd08fe50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd08fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b3bbca471c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b3bbd092e50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b3bbd092e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbca47a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd091e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd091e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b3bbca42d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbd06ca80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbd06ca80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcd51960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b3bbca42020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbd0a59e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbd0a59e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcd51960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b3bbca07810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b3bbd0dfb30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b3bbca1e020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b3bbd0ded30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b3bbd0ded30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b3bbd129310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b3bbca36820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b3bbca37940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbcaa67e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbca9ea20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbca9ea20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbde78a10"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b3bbca9d2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbde772a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbde78a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbde70a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbde772a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbdf085f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbde70a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbdef2510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b3bbdf02d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbde6f2a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbde6f2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbdef2da0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbdf049b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbcb1b020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbcb1b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbcb155f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbdeed020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbdef71b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbdef71b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbdeec760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbdef68f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbdef68f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbdeeba80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbdef5c10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbdef5c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b3bbbfe7020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b3bbbfde570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b3bbbfe5be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b3bbbfdc1f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b3bbbfe30c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b3bbbfdb020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b3bbbfe25a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b3bbbfdbda0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b3bbbfe1a50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b3bbbfdab80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b3bbbfdf020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b3bbbfd9a20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b3bbcb48950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b3bbc5ad9d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b3bbcb9e6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbdfd70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b3bbcb9d9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbdab70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b3bbcba00e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcb97710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b3bbcb9a020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbd01b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcb96930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b3bbc399cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcb90480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2b3bbc3cf020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbdd020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b3bbc39bcc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbd9de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b3bbc3a3e10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbd4930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2b3bbc3c7020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbcf480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b3bbc3d1020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbc9020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2b3bbc3c9020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b3bbcc065a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b3bbcbf1020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b3bbcc0ae30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b3bbcd37a70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcbf1ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2b3bbbfe65a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2b3bbcbf0da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2b3bbbffaa20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbefc20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b3bbc3d1020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b3bbcced610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b3bbcc34c40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b3bbcc34c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b3bbcc20a30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b3bbcd36610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b3bbcbe2e70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b3bbcbe2e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b3bbcc269d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b3bbcc29bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2b3bbcc16bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b3bbcc31bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2b3bbcc1da30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b3bbcc2fbc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b3bbcc1ba30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b3bbcbe6d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2b3bbcc22a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b3bbcc2cbc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b3bbcc18a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b3bbcc33bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2b3bbcc1fa30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b3bbcc28bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2b3bbcc15bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b3bbcc2ebc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2b3bbcc1aa30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b3bbcc35c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b3bbcc21a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b3bbcc2ac40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2b3bbcc17bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b3bbcc32bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2b3bbcc1ea30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b3bbcc30bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2b3bbcc1ca30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b3bbcbe7dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2b3bbcc23a30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b3bbcc2dbc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2b3bbcc19a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd032160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd08d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd0850a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd08c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd079500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b3bbd07c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd031490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b3bbd081880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd07d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd087880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b3bbd0880a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd034a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd4e680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd4e680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd48930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd030e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b3bbd02e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd080c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd02ebe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd07dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd0810a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd091670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd0830a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd085880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd083880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd07ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b3bbd07cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b3bbd088880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd0840a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd07ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd08b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd079ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b3bbd033480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b3bbd093670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd08f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd0860a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd086880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd08d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd0942f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b3bbd093020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd0307b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd07f500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b3bbd07a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd0870a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd084880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b3bbd032e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd08a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b3bbd094940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd08a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd0800a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd0789b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd43bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd41020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd41db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbcd51960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcd44810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd3fba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b3bbcd3b020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbcde0770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b3bbcde0770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbcddc280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b3bbcd3e400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcdbfc40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbcdbfc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbdfffe70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b3bbcd3c080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce198f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce198f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b3bbdffc2c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbcd8c680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbd05b020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbd05b020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbdffb440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbcd3bdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b3bbcd87120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b3bbcddc280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbcdd8b70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbdffb440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbce04850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b3bbdffc2c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce05020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbdfffe70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbce07430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbdffdaf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbdff35d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbdff35d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbcf442c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce05020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce60a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b3bbdffc8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b3bbce056a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b3bbce056a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b3bbce5f060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b3bbce02a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b3bbdffbbe0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbdfe5a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbce066b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b3bbce03690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbdff4860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbdff4860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcf45020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbce002a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbdfec020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbdfec020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b3bbcf474d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbce066b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbce60250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbce04850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbce5fc50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbce07430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbce61470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b3bbce5d3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b3bbce02a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b3bbce5e5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b3bbce03690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbce58480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbce002a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b3bbce5da50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbce4d020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbce4d020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b3bbcea4c70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbce58c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2b3bbce562f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b3bbce485e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbce9c150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbce49d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b3bbce9d780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b3bbcecdbb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b3bbc4073f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b3bbcecbb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2b3bbc4033f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b3bbcec9b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b3bbc4013f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b3bbcec7b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2b3bbc3fb3f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b3bbcec5b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2b3bbc3fd3f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2b3bbced2d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b3bbcf86430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b3bbdfec7c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbcf463f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b3bbdfecdd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b3bbcf92540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b3bbcf92540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b3bbcf86430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbdff15a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbce4d020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbdff3d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf44ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf44ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf39c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbcf428a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbdfe5a80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbcf442c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbcf3b850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbcf3b850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbe01e020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b3bbcf474d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b3bbcf40060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbcf45020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcf3ca80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbcf3ca80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbe01f270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbcf463f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbcf40990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf39c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbe01d400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbcf38570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbcf428a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf3fe50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf39c30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b3bbcf3f060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbce49d10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b3bbcf3f840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b3bbce485e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbcf39020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbe01e7a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbe01dcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbcf38570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3bbe01c500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b3bbe0220a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b3bbe01a7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2b3bbcf7f250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b3bbcea4c70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b3bbcf7bd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b3bbc4073f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b3bbcf79cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b3bbc4013f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd0c5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd06ada0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd062b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd0c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd0bbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd0c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd0af2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b3bbd0b12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd067120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b3bbd0b7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd0b22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b3bbd0c7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd0c6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd0bd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b3bbd0bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd0c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd06b760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd4e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd066aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b3bbd065120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd0b6a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd065870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd0b2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd067dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd0b8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd0c6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd0c7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd06a750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd0b9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd0ba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd0b8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd0b0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b3bbd0b1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b3bbd0be670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd0bae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd0b3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd0c0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd0afad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b3bbd06a100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b3bbd062370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd0c5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd0bde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd0c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd0bb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd0c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b3bbd068450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd0c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd064020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b3bbd064cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b3bbd0b32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd0b5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd066450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd0b52f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b3bbd0b02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd0bee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd0b9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b3bbd068aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd067770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd0c0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b3bbd064670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd0bf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd0b7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd0ad7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd098c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd0a3da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd09cb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd096670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd0f5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd096e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd0e82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b3bbd0ea2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd0a1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b3bbd0f0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd0ec2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b3bbd09bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd09ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd0f6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b3bbd0f8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd095670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd0a4760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd4e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd09faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b3bbd09e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd0efa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd09e870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd0ecad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd0a1dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd0f1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd09a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd09b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd0a3750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd0f3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd0f4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd0f1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd0e9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b3bbd0eaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b3bbd0f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd0f4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd0edad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd0fa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd0e8ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b3bbd0a3100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b3bbd09c370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd098480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd0f6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd095e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd0f5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd097670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b3bbd0a2450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd097e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd09d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b3bbd09dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b3bbd0ed2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd0eead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd09f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd0ee2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b3bbd0e92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd0f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd0f3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b3bbd0a2aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd0a1770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd0fae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b3bbd09d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd0f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd0f0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd0e77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b3bbd1268c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b3bbd11c020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b3bbd11c020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b3bbd116210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b3bbd112cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b3bbd101020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b3bbd101020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b3bbd0ff490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2b3bbd1155b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3bbd185a20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b3bbd1018c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2b3bbd1025a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2b3bbd1025a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbd1839e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b3bbd160b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b3bbd140020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b3bbd140020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b3bbd13dd20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b3bbd0ffd30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b3bbd1018c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbd196260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b3bbd192890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b3bbd192890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbd18c060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbd189190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2b3bbbfc6060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbd182c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b3bbc3bbcc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b3bbd1679f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b3bbd1cf5e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b3bbd169190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b3bbd1cfd70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b3bbd1ce7f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b3bbcaa3220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b3bbd1c0500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b3bbcba00e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b3bbd1ba820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b3bbcb9f370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b3bbd1b9b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b3bbcb9a020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b3bbd1c2880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b3bbcc065a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b3bbd1b7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbd25cc30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbd25cc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcd51960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd1b7d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd25b8f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd25b8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd4e680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b3bbd1b46d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b3bbd25a2f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b3bbd25a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b3bbd1b4de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b3bbd259cc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b3bbd259cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd1b2530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd258370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd258370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd1b2c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd257d00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd257d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd1b5e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd251c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd251c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd1b6780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd2a57a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd2a57a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd1b5550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd23d2f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd23d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd1b13e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd252480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd252480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd1b05e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd24ee50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd24ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd1af020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd24d670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd24d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b3bbd1b1e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b3bbd2547b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b3bbd2547b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd1ae9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd2a7ad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd2a7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b3bbd1af890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b3bbd23c2f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b3bbd23c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b3bbd1ae130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b3bbd23cad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b3bbd23cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b3bbd1a9d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b3bbd299df0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b3bbd299df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b3bbd291550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd1caa00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd1c99a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b3bbd1c87c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd2ea550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd1bbb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd2e2480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd2e2480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd3448b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbd1ac6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd24fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd259020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd253c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd246e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd24de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd2a62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b3bbd241670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b3bbd252c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd247670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b3bbd24ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd24c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b3bbd255370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd240a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd255ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd23dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd257060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd243e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd251480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd25a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd244e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd245670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd243670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b3bbd248670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd245e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd23ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd24b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd2a6ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b3bbd253490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd24f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd247e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd24ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd246670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd24e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b3bbd259670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd254160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b3bbd254e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b3bbd23e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd23fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd2576b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd23f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b3bbd2a72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd248e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd244670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd2589c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd24be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd24a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd241e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b3bbd295020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b3bbd2907c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbd27b150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b3bbd28e020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b3bbcb9f370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b3bbd28d380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b3bbcb9e6a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b3bbd28c6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b3bbcb9d9d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b3bbd28ba50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b3bbcc0ae30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b3bbd28a6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbd437d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bbd437d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bbcd51960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd289530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd489ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd489ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd288ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd4a66b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd4a66b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b3bbd2883a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b3bbd4a5370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b3bbd4a5370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd287330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2861e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b3bbd284d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd2ea550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbd286b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbc9e3dc0"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd27f3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd49ee50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd49ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd27fcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd49d670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd49d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd280b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd4a4160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd4a4160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd27d6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd4892f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd4892f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b3bbd27e590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b3bbd48b2f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b3bbd48b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b3bbd27ee00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b3bbd48bad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b3bbd48bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd27c020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd48cad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd48cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b3bbd27c8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b3bbd435300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b3bbd435300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b3bbd2dd9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbd3557c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbcb1b020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b3bbd33f820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd35e4e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b3bbd341b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd3b9610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd3b9610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd4592b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b3bbd3be020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbd468150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbd3bf130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd38a020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbd38a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbe1359d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b3bbd462640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbd3d02f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbd3cb850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbd38a870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbd38a870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbe12e5f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbd458690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbd3a9b70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbd3a9b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbd3a1610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbe1359d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbe1c3360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b3bbe128d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbe134260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbe134260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbe1c3bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbe12a9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbd3a9b70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe1c0dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe1c8020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe1c8020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe1bd440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe1c7760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe1c7760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe1bc760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe1c6a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe1c6a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b3bbd39fb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b3bbc5ad9d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b3bbd3c79c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b3bbd45da00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbd44f8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3bbd4462c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b3bbd4462c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3bbd3be020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd49fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd434020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd4a2c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd496e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd49de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd4a7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b3bbd491670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd48c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b3bbd4a1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd4a0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd497670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b3bbd499e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd49b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd436970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd4e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd4a6d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd490a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd4a5ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd4a6060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd492e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd4a0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd4a1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd435950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd493e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd494670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd492670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd48aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b3bbd498670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd494e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd48dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd49a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b3bbd4a2490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd49f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd497e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd49be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd496670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd49e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b3bbd434670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b3bbd4a4e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b3bbd48d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd48fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd48f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b3bbd48a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd498e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd493670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b3bbd434cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd4a79c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd49ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b3bbd4a47b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd499670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd491e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd4887a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b3bbd4d4920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b3bbd4d0940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbd4da9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbd4d0080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd4b3e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b3bbd4b7020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b3bbd4b1ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbd4b4690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b3bbd4b4690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbcddc280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b3bbd4b08f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b3bbd4d6a20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd4af170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b3bbd511200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b3bbd50d570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd50c3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd511950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd50ca70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd54cd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5556b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd54ab10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd555020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd5492f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd548170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3bbd548b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b3bbd574410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b3bbd595db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b3bbd568800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbd563580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b3bbd563580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbcddc280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5c9dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5ced70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b3bbd5c8af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbd60e350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b3bbd60e350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b3bbcddc280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2b3bbd5c6650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbd60c750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bbd60c750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3bbd4462c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbd5c79a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b3bbd2ec6e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd5c1a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2b3bbd5bd2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bbd6d2580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc928680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b3bbd6bd060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b3bbd6aa910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd6ce7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbd6af340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b3bbd6ce1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b3bbd6a62c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbd6cb640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc95ebb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b3bbd6c3e50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b3bbd6b34d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3bbd6cf5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbd6a76b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbd6ccb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc968810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b3bbd6caaa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b3bbd6b8c10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd6cd470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd6ae020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b3bbd6a6a00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7a6020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7a6020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe246cb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b3bbd6a46a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7a58b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7a58b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe244590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b3bbd6a5800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbd7a6c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd7a6c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbe245930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd6a1130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd2ea550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd69d270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd2e6660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd699020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd2e2480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbd79db30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbcb1b020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b3bbd699d30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd79f830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b3bbd697060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd79ae60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd79ae60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd3b9610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bbd7130f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd6a3e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3bbc906210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2b3bbd6a2550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b3bbc906df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbe246cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe239660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbe245930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe244590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbd7a3020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b3bbe243c10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbe243c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc903800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbe238460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd787940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2360e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbd787940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd7bc4b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7bb400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbc907050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7ba060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd7b8720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b3bbd7b7480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b3bbd7b7c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2a2cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe295e30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd809930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbe2a1930"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbe2a1930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd807590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2a0590"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2a0590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbd806c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b3bbe29fc10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbe29fc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc903800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbe293ad0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd787940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe292720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd7fddd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7fca10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbe325140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe318390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd7f6270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbe325d50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbe325d50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7f6e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe324990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe324990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbd7f45d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b3bbe322120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbe322120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc903800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbe317060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd787940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe317c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd7f1710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7f0400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2fa4c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2ed640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd7ecaa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbe2f90f0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbe2f90f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7eb720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2f9d00"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2f9d00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbd7e9da0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b3bbe2f7440"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3bbe2f7440"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc903800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3bbe2ec2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3bbd787940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2eb020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
    <wire loc="12:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2b3bbd7df1c0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd837680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd837680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd82e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2b3bbd7da680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd8820f0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd8820f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd82e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2b3bbd7d5be0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd87cb40"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd87cb40"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd82e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd82e1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbd89ad70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b3bbd8933b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bbd822470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbd81db10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbd828a00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbd828a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbe37aa90"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbd8281b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbe381dc0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bbe381dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bbe364660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b3bbe373210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbe37f650"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bbe37f650"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bbe363020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bbe376e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bbcb1b020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe35f190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe369450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe369450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe35e770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe368a80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe368a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe35da80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe367da0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe367da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b3bbd819cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b3bbd88e650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3bbd872cf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd871930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="4:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="1:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="11:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlotSchedulerC" loc="3:SlotSchedulerC.nc">
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="17:SlotSchedulerP.nc">
      <documentation loc="13:SlotSchedulerP.nc">
        <short></short>
      </documentation>
      <module/>
    </component>
    <component qname="SlotSchedulerC.EpochTimer" loc="2(SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlotSchedulerC.StartSlotTimer" loc="2(SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC.EndSlotTimer" loc="2(SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b3bbbff0230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b3bbbff05d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b3bbbff0980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b3bbbff0d00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b3bbbfef0d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b3bbbfef440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b3bbbfef7d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b3bbbfefb60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b3bbbfee020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b3bbc042960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b3bbc042d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b3bbc439890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b3bbc439c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b3bbc438020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b3bbc4383d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b3bbc438740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b3bbc5a7ad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b3bbc5a7ad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b3bbc66c5b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b3bbc6605b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b3bbc683d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b3bbcafc9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b3bbcafc9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b3bbcb17bb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b3bbcb17bb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b3bbcb643b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b3bbcb643b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b3bbcb647a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b3bbcb647a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b3bbcb62020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b3bbcb62020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b3bbcb623f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b3bbcb62bf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b3bbcb62bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b3bbcb1cdd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b3bbcb1cdd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b3bbcb41600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b3bbcb41600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b3bbcb419f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b3bbcb419f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b3bbcb40210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b3bbcb40210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b3bbcb405e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbd13b400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbd13b400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bbd13bb90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbd13bb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbd360a60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbd360a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbd3f7cd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbd3f7cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbd3c2230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbd3c2230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b3bbd3c2560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b3bbd72ca00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b3bbd7256b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b3bbd71b320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b3bbd783c80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b3bbd801060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="LinkSnd" ref="0x2b3bbbf16650" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkSnd" scoped="" ref="0x2b3bbbf16650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbbf169d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbbf16b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbbf16cf0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbbf16e80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbbef2030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b3bbbef89a0" loc="5:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b3bbbef89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3bbbef8d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkCtrl" ref="0x2b3bbbef3470" loc="6:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkCtrl" scoped="" ref="0x2b3bbbef3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbbef37f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbbef3980"/>
        <function-ref name="start" scoped="" ref="0x2b3bbbef3b10"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbbef3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2b3bbbf26e40" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2b3bbbf26e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbbf23390"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbf25970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbbf24720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbbf242a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbbf23c90"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbbf23810"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbbf25df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbbf14a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbbf24d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbbf25020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbbf254f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkRcv" ref="0x2b3bbbf20020" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkRcv" scoped="" ref="0x2b3bbbf20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbbf203a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3bbbf01370" loc="7:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbbf01370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbbf016f0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbbf01880"/>
        <function-ref name="address" scoped="" ref="0x2b3bbbf01a10"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbbf01ba0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbbf01d30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbbef7020"/>
        <function-ref name="type" scoped="" ref="0x2b3bbbef71b0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbbef7340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbbef74d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbbef7660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbbef77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b3bbbf4b4e0" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbbf4b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf4b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b3bbbf4e020" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b3bbbf4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3bbbf4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbbf4d3d0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbbf4d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf4d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b3bbbf46400" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b3bbbf46400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf46780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbbf475d0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbbf475d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf47950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b3bbbf47ce0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b3bbbf47ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf460a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b3bbbf46ae0" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b3bbbf46ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf46e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbbf496d0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbbf496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf49a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b3bbbf48910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b3bbbf48910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf48c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b3bbbf82de0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b3bbbf82de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b3bbbf65c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b3bbbf65310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b3bbbf654a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b3bbbf65630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b3bbbf65180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b3bbbf657c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b3bbbf65950"/>
        <function-ref name="initClocks" scoped="" ref="0x2b3bbbf65ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbbf69850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbbf69850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf69bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b3bbbf93020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b3bbbf93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b3bbbf92020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b3bbbf93530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b3bbbf936c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b3bbbf93850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b3bbbf933a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b3bbbf939e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b3bbbf93b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2b3bbbf93d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b3bbbf92360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bbbf92360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b3bbbf926e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbbf727e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbbf727e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbf72b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b3bbbfd65a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b3bbbfd65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfd6920"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfd6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfd6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfd6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfd5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfd51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfd5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfd54d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfd5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b3bbbfe7020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b3bbbfe7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfe73a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfe7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfe76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfe7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfe79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfe7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfe7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfe6020"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfe61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b3bbbfcd700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b3bbbfcd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfcda80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbfcdc10"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbfcdda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbfcc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbfcc1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbfcc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b3bbbff8a20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b3bbbff8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbff8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbff7020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbff71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbff7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbff74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbff7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b3bbbfd4aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b3bbbfd4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfd4e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfd3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfd31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfd3340"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfd34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b3bbbfdb020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b3bbbfdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfdb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfdb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfdb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfdb850"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfdb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b3bbbff5a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b3bbbff5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbff5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbff4020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbff41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbff4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbff44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbff4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b3bbbfe25a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b3bbbfe25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfe2920"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfe2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfe2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfe2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfe1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfe11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfe1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfe14d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfe1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b3bbbfd7b10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b3bbbfd7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfbc020"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfbc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfbc340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfbc4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfbc660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfbc7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfbc980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfbcb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfbcca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b3bbbffaa20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b3bbbffaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbffada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbff9020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbff91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbff9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbff94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbff9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b3bbbfdd3e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b3bbbfdd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfdd760"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfdd8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfdda80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfddc10"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfddda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b3bbbfe65a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b3bbbfe65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfe6a20"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfe6bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfe6d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfe5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfe51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfe5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfe54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfe5660"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfe57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b3bbbfcc700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b3bbbfcc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfcca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbfccc10"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbfccda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbfe9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbfe91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbfe9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b3bbbff7a20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b3bbbff7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbff7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbff6020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbff61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbff6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbff64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbff6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b3bbbfe5be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b3bbbfe5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfe4020"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfe41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfe4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfe44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfe4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfe47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfe4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfe4b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfe4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b3bbbfd3890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b3bbbfd3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfd3c10"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfd3da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfce020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfce1b0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b3bbbfc6060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b3bbbfc6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbbfc63e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbbfc6570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfc6700"/>
        <function-ref name="get" scoped="" ref="0x2b3bbbfc6890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfc6a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbfc6bb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbbfc6d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbfc4020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbbfc41b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbbfc4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbbfc44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b3bbbfdbda0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b3bbbfdbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfda180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfda310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfda4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfda630"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfda7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b3bbbfbb0c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b3bbbfbb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfbb440"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfbb5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfbb760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfbb8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfbba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfbbc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfbbda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfd6020"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b3bbbfe1a50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b3bbbfe1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfe1dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfe0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfe01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfe0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfe04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfe0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfe07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfe0980"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfe0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b3bbbfc7690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b3bbbfc7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfc7a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbfc7ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbfc7d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbfcd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbfcd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbfcd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b3bbbff9a20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b3bbbff9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbff9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbff8020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbff81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbff8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbff84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbff8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b3bbbfd0cf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b3bbbfd0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfd40a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfd4230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfd43c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfd4550"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfd46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b3bbbfdc1f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b3bbbfdc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfdc570"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfdc700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfdc890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfdca20"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfdcbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b3bbbff6a20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b3bbbff6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbff6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbff5020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbff51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbff5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbff54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbff5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b3bbbfe30c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b3bbbfe30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfe3440"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfe35d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfe3760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfe38f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfe3a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfe3c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfe3da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfe2020"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfe21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b3bbbfe96c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b3bbbfe96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbbfe9a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbbfe9bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfe9d60"/>
        <function-ref name="get" scoped="" ref="0x2b3bbbfe8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfe81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbfe8340"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbbfe84d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbfe8660"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbbfe87f0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbbfe8980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbbfe8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b3bbbfdab80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b3bbbfdab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfd9020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfd91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfd9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfd94d0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfd9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b3bbbffba20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b3bbbffba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbffbda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbbffa020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbbffa1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbbffa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbbffa4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbbffa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b3bbbfd9a20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b3bbbfd9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbffb020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbffb1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbffb340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbffb4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbffb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b3bbbfde570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b3bbbfde570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbbfde8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbbfdea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbbfdec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbbfdeda0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbbfdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b3bbbfdf020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b3bbbfdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbbfdf3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbbfdf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbbfdf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbbfdf850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbbfdf9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbbfdfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbbfdfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbbfde020"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbbfde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b3bbc0282f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b3bbc0282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc028670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b3bbc029c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b3bbc029c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc028020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b3bbc028940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b3bbc028940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc028cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b3bbc0295b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0295b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc029950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbc02bc80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc02bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc02a0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc02a230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc02a3c0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc02a550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc02a6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc02a870"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc02aa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc02ab90"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc02ad20"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc029020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0291b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b3bbc0212f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b3bbc0212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc021670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b3bbc022c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b3bbc022c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc021020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b3bbc021940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b3bbc021940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc021cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b3bbc0225b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0225b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc022950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbc024c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc024c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0230a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc023230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0233c0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc023550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0236e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc023870"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc023a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc023b90"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc023d20"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc022020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc08ca90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc08ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc08ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc08a020"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc08a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc08a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc08a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc08a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc0409d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc0409d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc040d50"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc08d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc08d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc08d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc08d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc08d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc08d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc08d980"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc08db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc088020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc088020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc08dde0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc08dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc08c180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc08c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc08c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc08c630"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc08c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc08a930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc08a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc08acb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc08ae40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc089020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc0891b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc089340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0894d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc089660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0897f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc089980"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc089b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc089ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc083160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc083160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0834e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc083670"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc083800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc083990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc083b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc083cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc085020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc085020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc0853a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc085530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0856c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc085850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc0859e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc085b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc085d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc084020"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc0841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc0817a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0817a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc081b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc084480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc084480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc084800"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc084990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc084b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc084cb0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc084e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc082020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc082020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0823a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc082530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0826c0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc082850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0829e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc082b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc082d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc081020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc0811b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc081340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc07c7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc07c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc07cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc07ccb0"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc07ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc07b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc07b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc07b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc07e6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc07e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc07ea50"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc07ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc07ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc07d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc07d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc07d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc07d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc07d660"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc07d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc09fc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc09fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc09e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc07dac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc07dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc07de40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc07c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc07c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc07c340"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc07c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc07b610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc07b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc07b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc07bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc07bcb0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc07be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc09f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc09f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc09f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc09f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc09f660"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc09f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc09f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc09acb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc09acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0990a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc099230"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc0993c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc099550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0996e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc099870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc09cb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc09cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc09b020"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc09b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc09b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc09b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc09b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc09b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc09b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc09bb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc09bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc0972f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc097670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc09a020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc09a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc09a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc09a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc09a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc09a850"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc09a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc099b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc099b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc098020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc0981b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc098340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc0984d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc098660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0987f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc098980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc098b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc098ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc098e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc097020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc0922f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc0922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc092670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc092800"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc092990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc092b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc092cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc092e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc094220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc094220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc0945a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc094730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0948c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc094a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc094be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc094d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc093020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc0931b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc093340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc08f7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc08f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc08fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc093610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc093610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc093990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc093b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc093cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc093e40"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc092020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc091160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc091160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0914e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc091670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc091800"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc091990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc091b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc091cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc091e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc08f020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc08f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc08f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc08f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc0b07a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc0b07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0b0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc0b0cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc0b0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0af020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0af1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc0af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc0b26d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc0b26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc0b2a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc0b2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0b2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc0b1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc0b11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0b1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc0b14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc0b1660"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc0b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc0aec50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0aec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc0b1ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc0b1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0b1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc0b0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc0b01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc0b0340"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc0af610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc0af610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0af990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc0afb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0afcb0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc0afe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0ae020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0ae1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc0ae340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0ae4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc0ae660"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc0ae7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc0a9cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc0a9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0a80a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc0a8230"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc0a83c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0a8550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0a86e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc0a8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc0abb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc0abb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc0aa020"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc0aa1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0aa340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc0aa4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc0aa660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0aa7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc0aa980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc0aab10"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc0aaca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc0a62f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0a62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0a6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc0a9020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc0a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0a93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc0a9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc0a96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc0a9850"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0a99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc0a8b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc0a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0a7020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc0a71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0a7340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc0a74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0a7660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0a77f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc0a7980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0a7b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc0a7ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc0a7e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc0c62f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc0c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0c6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc0c6800"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc0c6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0c6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0c6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc0c6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc0a2220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc0a2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc0a25a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc0a2730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0a28c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc0a2a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc0a2be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0a2d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc0a1020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc0a11b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc0a1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc0c47a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0c47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0c4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc0a1610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc0a1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0a1990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc0a1b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc0a1cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc0a1e40"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc0c5160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc0c5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0c54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc0c5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0c5800"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc0c5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0c5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0c5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc0c5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0c4020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc0c41b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc0c4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc0bf7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc0bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0bfb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc0bfcb0"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc0bfe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0be020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0be1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc0be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc0c16d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc0c16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc0c1a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc0c1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0c1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc0c0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc0c01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0c0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc0c04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc0c0660"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc0c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc0bdc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0bdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc0c0ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc0c0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0c0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc0bf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc0bf1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc0bf340"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc0be610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc0be610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0be990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc0beb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0becb0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc0bee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0bd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0bd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc0bd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0bd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc0bd660"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc0bd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0bd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbc0b7cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbc0b7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0b60a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbc0b6230"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbc0b63c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0b6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0b66e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbc0b6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc0b9b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc0b9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbc0b8020"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbc0b81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0b8340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbc0b84d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbc0b8660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0b87f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbc0b8980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbc0b8b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbc0b8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b3bbc0b42f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b3bbc0b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0b4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bbc0b7020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b3bbc0b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbc0b73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbc0b7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbc0b76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbc0b7850"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bbc0b6b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbc0b6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc0b5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc0b51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc0b5340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc0b54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc0b5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc0b57f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc0b5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc0b5b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc0b5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc0b5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc0b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b3bbc0d4240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b3bbc0d4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0d45c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b3bbc0d8aa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b3bbc0d8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0d8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b3bbc0d5260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b3bbc0d5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0d55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b3bbc0d59f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b3bbc0d59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc0d5d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b3bbbbb5080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bbbbb5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b3bbbbb5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b3bbba782d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b3bbba782d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b3bbba78650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b3bbbc4d7d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b3bbbc4d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b3bbbc4db50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b3bbbf67b50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b3bbbf67b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b3bbc0f3b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b3bbc0f31b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b3bbc0f3340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b3bbc0f34d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b3bbc0f3020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b3bbc0f3660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b3bbc0f37f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b3bbc0f3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b3bbc112dc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bbc112dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc111180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b3bbc0f4590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b3bbc0f4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3bbc0f4910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b3bbc1126c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b3bbc1126c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc112a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b3bbc0f4c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b3bbc0f4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc112020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b3bbc1121b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3bbc112340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b3bbb99e1d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbb99e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbb99e550"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbb99e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b3bbba083a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b3bbba083a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbba08720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b3bbba088b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3bbba08a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b3bbbe5c040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b3bbbe5c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbbe5c3c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbbe5c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b3bbbe595d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b3bbbe595d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b3bbbe59950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b3bbbe5e140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b3bbbe5e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbbe5e4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b3bbbe5e650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3bbbe5e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbc12e710" loc="4:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbc12e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc12ea90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc12ec20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc12edb0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc12d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc12d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc12e0c0" loc="3:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc12e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc12e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbbf4f570" loc="2:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbbf4f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbbf4f8f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbbf4fa80"/>
        <function-ref name="start" scoped="" ref="0x2b3bbbf4fc10"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbbf4fda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b3bbc124b60" loc="18:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2b3bbc124b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc123020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc1231b0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc123340"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc1234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2b3bbc12f500" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b3bbc12f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc12f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbc126020" loc="13:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbc126020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc1263a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc126530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc1266c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc126850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc1269e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2b3bbc13adf0" loc="21:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2b3bbc13adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc121c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc138590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc138110"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc139580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc139a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2b3bbc135340" loc="25:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2b3bbc135340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc1356c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc135850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc1359e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc135b70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc135d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2b3bbc12fca0" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2b3bbc12fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc1560a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc156230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc1563c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc156550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc1566e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc126cc0" loc="14:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc126cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc1250a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2b3bbc138c70" loc="22:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2b3bbc138c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc137020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b3bbc127480" loc="12:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b3bbc127480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc127800"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc127990"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc127b20"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc127cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2b3bbc132a90" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2b3bbc132a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b3bbc136890"/>
        <function-ref name="eventTime" scoped="" ref="0x2b3bbc136da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2b3bbc1300d0" loc="26:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2b3bbc1300d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc130450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2b3bbc130790" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b3bbc130790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc130b10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc130ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc130e30"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc12f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc12f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2b3bbc122020" loc="19:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b3bbc122020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b3bbc1223a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b3bbc122530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b3bbc1226c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b3bbc122850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b3bbc1229e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3bbc1253b0" loc="17:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc1253b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbc125730"/>
        <function-ref name="source" scoped="" ref="0x2b3bbc1258c0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbc125a50"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbc125be0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbc125d70"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbc124020"/>
        <function-ref name="type" scoped="" ref="0x2b3bbc1241b0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbc124340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbc1244d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbc124660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbc1247f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2b3bbc14e5f0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b3bbc14e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b3bbc1554d0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b3bbc14eb00"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b3bbc14ec90"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbc14ee20"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b3bbc155020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc1551b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b3bbc155340"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b3bbc14e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbc1cdd10" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1cdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc1cf0e0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc1cf270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b3bbc1c1400" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b3bbc1c1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b3bbc1c1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2b3bbc1c5bd0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b3bbc1c5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc1c8020"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc1c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbc1c8c80" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbc1c8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc1c70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2b3bbc1c9020" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2b3bbc1c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc1c93a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc1c9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbc1c84f0" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1c84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc1c8870"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc1c8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b3bbc1e0310" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b3bbc1e0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc1e0690"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc1e0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b3bbc1ff1e0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b3bbc1ff1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc1ff560"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b3bbc1ff6f0"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc1ff880"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b3bbc1ffa10"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b3bbc1ffba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3bbc1ffd30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc1e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbc1ca320" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbc1ca320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc1ca6a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc1ca830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbc6f78f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc6f78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbc6f7c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbc6f7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b3bbc6f5060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b3bbc6f5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc6f53e0"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc6f5570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b3bbc6f5800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc6f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b3bbc6f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b3bbc6f60c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b3bbc6f60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc6f6440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b3bbc6f65d0"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc6f6760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b3bbc6f68f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b3bbc6f6a80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3bbc6f6c10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc6f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbc6f8c00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc6f8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc6f7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc6f71b0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc6f7340"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc6f74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc6f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b3bbc24cca0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc24cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbc24e0a0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbc24e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b3bbc24a050" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b3bbc24a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc24a3d0"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc24a560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b3bbc2481d0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc2481d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b3bbc248550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b3bbc24ea70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b3bbc24ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc24edf0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b3bbc24b020"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc24b1b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b3bbc24b340"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b3bbc24b4d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3bbc24b660"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc24b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b3bbc24ae60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b3bbc24ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc249210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc2493a0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc249530"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc2496c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc249850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbc2501d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc2501d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc250550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc2506e0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc250870"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc250a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc250b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b3bbc243710" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbc243710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbc243a90"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbc243c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b3bbc2f73e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc2f73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbc2f7780"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbc2f7910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b3bbc2f6dc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b3bbc2f6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc2f5180"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc2f5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b3bbc2f4570" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc2f4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b3bbc2f4910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b3bbc2f4be0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b3bbc2f4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbc2f3020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbc2f31b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbc2f3340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbc2f34d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbc2f3660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbc2f37f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbc2f3980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbc2f3b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbc2f3ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbc2f3e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbc2f2020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbc2f21b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbc2f2340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbc2f25d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbc2f2760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbc2f28f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbc2f2a80"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbc2f2c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbc2f2da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbc2f1020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbc2f11b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbc2f1340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbc2f14d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbc2f1660"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc2f17f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbc2f1b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbc2f1d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbc2f0020"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbc2f01b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbc2f0340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbc2f04d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbc2f0660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbc2f07f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbc2f0980"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbc2f0b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbc2f0ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbc2f0e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbc2ef020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbc2ef1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbc2ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b3bbc2f7cd0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b3bbc2f7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc2f60a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b3bbc2f6230"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc2f63c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b3bbc2f6550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b3bbc2f66e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3bbc2f6870"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc2f6a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbc2ee180" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbc2ee180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbc2ed020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc2ed9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc2ed4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc2ede60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b3bbc2f5710" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b3bbc2f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc2f5ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc2f5c40"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc2f5dd0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc2f4020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc2f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbc2f85b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc2f85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc2f8950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc2f8ae0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc2f8c70"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc2f8e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc2f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b3bbc2ef740" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbc2ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbc2efae0"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbc2efc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbc2eb2c0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc2eb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc2eb640"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc2eb7d0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc2eb960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc2ebaf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc2ebc80"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc2ebe10"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc2ea020"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc2ea660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc2ea340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc2ea1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc2ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b3bbc30b860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbc30b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbc30bbe0"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbc30bd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b3bbc30e500" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc30e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc30e880"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc30ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b3bbc30ed30" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbc30ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbc3110e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbc311270"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbc311400"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbc311590"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbc311720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbc3118b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbc311a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbc311bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbc311d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbc310020"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbc3101b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbc310340"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbc3104d0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbc310760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbc3108f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbc310a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbc310c10"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbc310da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbc30d020"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbc30d1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbc30d340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbc30d4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbc30d660"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbc30d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc30d980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbc30dd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbc30c020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbc30c1b0"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbc30c340"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbc30c4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbc30c660"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbc30c7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbc30c980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbc30cb10"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbc30cca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbc30ce30"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbc30b020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbc30b1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbc30b340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbc30b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b3bbc324800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b3bbc324800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc324b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc324d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc323020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc323340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc323660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3237f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc323980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc323b10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc323ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc323e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc322020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3222b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc322440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b3bbc302130" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b3bbc302130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbc3024b0"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbc302640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b3bbc322800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b3bbc322800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc322b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc322d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc321020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc321340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc321660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3217f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc321980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc321b10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc321ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc321e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc320020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3202b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc320440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b3bbc320800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b3bbc320800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc320b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc320d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc31f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc31f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc31f340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc31f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc31f660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc31f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc31f980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc31fb10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc31fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc31fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc31e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc31e2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc31e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b3bbc307550" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b3bbc307550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbc3078d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbc307a60"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbc307bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbc307d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbc306020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbc3061b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbc306340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbc3064d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbc306660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbc3067f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbc306980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbc306b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbc306ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbc305020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbc3051b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbc305340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbc3054d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbc305660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbc3057f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbc305980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbc305b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbc305ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbc305e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbc304020"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc3041b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbc304540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbc3046d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbc304860"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbc3049f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbc304b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbc304d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbc303020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbc3031b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbc303340"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbc3034d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbc303660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbc3037f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbc303980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbc303b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbc303ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b3bbc30abc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc30abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc307020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc3071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b3bbc300800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b3bbc300800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc300b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc300d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc325020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc325340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc325660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc325980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc325b10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc325ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc325e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc324020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3242b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc324440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b3bbc326860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b3bbc326860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc326be0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc326d70"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc301020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc301340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc301660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3017f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc301980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc301b10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc301ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc301e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc300020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3002b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc300440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b3bbc399cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b3bbc399cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3980a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc398230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3983c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc398550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3986e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc398870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc398a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc398b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc398d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc397020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3971b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc397340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3974d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc397760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b3bbc3b7cc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b3bbc3b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3b6230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3b63c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3b6550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3b66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3b6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3b6a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3b6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3b6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3b5020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3b5760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b3bbc4053d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b3bbc4053d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc405750"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4058e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc405a70"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc405c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc405d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc404020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4041b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc404340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4044d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc404660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4047f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc404980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc404b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc404da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc403020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b3bbc4143e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b3bbc4143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc414760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4148f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc414a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc414c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc414da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc413020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4131b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc413340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4134d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc413660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4137f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc413980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc413b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc413da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc412020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b3bbc4033f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b3bbc4033f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc403770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc403900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc403a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc403c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc403db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc402020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4021b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc402340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4024d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc402660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4027f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc402980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc402b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc402da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc401020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b3bbc3b3cc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b3bbc3b3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3b2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3b23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3b2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3b26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3b2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3b2a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3b2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3b2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3b1020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3b1760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b3bbc3cf020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b3bbc3cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3cf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3cf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3cf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3cf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3cf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3cfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3cfd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3ce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3ce340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3ce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3ce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3ce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3cea80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3cec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b3bbc3ee020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b3bbc3ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3ee530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3ee6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3ee850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3ee9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3eeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3eed00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3ed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3ed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3ed340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3ed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3ed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3ed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3eda80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b3bbc3dd020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b3bbc3dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3dd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3dd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3dd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3dd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3dd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3ddb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3ddd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3dc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3dc340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3dc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3dc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3dc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3dca80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b3bbc3fd3f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b3bbc3fd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3fd770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3fd900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3fda90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3fdc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3fddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3fc1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3fc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3fc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3fc660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3fc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3fc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3fcb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3fcda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b3bbc4213e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b3bbc4213e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc421760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4218f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc421a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc421c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc421da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc420020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4201b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc420340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4204d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc420660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4207f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc420980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc420b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc420da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc41f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b3bbc40c3f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b3bbc40c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc40c770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc40c900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc40ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc40cc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc40cdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc40b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc40b1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc40b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc40b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc40b660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc40b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc40b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc40bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc40bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc43e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b3bbc393cc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b3bbc393cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3920a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc392230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3923c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc392550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3926e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc392870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc392a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc392b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc392d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc391020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc391340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc391760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b3bbc3fb3f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b3bbc3fb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3fb770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3fb900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3fba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3fbc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3fbdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3fa1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3fa340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3fa4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3fa660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3fa7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3fa980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3fab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3fada0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b3bbc38fcc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b3bbc38fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc38e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc38e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc38e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc38e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc38e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc38e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc38ea00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc38eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc38ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc38d020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc38d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc38d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc38d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc38d760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc38d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b3bbc3adcc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b3bbc3adcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3ac230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3ac3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3ac550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3ac6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3ac870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3aca00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3acb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3acd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3ab020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3ab760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b3bbc3c9020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b3bbc3c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3c93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3c9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3c96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3c9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3c99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3c9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3c9d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3c8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3c81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3c8340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3c84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3c8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3c87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3c8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b3bbc3e8020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b3bbc3e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3e83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3e8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3e86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3e8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3e89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3e8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3e8d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3e7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3e71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3e7340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3e74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3e7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3e77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3e7a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3e7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b3bbc3d7020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b3bbc3d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3d73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3d7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3d76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3d7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3d79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3d7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3d7d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc40a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc40a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc40a340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc40a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc40a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc40a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc40aa80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc40ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b3bbc39dcc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b3bbc39dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc39c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc39c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc39c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc39c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc39c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc39c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc39ca00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc39cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc39cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc39b020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc39b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc39b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc39b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc39b760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc39b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b3bbc3bbcc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b3bbc3bbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3ba180"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3ba310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3ba4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3ba630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3ba7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3ba950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3baae0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3bac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3bae00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3b9020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3b9760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b3bbc3a6cc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b3bbc3a6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3a5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3a53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3a5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3a56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3a5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3a5a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3a5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3a5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3d6020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3d6760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b3bbc4073f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b3bbc4073f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc407770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc407900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc407a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc407c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc407db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc406020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4061b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc406340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4064d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc406660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4067f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc406980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc406b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc406da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc405020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b3bbc41b3e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b3bbc41b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc41b760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc41b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc41ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc41bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc41bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc41a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc41a1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc41a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc41a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc41a660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc41a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc41a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc41ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc41ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc419020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b3bbc40e3e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b3bbc40e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc40e760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc40e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc40ea80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc40ec10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc40eda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc40d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc40d1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc40d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc40d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc40d660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc40d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc40d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc40db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc40dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc40c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b3bbc3f33f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b3bbc3f33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3f3770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3f3900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3f3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3f3c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3f3db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3f21b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3f2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3f24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3f2660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3f27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3f2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3f2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3f2da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b3bbc3d4cc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b3bbc3d4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3d3410"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3d35a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3d3730"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3d38c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3d3a50"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3d3be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3d3d70"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3d2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3d21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3d2340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3d24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3d2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3d27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3d2a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b3bbc3bf020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b3bbc3bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3bf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3bf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3bf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3bf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3bf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3bfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3bfd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3be340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3bea80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b3bbc3e2020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b3bbc3e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3e2530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3e26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3e2850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3e29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3e2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3e2d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3e11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3e1340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3e14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3e1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3e17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3e1a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3e1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b3bbc4193e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b3bbc4193e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc419760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4198f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc419a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc419c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc419da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc417020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4171b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc417340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4174d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc417660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4177f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc417980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc417b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc417da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc416020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b3bbc3f93e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b3bbc3f93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3f9760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3f98f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3f9a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3f9c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3f9da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3f81b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3f8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3f84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3f8660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3f87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3f8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3f8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3f8da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b3bbc397cc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b3bbc397cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3960a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc396230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3963c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc396550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3966e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc396870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc396a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc396b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc396d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc395020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc395340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc395760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b3bbc3b5cc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b3bbc3b5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3b4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3b43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3b4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3b46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3b4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3b4a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3b4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3b4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3b3020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3b3760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b3bbc3e6020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b3bbc3e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3e63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3e6530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3e66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3e6850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3e69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3e6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3e6d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3e5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3e51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3e5340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3e54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3e5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3e57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3e5a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3e5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b3bbc3b1cc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b3bbc3b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3b0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3b03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3b0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3b06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3b0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3b0a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3b0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3b0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3af020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3af760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b3bbc3cd020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b3bbc3cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3cd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3cd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3cd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3cd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3cdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3cdd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3cc340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3cca80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b3bbc3ec020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b3bbc3ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3ec3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3ec530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3ec6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3ec850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3ec9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3ecb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3ecd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3eb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3eb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3eb340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3eb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3eb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3eb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3eba80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b3bbc3db020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b3bbc3db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3db3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3db530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3db6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3db850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3db9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3dbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3dbd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3da020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3da1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3da340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3da4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3da660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3da7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3daa80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3dac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b3bbc3f53f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b3bbc3f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3f5770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3f5900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3f5a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3f5c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3f5db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3f4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3f41b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3f4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3f44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3f4660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3f47f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3f4980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3f4b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3f4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b3bbc3a3e10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b3bbc3a3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3a01c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3a0350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3a04e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3a0670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3a0800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3a0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3a0b20"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3a0cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3a0e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc39f020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc39f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc39f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc39f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc39f760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc39f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b3bbc38dcc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b3bbc38dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc38c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc38c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc38c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc38c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc38c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc38c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc38ca00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc38cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc38cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3bd020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3bd760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b3bbc3abcc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b3bbc3abcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3a9230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3a93c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3a9550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3a96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3a9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3a9a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3a9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3a9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3a8020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3a8760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b3bbc3c7020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b3bbc3c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3c7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3c76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3c7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3c79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3c7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3c7d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3c61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3c6340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3c64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3c6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3c67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3c6a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b3bbc3f13f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b3bbc3f13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3f1770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3f1900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3f1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3f1c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3f1db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc424020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4241b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc424340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4244d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc424660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4247f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc424980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc424b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc424da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc423020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b3bbc41f3e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b3bbc41f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc41f760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc41f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc41fa80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc41fc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc41fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc41e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc41e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc41e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc41e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc41e660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc41e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc41e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc41eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc41eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc41d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b3bbc4123e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b3bbc4123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc412760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4128f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc412a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc412c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc412da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc411020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4111b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc411340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4114d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc411660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4117f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc411980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc411b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc411da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc410020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b3bbc3c3020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b3bbc3c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3c33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3c3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3c36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3c3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3c39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3c3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3c3d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3c2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3c21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3c2340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3c24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3c2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3c27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3c2a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3c2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b3bbc4233f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b3bbc4233f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc423770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc423900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc423a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc423c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc423db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc422020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4221b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc422340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4224d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc422660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4227f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc422980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc422b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc422da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc421020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b3bbc39bcc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b3bbc39bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc39a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc39a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc39a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc39a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc39a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc39a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc39aa00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc39ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc39ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc399020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc399340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc399760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3998f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b3bbc3b9cc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b3bbc3b9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3b8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3b83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3b8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3b86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3b8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3b8a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3b8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3b8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3b7020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3b7760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b3bbc3d6cc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b3bbc3d6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3d5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3d53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3d5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3d56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3d5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3d5a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3d5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3d5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3d4020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3d41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3d4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3d44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3d4760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3d48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b3bbc3f73f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b3bbc3f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3f7770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3f7900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3f7a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3f7c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3f7db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3f61b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3f6340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3f64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3f6660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3f67f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3f6980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3f6b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3f6da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b3bbc4163e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b3bbc4163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc416760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4168f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc416a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc416c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc416da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc415020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4151b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc415340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4154d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc415660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4157f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc415980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc415b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc415da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc414020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b3bbc3d1020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b3bbc3d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3d1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3d16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3d1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3d19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3d1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3d1d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3d0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3d01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3d0340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3d04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3d0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3d07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3d0a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3d0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b3bbc3f0020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b3bbc3f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3f03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3f0530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3f06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3f0850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3f09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3f0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3f0d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3ef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3ef1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3ef340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3ef4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3ef660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3ef7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3efa80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3efc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b3bbc3df020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b3bbc3df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3df530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3df6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3df850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3df9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3dfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3dfd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3de020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3de1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3de340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3de4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3de660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3de7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3dea80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3dec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b3bbc395cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b3bbc395cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3940a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc394230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3943c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc394550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3946e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc394870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc394a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc394b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc394d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc393020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3931b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc393340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3934d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc393760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b3bbc3e4020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b3bbc3e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3e4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3e46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3e4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3e49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3e4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3e4d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3e3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3e31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3e3340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3e34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3e3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3e37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3e3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b3bbc391cc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b3bbc391cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3900a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc390230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3903c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc390550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3906e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc390870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc390a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc390b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc390d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc38f020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc38f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc38f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc38f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc38f760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc38f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b3bbc3afcc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b3bbc3afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3ae230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3ae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3ae550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3ae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3ae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3aea00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3aeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3aed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3ad020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3ad760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b3bbc3cb020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b3bbc3cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3cb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3cb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3cb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3cb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3cb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3cbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3cbd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3ca340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3caa80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b3bbc3ea020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b3bbc3ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3ea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3ea530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3ea6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3ea850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3ea9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3eab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3ead00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3e9340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3e9a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b3bbc3d9020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b3bbc3d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3d93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3d9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3d96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3d9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3d99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3d9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3d9d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3d8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3d81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3d8340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3d84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3d8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3d87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3d8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3d8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b3bbc39fcc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b3bbc39fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc39e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc39e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc39e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc39e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc39e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc39e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc39ea00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc39eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc39ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc39d020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc39d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc39d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc39d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc39d760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc39d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b3bbc3bdcc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b3bbc3bdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3bc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3bc230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3bc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3bc550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3bc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3bc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3bca00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3bcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3bcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3bb020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3bb760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b3bbc3a8cc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b3bbc3a8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3a7230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3a73c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3a7550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3a76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3a7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3a7a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3a7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3a7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3a6020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3a61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3a6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3a64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3a6760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b3bbc3c5020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b3bbc3c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3c5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3c56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3c5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3c59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3c5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3c5d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3c4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3c41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3c4340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3c44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3c4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3c47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3c4a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3c4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b3bbc3ff3d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b3bbc3ff3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3ff750"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3ff8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3ffa70"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3ffc00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3ffd90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3fe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3fe1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3fe340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3fe4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3fe660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3fe7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3fe980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3feb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3feda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b3bbc41d3e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b3bbc41d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc41d760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc41d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc41da80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc41dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc41dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc41c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc41c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc41c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc41c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc41c660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc41c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc41c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc41cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc41cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc41b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b3bbc4013f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b3bbc4013f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc401770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc401900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc401a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc401c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc401db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc400020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4001b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc400340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4004d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc400660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4007f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc400980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc400b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc400da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b3bbc3c1020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b3bbc3c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc3c13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc3c1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc3c16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc3c1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc3c19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc3c1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc3c1d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc3c0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc3c01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc3c0340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc3c04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc3c0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc3c07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc3c0a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc3c0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b3bbc4103e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b3bbc4103e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc410760"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4108f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc410a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc410c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc410da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc40f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc40f1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc40f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc40f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc40f660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc40f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc40f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc40fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc40fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc40e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b3bbc43e3f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b3bbc43e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc43e770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc43e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc43ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc43ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc43edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc43d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc43d1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc43d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc43d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc43d660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc43d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc43d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc43db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc43dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc43c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b3bbc409060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b3bbc409060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4097e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc409970"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc409b00"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc409c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc409e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc408020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4081b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc408340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4084d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc408660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4087f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc408980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc408b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc408da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4473f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc447770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc447900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc447a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc447c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc447db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc446020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4461b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc446340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4464d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc446660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4467f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc446980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc446b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc446da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc445020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc443e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc443e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4421c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc442350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4424e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc442670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc442800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc442990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc442b20"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc442cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc442e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc441020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc441340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc441760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc473740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc473740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc473ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc473c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc473de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc472020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc472340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4724d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc472660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc472980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc472b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc472ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc472e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc471120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc46e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc46e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc46e480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc46e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc46e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc46e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc46eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc46ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc46ede0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc46d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc46d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc46d340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc46d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc46d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc46d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc46da80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc46dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc46ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc46ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4680e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc468270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc468400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc468590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc468720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4688b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc468a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc468bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc468d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc467020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc467340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc467760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc464740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc464740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc464ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc464c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc464de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc463020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4631b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc463340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4634d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc463660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4637f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc463980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc463b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc463ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc463e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc462120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4622b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc45f100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc45f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc45f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc45f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc45f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc45f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc45fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc45fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc45fde0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc45e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc45e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc45e340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc45e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc45e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc45e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc45ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc45ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc45bd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc45bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc45a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc45a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc45a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc45a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc45a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc45a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc45aa40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc45abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc45ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc459020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4591b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc459340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4594d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc459760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc48c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc48c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc48cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc48cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc48cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc48b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc48b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc48b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc48b4d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc48b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc48b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc48b980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc48bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc48bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc48be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc48a120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc48a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc487100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc487100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc487480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc487610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4877a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc487930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc487ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc487c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc487de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc486020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc486340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc486660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc486a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc486c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc483d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc483d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4820e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc482270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc482400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc482590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc482720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc482a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc482bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc482d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc481020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc481340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc481760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc47e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc47e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc47eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc47ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc47ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc47d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc47d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc47d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc47d4d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc47d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc47d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc47d980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc47db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc47dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc47de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc47c120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc47c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc478260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc478260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4785e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc478770"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc478900"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc478a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc478c20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc478db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc477020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4771b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc477340"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4774d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc477660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4777f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc477980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc477c10"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc477da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc474d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc474d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4a90e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4a9270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4a9400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4a9590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4a9720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4a98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4a9a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4a9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4a9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4a8020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4a8760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4a5740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4a5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4a5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4a5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4a5de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4a41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4a4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4a44d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4a4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4a47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4a4980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4a4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4a4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4a4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4a3120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4a0100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4a0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4a0480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4a0610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4a07a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4a0930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4a0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4a0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4a0de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc49f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc49f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc49f340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc49f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc49f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc49f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc49fa80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc49fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc49cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc49cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc49b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc49b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc49b400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc49b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc49b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc49b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc49ba40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc49bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc49bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc49a020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc49a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc49a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc49a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc49a760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc49a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc497740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc497740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc497ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc497c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc497de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc496020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc496340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4964d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc496660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc496980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc496b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc496ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc496e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc495120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc492100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc492100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc492480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc492610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4927a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc492930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc492ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc492c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc492de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc491020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc491340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc491660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc491a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc491c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4c4d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4c4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4c20e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4c2270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4c2400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4c2590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4c2720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4c28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4c2a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4c2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4c2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4c1020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4c1760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4be740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4be740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4beac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4bec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4bede0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4bd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4bd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4bd4d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4bd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4bd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4bd980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4bdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4bdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4bde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4bc120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4b9100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4b9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4b9480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4b9610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4b97a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4b9930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4b9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4b9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4b9de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4b8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4b81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4b8340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4b84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4b8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4b87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4b8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4b8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4b5d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4b5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4b40e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4b4270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4b4400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4b4590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4b4720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4b48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4b4a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4b4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4b4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4b3020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4b3760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4b0740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4b0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4b0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4b0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4b0de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4af020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4af1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4af340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4af4d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4af660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4af7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4af980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4afb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4afca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4afe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4ae120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4ab3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4ab3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4ab770"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4ab900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4aba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4abc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4abdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4aa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4aa1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4aa340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4aa4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4aa660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4aa7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4aa980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4aab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4aada0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4dde00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4dde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4dc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4dc350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4dc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4dc670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4dc800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4dc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4dcb20"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4dccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4dce40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4db020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4db1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4db340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4db4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4db760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4db8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4d8740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4d8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4d8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4d8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4d8de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4d74d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4d7980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4d6120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4d3100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4d3480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4d3610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4d37a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4d3930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4d3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4d3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4d3de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4d1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4d11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4d1340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4d14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4d1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4d17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4d1a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4d1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4ced10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4ced10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4cd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4cd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4cd400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4cd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4cd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4cd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4cda40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4cdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4cdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4cc020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4cc760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4c9740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4c9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4c9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4c9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4c9de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4c81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4c8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4c84d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4c8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4c87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4c8980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4c8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4c8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4c8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4c7120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4fb100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4fb480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4fb610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4fb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4fb930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4fbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4fbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4fbde0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4fa340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4faa80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4f7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4f60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4f6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4f6400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4f6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4f6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4f68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4f6a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4f6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4f6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4f5020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4f5760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4f2740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4f2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4f2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4f2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4f2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4f1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4f11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4f1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4f14d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4f1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4f17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4f1980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4f1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4f1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4f1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4f0120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4ed100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4ed100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4ed480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4ed610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4ed7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4ed930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4edac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4edc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4edde0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4ec1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4ec340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4ec4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4ec660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4ec7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4eca80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4ecc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4e9d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4e9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4e80e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4e8270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4e8400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4e8590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4e8720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4e88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4e8a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4e8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4e8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4e7020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4e71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4e7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4e74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4e7760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4e3740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4e3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4e3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4e3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4e3de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4e21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4e2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4e24d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4e2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4e27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4e2980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4e2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4e2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4e2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4e1120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc516100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc516100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc516480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc516610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc5167a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc516930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc516ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc516c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc516de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc515020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc515340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc515660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc515a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc515c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc512d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc512d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5110e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc511270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc511400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc511590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc511720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc5118b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc511a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc511bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc511d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc510020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5101b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc510340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5104d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc510760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc50d740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc50d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc50dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc50dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc50dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc50c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc50c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc50c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc50c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc50c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc50c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc50c980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc50cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc50cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc50ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc50b120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc50b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc508100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc508100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc508480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc508610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc5087a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc508930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc508ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc508c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc508de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc507020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5071b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc507340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5074d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc507660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5077f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc507a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc507c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc504d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc504d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5030e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc503270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc503400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc503590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc503720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc5038b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc503a40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc503bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc503d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc502020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc502340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc502760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc4ff740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc4ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc4ffac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc4ffc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc4ffde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc4fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc4fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc4fe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc4fe4d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc4fe660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc4fe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc4fe980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc4feb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc4feca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc4fee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc4fd120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc4fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc532100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc532100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc532480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc532610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc5327a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc532930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc532ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc532c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc532de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc530020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc530340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc530660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc530a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc530c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc52dd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc52dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc52c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc52c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc52c400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc52c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc52c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc52c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc52ca40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc52cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc52cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc52b020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc52b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc52b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc52b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc52b760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc52b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc528740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc528740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc528ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc528c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc528de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc527020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5271b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc527340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5274d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc527660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5277f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc527980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc527b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc527ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc527e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc526120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc523100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc523100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc523480"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc523610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc5237a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc523930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc523ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc523c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc523de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc522020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc522340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc522660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc522a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc522c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc51fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc51fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc51e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc51e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc51e400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc51e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc51e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc51e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc51ea40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc51ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc51ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc51d020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc51d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc51d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc51d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc51d760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc51d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bbc51a740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b3bbc51a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc51aac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc51ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc51ade0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc519020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc519340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5194d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc519660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc519980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc519b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc519ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc519e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc518120"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bbc5b39a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbc5b39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbc5b07e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc5ae1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc5b0ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc5ae670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b3bbc5ad9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b3bbc5ad9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbc5aa810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc5a91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc5aacd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc5a9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b3bbc5d4c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbc5d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc5d2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbc5d21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbc5d2340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5d24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbc5d2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc5d27f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbc5d2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc5d2b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc5d2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbc5d2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbc5d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bbc5a6b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbc5a6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbc5a59b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbc5d4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbc5a5e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbc5d4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b3bbc5b2970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc5b2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc5b2cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc5b2e80"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc5ce030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc5ce1c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc5ce350"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5ce4e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc5ce670"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc5cecb0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5ce800"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc5ce990"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc5ceb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b3bbc5c2910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b3bbc5c2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5c2c90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5c2e20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5c81b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5c8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5c84d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5c8660"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5c87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbc5cdc40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbc5cdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc5ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b3bbc5c8b10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b3bbc5c8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5c7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5c71b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5c7340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5c74d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5c7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5c77f0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5c7980"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5c7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b3bbc5ca2a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc5ca2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc5ca620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc5ca7b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc5ca940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc5caad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc5cac60"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5cadf0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc5c9020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc5c9660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5c91b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc5c9340"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc5c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b3bbc5c7e30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b3bbc5c7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5c11e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5c1370"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5c1500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5c1690"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5c1820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5c19b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5c1b40"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5c1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b3bbc5e0360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b3bbc5e0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5e06e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5e0870"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5e0a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5e0b90"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5e0d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5df020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5df1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b3bbc5df6a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b3bbc5df6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5dfa20"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5dfbb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5dfd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5de020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5de340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5de4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5de660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b3bbc5ddc40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbc5ddc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc5dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b3bbc5de9c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b3bbc5de9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5ded40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5dd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5dd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5dd340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5dd660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5dd7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5dd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbc605930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbc605930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc605cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc605e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc604020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc6041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc604340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc6044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc604660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc6047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc604980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc604b10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc604ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc604e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc603020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc6032b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc603440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbc5da710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbc5da710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5daa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5dac20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5dadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc605020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc6051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc605340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc6054d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc605660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbc600480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbc600480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc600800"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc600990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc600b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc600cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc600e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc5ff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5ff1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5ff340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5ff4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc5ff660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5ff7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc5ff980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5ffb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc5ffda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbc6011d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbc6011d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc601550"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc6016e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc601870"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc601a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc601b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc601d20"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc600020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc6001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbc5fb020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbc5fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5fb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbc5fb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5fb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5fb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbc5fbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5fbd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbc5fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbc5fa340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbc5fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbc5fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbc5faa80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbc5fdd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbc5fdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbc5fc180"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbc5fc310"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbc5fc4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbc5fc630"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc5fc7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbc5fc950"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc5fcae0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbc5fcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbda12c70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbda12c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbda11020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbda111b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbda0bd70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbda0bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbda0a180"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbda0a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b3bbda0b5d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbda0b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbda0b950"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbda0bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbda12020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbda12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbda123a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbda12530"/>
        <function-ref name="request" scoped="" ref="0x2b3bbda126c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbda12850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbda129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b3bbda11be0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbda11be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbda0f020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbda0f1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbda0f340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbda0f4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbda0f660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbda0f7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbda0f980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbda0fb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbda0fca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbda0fe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbda0e020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbda0e1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbda0e340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbda0e5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbda0e760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbda0e8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbda0ea80"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbda0ec10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbda0eda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbda0d020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbda0d1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbda0d340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbda0d4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbda0d660"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbda0d7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbda0db80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbda0dd10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbda0c020"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbda0c1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbda0c340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbda0c4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbda0c660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbda0c7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbda0c980"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbda0cb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbda0cca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbda0ce30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbda0b020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbda0b1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbda0b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbda11440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbda11440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbda117c0"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbda11950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbc64d2c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc64d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbc64d640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbc64d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbc64c8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc64c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbc64cc20"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbc64cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b3bbc64f1d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b3bbc64f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbc64f550"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbc64f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbc64e020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc64e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc64e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc64e530"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc64e6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc64e850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc64e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbc64dad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc64dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbc64de50"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbc64c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bbc636a90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc636a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbc636e10"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbc634020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b3bbc649b60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b3bbc649b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbc648020"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbc6481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b3bbc636480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b3bbc636480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc636800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b3bbc6485b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbc6485b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbc648950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b3bbc648c20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b3bbc648c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbc636020"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbc6361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbc6af020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbc6af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbc6af3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbc6af550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbc6aecd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbc6aecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbc6ad0a0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbc6ad230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bbc6af7a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbc6af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc6afb20"/>
        <function-ref name="requested" scoped="" ref="0x2b3bbc6afcb0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc6afe40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc6ae020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbc6ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbc6b0210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc6b0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc6b05b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc6b0740"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc6b08d0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc6b0a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc6b0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbc6ae400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc6ae400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbc6ae780"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbc6ae910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbde0dca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbde0dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbde0c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b3bbde0c330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b3bbde0c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bbde0c6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bbde0c840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bbde0c9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bbde0cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbde083a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbde083a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbde08740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbde088d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbde06210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbde06210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbde065b0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbde06740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3bbde069d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b3bbde069d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bbde06d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bbde05020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bbde051b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bbde05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bbde08b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbde08b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbde07020"/>
        <function-ref name="requested" scoped="" ref="0x2b3bbde071b0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbde07340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbde074d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbde07660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbde05590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbde05590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbde05910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbde05aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbde05c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbde05dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbde04020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbde041b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbde04340"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbde04980"/>
        <function-ref name="set" scoped="" ref="0x2b3bbde04660"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbde044d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbde047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbde09540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbde09540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbde098e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbde09a70"/>
        <function-ref name="request" scoped="" ref="0x2b3bbde09c00"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbde09d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbde08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbde078b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbde078b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbde07c30"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbde07dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b3bbde04c50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b3bbde04c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbde02020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbde021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bbc6d2400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bbc6d2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bbc6d2780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bbc6d29d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbc6d29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc6d2d50"/>
        <function-ref name="requested" scoped="" ref="0x2b3bbc6d0020"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc6d01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc6d0340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbc6d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b3bbc6e7b20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbc6e7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc6d2020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc6d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bbc6d0720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbc6d0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbc6d0aa0"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbc6d0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bbddd3b00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bbddd3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bbddd3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bbddd20f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbddd20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbddd2470"/>
        <function-ref name="requested" scoped="" ref="0x2b3bbddd2600"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbddd2790"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbddd2920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbddd2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b3bbddd33a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bbddd33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbddd3720"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbddd38b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bbddd2d00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbddd2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbddd10a0"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbddd1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2b3bbc6f0080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b3bbc6f0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b3bbc6f0400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b3bbc6f06f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc6f06f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc6f0a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc6f0c00"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc6f0d90"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc6ef020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc6ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbc6f37a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbc6f37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc6f3b20"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc6f3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b3bbc723430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b3bbc723430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b3bbc7237b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbc722780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbc722780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc722b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b3bbc722de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b3bbc722de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b3bbc71f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b3bbc718020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b3bbc718020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3bbc7183a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b3bbc718740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b3bbc718740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc718ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc718c50"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc718de0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc717020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc710320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc710320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc7106a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc710830"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc7109c0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc710b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbc70f370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbc70f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc70f6f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc70f880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc70fa10"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc70fba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc70fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbc70d020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbc70d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc70d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbc70d530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc70d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc70d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbc70d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc70e530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc70e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc70e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbc742a00" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc742a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc742d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc741020"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc7411b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc741340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc7414d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc741660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc7417f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc741e30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc741980"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc741b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc741ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b3bbc742080" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc742080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbc742400"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbc742590"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbc742720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbc70dc90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc70dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbc70c0a0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbc70c230"/>
        <function-ref name="address" scoped="" ref="0x2b3bbc70c3c0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbc70c550"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbc70c6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbc70c870"/>
        <function-ref name="type" scoped="" ref="0x2b3bbc70ca00"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbc70cb90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbc70cd20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbc743020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbc7431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbc79b120" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbc79b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc79b4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc79b630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc79b7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc79b950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc79bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbc79bd70" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbc79bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc79a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbc7a0110" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbc7a0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc7a04b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc7a0640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc7a07d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc7a0960"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc7a0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbc79da40" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbc79da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc79ddc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbc79c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc79c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc79c340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbc79c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc7a0e70" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc7a0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc79e240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b3bbc79c720" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc79c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbc79caa0"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbc79cc30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbc79cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbc79e490" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc79e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbc79e810"/>
        <function-ref name="source" scoped="" ref="0x2b3bbc79e9a0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbc79eb30"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbc79ecc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbc79ee50"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbc79d020"/>
        <function-ref name="type" scoped="" ref="0x2b3bbc79d1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbc79d340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbc79d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbc79d660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbc79d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc7968d0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc7968d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc796c50"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc796de0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc795020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc7951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbc794480" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbc794480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b3bbbeedd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc794800"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc794990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc794b20"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc794cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc794e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbc796280" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbc796280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc796600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc795940" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc795940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b3bbbeedd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc795cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbc791dc0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc791dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc78d180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc78d310"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc78d4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc78d630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc78d7c0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc78d950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc78dae0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc78c1b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc78dc70"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc78de00"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc78c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b3bbc7914a0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b3bbc7914a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b3bbbeedd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b3bbc791820"/>
        <function-ref name="offset" scoped="" ref="0x2b3bbc7919b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b3bbc791b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc7c7810" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc7c7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc7c7b90"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc7c7d20"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc7c6020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc7c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b3bbc8296e0" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2b3bbc8296e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc829a60"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc829bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b3bbc7b5860" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b3bbc7b5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc7b5be0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc7b5d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b3bbc7da4f0" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2b3bbc7da4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc7da870"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc7daa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbc7c71c0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbc7c71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbc7c7540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b3bbc7b1480" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2b3bbc7b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b3bbc7b1800"/>
        <function-ref name="flush" scoped="" ref="0x2b3bbc7b1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b3bbc82dc70" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2b3bbc82dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc82c020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc82c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b3bbc7c0020" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b3bbc7c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b3bbc7c03a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2b3bbc7c0530"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b3bbc7c06c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b3bbc7c0850"/>
        <function-ref name="putData" scoped="" ref="0x2b3bbc7c09e0"/>
        <function-ref name="putDone" scoped="" ref="0x2b3bbc7c0b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b3bbc7c0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbc7bb020" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc7bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc7bb3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc7bb530"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc7bb6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc7bb850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc7bb9e0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc7bbb70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc7bbd00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc7b54d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc7b5020"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc7b51b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc7b5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b3bbc826a00" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b3bbc826a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc826d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc825020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b3bbc7c17d0" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b3bbc7c17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b3bbc7c1b50"/>
        <function-ref name="nextByte" scoped="" ref="0x2b3bbc7c1ce0"/>
        <function-ref name="startSend" scoped="" ref="0x2b3bbc7c1e70"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b3bbc7c5030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b3bbc7bdc40" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b3bbc7bdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b3bbc7c4020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b3bbc7c41b0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b3bbc7c4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b3bbc8fb020" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2b3bbc8fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc8fb3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc8fb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbc900de0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbc900de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b3bbbeedd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc8ff1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc8ff350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc8ff4e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc8ff670"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc8ff800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b3bbc8fb800" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2b3bbc8fb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc8fbb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc8fbd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc9006c0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc9006c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b3bbbeedd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc900a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b3bbc8ffc20" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2b3bbc8ffc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b3bbbeedd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b3bbc8fe020"/>
        <function-ref name="offset" scoped="" ref="0x2b3bbc8fe1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b3bbc8fe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbc8fd920" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc8fd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc8fdca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc8fde30"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc8fc020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc8fc1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc8fc340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc8fc4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc8fc660"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc8fcca0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc8fc980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc8fc7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc8fcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b3bbc8fee80" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b3bbc8fee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b3bbc8fd220"/>
        <function-ref name="nextByte" scoped="" ref="0x2b3bbc8fd3b0"/>
        <function-ref name="startSend" scoped="" ref="0x2b3bbc8fd540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b3bbc8fd6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b3bbc8fe590" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b3bbc8fe590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b3bbc8fe910"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b3bbc8feaa0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b3bbc8fec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b3bbc8f5e40" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b3bbc8f5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc8f41e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b3bbc8f4370"/>
        <function-ref name="receive" scoped="" ref="0x2b3bbc8f4500"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b3bbc8f4690"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b3bbc8f4820"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3bbc8f49b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc8f4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b3bbc8f8e10" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b3bbc8f8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b3bbc8f51c0"/>
        <function-ref name="resetSend" scoped="" ref="0x2b3bbc8f5350"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b3bbc8f54e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b3bbc8f5670"/>
        <function-ref name="putData" scoped="" ref="0x2b3bbc8f5800"/>
        <function-ref name="putDone" scoped="" ref="0x2b3bbc8f5990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b3bbc8f5b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbc8f4dc0" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc8f4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc8f3180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc8f3310"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc8f34a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc8f3630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc8f37c0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc8f3950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc8f3ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc8f21b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc8f3c70"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc8f3e00"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc8f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b3bbc91b6c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2b3bbc91b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b3bbc91ba40"/>
        <function-ref name="offset" scoped="" ref="0x2b3bbc91bbd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b3bbc91bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc908020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc9083a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc908530"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc9086c0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc908850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbc907050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbc907050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc9073d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc907560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc9076f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc907880"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc907a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b3bbc906df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b3bbc906df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc9051c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbc905450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbc905450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc9057d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbc905960"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc905af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc905c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbc905e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b3bbc9409e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbc9409e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbc948020"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbc948750"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbc949890"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc948e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b3bbc9348a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc9348a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b3bbc934c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b3bbc934db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b3bbc93a020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b3bbc93a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc906210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc906210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc906590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b3bbc903800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc903800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbc903b80"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbc903d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbc94a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbc904120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc904120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbc9044a0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbc904630"/>
        <function-ref name="address" scoped="" ref="0x2b3bbc9047c0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbc904950"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbc904ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbc904c70"/>
        <function-ref name="type" scoped="" ref="0x2b3bbc904e00"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbc903020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbc9031b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbc903340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbc9034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b3bbc93faf0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbc93faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbc93d0d0"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbc93d800"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbc93e970"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc93b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc928680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc928680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc928a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc928b90"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc928d20"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc927020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b3bbc956d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbc956d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbc95e0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbc95e270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbc95e400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbc95e590"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbc95e720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbc95e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b3bbc953500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b3bbc953500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b3bbc953980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbc96a760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbc96a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc96aae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbc96ac70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc96ae00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc969020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbc9691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbc9277f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbc9277f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc927b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc927d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc96e020"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc96e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc96e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b3bbc96c880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b3bbc96c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc96cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b3bbc961970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbc961970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbc961cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbc961e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbc968030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbc9681c0"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbc968350"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbc9684e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b3bbc95ebb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc95ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b3bbc955020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b3bbc9551b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b3bbc955340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b3bbc9554d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc96eb20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc96eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc96c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b3bbc968810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc968810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbc968b90"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbc968d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbc967020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b3bbc955790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b3bbc955790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b3bbc955b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2b3bbc955ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b3bbc955e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b3bbc954020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b3bbc9541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbc96b020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbc96b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbc96b3a0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbc96b530"/>
        <function-ref name="address" scoped="" ref="0x2b3bbc96b6c0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbc96b850"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbc96b9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbc96bb70"/>
        <function-ref name="type" scoped="" ref="0x2b3bbc96bd00"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbc96a020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbc96a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbc96a340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbc96a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b3bbc95da80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbc95da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b3bbc95de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc94d340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc94d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc94d6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc94d850"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc94d9e0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc94db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b3bbc98f080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbc98f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b3bbc98f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b3bbc98e2e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b3bbc98e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b3bbc98e660"/>
        <function-ref name="setRetries" scoped="" ref="0x2b3bbc98e7f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b3bbc98e980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b3bbc98eb10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b3bbc98eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b3bbc991740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbc991740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbc991ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbc991c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbc991de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbc990020"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbc9901b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbc990340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b3bbc992350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbc992350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc9926d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc992860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc9929f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc992b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc992d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b3bbc98f700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbc98f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b3bbc98fa80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b3bbc98fc10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b3bbc98fda0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b3bbc98e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b3bbc94be70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b3bbc94be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc993220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b3bbc990670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbc990670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbc9909f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbc990b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbc990d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbc94c430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc94c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc94c7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc94c940"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc94cad0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc94cc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc94cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b3bbc94b160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b3bbc94b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc94b4e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc94b670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc94b800"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc94b990"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc94bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b3bbc993560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b3bbc993560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbc9938e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbc993a70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc993c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc993d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbc992020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b3bbc9910f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbc9910f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc991470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc98d9f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc98d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc98dd70"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc989020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc9891b0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc989340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b3bbc988990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbc988990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbc988d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbc987020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbc9871b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbc987340"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbc9874d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbc987660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbc989600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbc989600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc989980"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc989b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc989ca0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc989e30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc988020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbc988300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbc988300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbc988680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbc984690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbc984690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbc984a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbc984ba0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbc984d30"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc982020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b3bbc981020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbc981020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbc9813a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbc981530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbc9816c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbc981850"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbc9819e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbc981b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b3bbc977060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b3bbc977060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbc9773e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbc977570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbc977700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbc977890"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbc977a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbc977bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b3bbc9b8330" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbc9b8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbc9b86b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbc9b8840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbc9b89d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbc9b8b60"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbc9b8cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbc9b8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b3bbc9702a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b3bbc9702a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc970620"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc9707b0"/>
        <function-ref name="modify" scoped="" ref="0x2b3bbc970940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc970ad0"/>
        <function-ref name="resend" scoped="" ref="0x2b3bbc970c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbc9822e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbc9822e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbc982660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc9827f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbc982980"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbc982b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbc982ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b3bbc9b7420" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b3bbc9b7420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b3bbc9b77a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b3bbc9b7930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b3bbc97f6f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b3bbc97f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbc97fa70"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbc97fc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbc9b0920" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbc9b0920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbc9b0ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbc9b0e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbc9b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b3bbc9783f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b3bbc9783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b3bbc978770"/>
        <function-ref name="rfOff" scoped="" ref="0x2b3bbc978900"/>
        <function-ref name="rxOn" scoped="" ref="0x2b3bbc978a90"/>
        <function-ref name="startVReg" scoped="" ref="0x2b3bbc978c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b3bbc978db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b3bbc97f020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b3bbc97f1b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b3bbc97f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbc9b7bf0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbc9b7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbc96f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbc96f1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbc96f340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbc96f4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbc96f660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbc96f7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbc96f980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbc9b8020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbc96fb10"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbc96fca0"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbc96fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b3bbc981e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc981e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc980210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc9803a0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc980530"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc9806c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc980850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b3bbc9b3110" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2b3bbc9b3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbc9b3590"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbc9b3720"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbc9b38b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbc9b3a40"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbc9b3bd0"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbc9b3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b3bbc9a6b70" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2b3bbc9a6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc9a4020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc9a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b3bbc9a7ba0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2b3bbc9a7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc9a6020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc9a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b3bbc9a8c20" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2b3bbc9a8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbc9a7020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbc9a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b3bbc9e3dc0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbc9e3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b3bbc9ef180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b3bbc9ef310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b3bbc9ef4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b3bbc9ef630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b3bbc9ef7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b3bbc9ef950"/>
        <function-ref name="setChannel" scoped="" ref="0x2b3bbc9efae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b3bbc9efc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b3bbc9efe00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b3bbc9ee020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b3bbc9ee1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b3bbc9ee340"/>
        <function-ref name="sync" scoped="" ref="0x2b3bbc9ee4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bbc9ee760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b3bbc9ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b3bbc9e00c0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b3bbc9e00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbc9e0cb0"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbc9df170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b3bbc9eebf0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b3bbc9eebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b3bbc9e2020"/>
        <function-ref name="rfOff" scoped="" ref="0x2b3bbc9e21b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b3bbc9e2340"/>
        <function-ref name="startVReg" scoped="" ref="0x2b3bbc9e24d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b3bbc9e2660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b3bbc9e27f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b3bbc9e2980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b3bbc9e2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbc9f3950" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbc9f3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbc9f3cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbc9f3e60"/>
        <function-ref name="request" scoped="" ref="0x2b3bbc9f0020"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbc9f01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbc9f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b3bbca25970" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbca25970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b3bbca25cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b3bbca25e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b3bbca24030"/>
        <function-ref name="syncDone" scoped="" ref="0x2b3bbca241c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b3bbca24350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b3bbca244e0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b3bbca24670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b3bbca24800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b3bbca24990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b3bbca24b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b3bbca24cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b3bbca24e40"/>
        <function-ref name="sync" scoped="" ref="0x2b3bbca23020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bbca232b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b3bbca23440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b3bbca488e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbca488e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca48c60"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca48df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b3bbca1e020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b3bbca1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b3bbca1e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b3bbca16d90" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2b3bbca16d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbca14670"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbca1c5d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbca14020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbca1ca90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbca14b30"/>
        <function-ref name="start" scoped="" ref="0x2b3bbca1dbc0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbca1c110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b3bbca4d5f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbca4d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca4d970"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca4db00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b3bbca12380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b3bbca12380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbca12700"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbca12890"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbca12a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbca12bb0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbca12d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbca11020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbca111b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbca11340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b3bbca22b40" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b3bbca22b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca21750"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbca21bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b3bbca36820" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2b3bbca36820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbca36ba0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbca36d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b3bbca471c0" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b3bbca471c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca47540"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca476d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b3bbca47a70" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbca47a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca47df0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca46020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b3bbca063d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbca063d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca06750"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca068e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b3bbca07810" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b3bbca07810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b3bbca07b90"/>
        <function-ref name="changed" scoped="" ref="0x2b3bbca07d20"/>
        <function-ref name="amGroup" scoped="" ref="0x2b3bbca0e020"/>
        <function-ref name="setAddress" scoped="" ref="0x2b3bbca0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b3bbca13060" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b3bbca13060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbca133e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbca13570"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbca13700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbca13890"/>
        <function-ref name="get" scoped="" ref="0x2b3bbca13a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbca13bb0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbca13d40"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbca12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b3bbca45160" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbca45160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbca456e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b3bbca116a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b3bbca116a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbca11a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbca11bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbca11d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbca10020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbca101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbca10340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbca104d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbca10660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbca26510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbca26510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbca26890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b3bbca48020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbca48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca483a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca48530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b3bbca45a80" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbca45a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbca45e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b3bbca441d0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b3bbca441d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbca44550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbca446e0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbca44870"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbca44a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbca44b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b3bbca42d90" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2b3bbca42d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbca41180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbca41310"/>
        <function-ref name="request" scoped="" ref="0x2b3bbca414a0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbca41630"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbca417c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b3bbca23740" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b3bbca23740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b3bbca23ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b3bbca23c50"/>
        <function-ref name="rxOn" scoped="" ref="0x2b3bbca23de0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b3bbca22020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b3bbca221b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b3bbca22340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b3bbca224d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b3bbca22660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b3bbca06c80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbca06c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca4d0a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca4d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b3bbca4ab00" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbca4ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca4ae80"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca06030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b3bbca432e0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b3bbca432e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbca43660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbca41a80" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbca41a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbca41e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbca40020"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbca401b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbca40340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbca404d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbca40660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbca407f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbca40e30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbca40980"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbca40b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbca40ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b3bbca37940" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2b3bbca37940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbca37cc0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbca37e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbca26b80" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbca26b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbca25020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbca251b0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbca25340"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbca254d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbca25660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b3bbca0a520" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b3bbca0a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca0a8a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca0aa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b3bbca4ea90" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbca4ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbca0a020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbca0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b3bbca0f0e0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b3bbca0f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbca0f460"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbca0f5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bbca0f780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bbca0f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b3bbca42020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2b3bbca42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbca423a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbca42530"/>
        <function-ref name="request" scoped="" ref="0x2b3bbca426c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbca42850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbca429e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b3bbca439f0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbca439f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbca43d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbcaa67e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbcaa67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbcaa6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b3bbcaa3220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b3bbcaa3220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbcaa1b30"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcaa2a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbcaa14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbcaa1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbca9f020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbcaa2090"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbcaa25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbca9ea20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbca9ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbca9eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b3bbca9d2e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b3bbca9d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbcba5b30"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcba6ae0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbcba54e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbcba5020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbcba3020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbcba6110"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbcba6620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbde772a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbde772a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbde74b30"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbde76aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbde744e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbde74020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbde73020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbde760d0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbde765e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbde78a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbde78a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbde78d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbde6f2a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbde6f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbde6db30"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbde6eaa0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbde6d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbde6d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbdf0a020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbde6e0d0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbde6e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbde70a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbde70a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbde70d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b3bbdef5c10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbdef5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbdef4020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbdef41b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbdef4340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbdef44d0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbdef4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b3bbdef71b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbdef71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbdef7530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbdef76c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbdef7850"/>
        <function-ref name="get" scoped="" ref="0x2b3bbdef79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbdef7b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbdef7d00"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbdef6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbdef61b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbdef6340"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbdef64d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbdef6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b3bbdef68f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbdef68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbdef6c70"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbdef6e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbdef5020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbdef51b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbdef5340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbdef54d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbdef5660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbdef57f0"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbdef5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b3bbcac9ba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbcac9ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbcac8020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbcac81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbcac8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbcac84d0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcac8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b3bbcacd4d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbcacd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcacd850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbcacd9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbcacdb70"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcacdd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbcacc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbcacc1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbcacc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbcacc4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbcacc660"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbcacc7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbcacc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b3bbcaca280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcaca280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbcaca600"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbcaca790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbcaca920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbcacaab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbcacac40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbcacadd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbcac9020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbcac91b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbcac9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b3bbdeeba80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbdeeba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbdeebe00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbdeea020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbdeea1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbdeea340"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbdeea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b3bbdeed020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbdeed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbdeed3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbdeed530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbdeed6c0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbdeed850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbdeed9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbdeedb70"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbdeedd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbdeec020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbdeec1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbdeec340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbdeec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbdef2da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbdef2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbdeee670"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbdeef610"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbdeee020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbdeefad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbdeeeb30"/>
        <function-ref name="start" scoped="" ref="0x2b3bbdef1bf0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbdeef150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbdef2510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbdef2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbdef2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b3bbdeec760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbdeec760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbdeecae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbdeecc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbdeece00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbdeeb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbdeeb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbdeeb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbdeeb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbdeeb660"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbdeeb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bbcb1b020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbcb1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbcb1be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbcb19800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbcb19340"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbcb19cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b3bbcb48950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b3bbcb48950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbcb47780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbcb46150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbcb47c40"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbcb46610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bbcb155f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbcb155f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbcb4a430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbcb4adb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbcb4a8f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbcb482a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbdf085f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbdf085f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbdf05e50"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbdf06e00"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbdf05800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbdf05340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbdf04340"/>
        <function-ref name="start" scoped="" ref="0x2b3bbdf06430"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbdf06940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b3bbdf02d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b3bbdf02d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbdefe670"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbdeff550"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbdefe020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbdeffa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbdefeb30"/>
        <function-ref name="start" scoped="" ref="0x2b3bbdf00b60"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbdeff090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbdf049b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbdf049b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbdf037e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbdf021b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbdf03ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbdf02670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b3bbcb9e6a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b3bbcb9e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb9ea20"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb9ebb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb9ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb9d020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb9d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb9d340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb9d4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb9d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b3bbcb9d9d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b3bbcb9d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb9dd50"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb9c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb9c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb9c340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb9c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb9c660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb9c7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b3bbcb9cce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b3bbcb9cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb9b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb9b230"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb9b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb9b550"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb9b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb9b870"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb9ba00"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb9bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b3bbcb9f370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b3bbcb9f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb9f6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb9f880"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb9fa10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb9fba0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb9fd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb9e020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb9e1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb9e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b3bbcb99380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b3bbcb99380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb99700"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb99890"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb99a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb99bb0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb99d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb98020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb981b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b3bbcba00e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b3bbcba00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcba0460"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcba05f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcba0780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcba0910"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcba0aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcba0c30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcba0dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b3bbcb9a020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b3bbcb9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb9a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb9a530"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb9a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb9a850"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb9a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb9ab70"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb9ad00"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbcb96930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcb96930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb96cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb96e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcb95020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb95340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcb954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb95660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb957f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcb95980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcb95b10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb95ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcb95e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcb94020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcb942b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb94440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbcb97710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcb97710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb97a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb97c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb97db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb96020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb96340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb964d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb96660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbcb90480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcb90480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb90800"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb90990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcb90b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb90cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb90e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcb8f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb8f1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb8f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcb8f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcb8f660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb8f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcb8f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcb8fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcb8fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbcb921b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcb921b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcb92530"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcb926c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcb92850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcb929e0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcb92b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcb92d00"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcb90020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcb901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbcbdd020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbdd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbdd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcbdd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbdd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbdd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcbddb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbddd00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbdc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcbdc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcbdc340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbdc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcbdc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcbdc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcbdca80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbdcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbcbdfd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbdfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbde180"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbde310"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbde4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbde630"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbde7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbde950"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbdeae0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbdec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbcbd9de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbd9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbd8180"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbd8310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcbd84a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbd8630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbd87c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcbd8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbd8ae0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbd8c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcbd8e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcbd7020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbd71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcbd7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcbd74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcbd7760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbd78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbcbdab70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbdab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbd9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbd91b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbd9340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbd94d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbd9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbd97f0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbd9980"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbd9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbcbd4930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbd4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbd4cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbd4e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcbd3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbd31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbd3340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcbd34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbd3660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbd37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcbd3980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcbd3b10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbd3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcbd3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcbd2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcbd22b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbd2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbcbd5710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbd5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbd5a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbd5c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbd5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbd4020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbd4340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbd44d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbd4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbcbcf480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbcf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbcf800"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbcf990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcbcfb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbcfcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbcfe40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcbce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbce1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbce340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcbce4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcbce660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbce7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcbce980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcbceb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcbceda0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbcbd01b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbd01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbd0530"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbd06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbd0850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbd09e0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbd0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbd0d00"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbcf020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbcbc9020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbcbc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbc93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbc9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcbc96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbc9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbc99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcbc9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbc9d00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbc8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcbc81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcbc8340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbc84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcbc8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcbc87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcbc8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbc8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbcbccd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbccd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbca180"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbca310"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbca4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbca630"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbca7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbca950"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbcaae0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbcac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b3bbcc065a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b3bbcc065a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b3bbcc06920"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc06ab0"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbcc06c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b3bbcc06dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b3bbcc0a210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b3bbcc0a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc0a590"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc0a720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bbcc0a8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bbcc0aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b3bbcc0ae30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b3bbcc0ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc091e0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc09370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bbcc09500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bbcc09690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2b3bbcbf0da0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2b3bbcbf0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbcbef180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b3bbcbef310"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbcbef4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbcbef630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbcbef7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b3bbcbef950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3bbcbf1020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b3bbcbf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b3bbcbf13a0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcbf1530"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbcbf16c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b3bbcbf1850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b3bbcbf1ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbcbf1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbcbf1e60"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbcbf0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbcbf01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbcbf0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbcbf04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbcbf0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbcbf07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbcbf0980"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbcbf0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2b3bbcbefc20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbcbefc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcbee020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcbee1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcbee340"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcbee4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcbee660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcbee7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcbee980"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcbeeb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcbeeca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcbeee30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcbed020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcbed1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcbed340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcbed5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcbed760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b3bbcc34c40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b3bbcc34c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc33020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc331b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc33340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc334d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc33660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b3bbcc29bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b3bbcc29bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc28020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc281b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc28340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc284d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc28660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b3bbcc31bc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b3bbcc31bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc30020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc301b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc30340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc304d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc30660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b3bbcc2fbc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b3bbcc2fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc2e020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc2e1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc2e340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc2e4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc2e660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b3bbcbe6d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b3bbcbe6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc350e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc35270"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc35400"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc35590"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc35720"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc358b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b3bbcc2cbc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b3bbcc2cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc2a0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc2a230"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc2a3c0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc2a550"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc2a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc2a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b3bbcc33bc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b3bbcc33bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc32020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc321b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc32340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc324d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc32660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b3bbcc28bc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b3bbcc28bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc27020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc271b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc27340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc274d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc27660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b3bbcbe2e70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b3bbcbe2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcbe7220"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcbe73b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcbe7540"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcbe76d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcbe7860"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcbe79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b3bbcc2ebc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b3bbcc2ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc2d020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc2d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc2d340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc2d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc2d660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc2d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b3bbcc35c80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b3bbcc35c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc340a0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc34230"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc343c0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc34550"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc346e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc34870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b3bbcc2ac40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b3bbcc2ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc29020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc291b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc29340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc294d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc29660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b3bbcc32bc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b3bbcc32bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc31020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc311b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc31340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc314d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc31660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b3bbcc30bc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b3bbcc30bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc2f020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc2f1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc2f340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc2f4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc2f660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc2f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b3bbcbe7dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b3bbcbe7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcbe6180"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcbe6310"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcbe64a0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcbe6630"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcbe67c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcbe6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b3bbcc2dbc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b3bbcc2dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc2c020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc2c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc2c340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc2c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc2c660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b3bbcc20a30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b3bbcc20a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc20db0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc1f020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc1f1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc1f340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc1f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc1f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b3bbcc16bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b3bbcc16bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc15020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc151b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc15340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc154d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc15660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b3bbcc1da30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b3bbcc1da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc1ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc1c020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc1c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc1c340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc1c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc1c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b3bbcc1ba30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b3bbcc1ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc1bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc1a020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc1a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc1a340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc1a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc1a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b3bbcc22a30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b3bbcc22a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc22db0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc21020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc211b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc21340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc214d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc21660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b3bbcc18a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b3bbcc18a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc17020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc171b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc17340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc174d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc17660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b3bbcc1fa30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b3bbcc1fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc1fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc1e020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc1e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc1e340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc1e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc1e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b3bbcc15bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b3bbcc15bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc14020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc141b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc14340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc144d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc14660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b3bbcc269d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b3bbcc269d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc26d50"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc23020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc231b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc23340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc234d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b3bbcc1aa30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b3bbcc1aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc1adb0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc19020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc191b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc19340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc194d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b3bbcc21a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b3bbcc21a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc21db0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc20020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc201b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc20340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc204d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc20660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b3bbcc17bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b3bbcc17bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc16020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc161b0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc16340"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc164d0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc16660"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b3bbcc1ea30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b3bbcc1ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc1edb0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc1d020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc1d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc1d340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc1d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc1d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b3bbcc1ca30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b3bbcc1ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc1cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc1b020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc1b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc1b340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc1b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b3bbcc23a30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b3bbcc23a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc23db0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc22020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc221b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc22340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc224d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc22660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b3bbcc19a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b3bbcc19a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcc19db0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcc18020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcc181b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcc18340"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcc184d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcc18660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b3bbcced610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b3bbcced610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcced990"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbccedb20"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbccedcb0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbccede40"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcd38020"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcd381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b3bbcceea30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b3bbcceea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbcceedb0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcced020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bbcced1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bbcced340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b3bbcd36610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b3bbcd36610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbcd36990"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbcd36b20"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcd36cb0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bbcd36e40"/>
        <function-ref name="enable" scoped="" ref="0x2b3bbcd35020"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bbcd351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b3bbcd37a70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b3bbcd37a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbcd37df0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbcd36020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bbcd361b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bbcd36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b3bbd08fe50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd08fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08e410"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b3bbd032160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd032160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0324e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b3bbd093e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd093e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd092210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b3bbd08d880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd08d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08dc00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b3bbd0850a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd0850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd085420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0855b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b3bbd08c0a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd08c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08c420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b3bbd079500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd079500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd079880"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd079a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b3bbd07c500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b3bbd07c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07c880"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b3bbd031490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd031490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd031810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b3bbd081880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b3bbd081880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd081c00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd081d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b3bbd07d500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd07d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07d880"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b3bbd092e50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b3bbd092e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd091210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b3bbd091e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd091e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08f210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b3bbd087880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd087880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd087c00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd087d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b3bbd0880a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b3bbd0880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd088420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0885b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b3bbd08c880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd08c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08cc00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b3bbd034a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd034a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbd034e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbd033020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbd0331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b3bbd030e00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd030e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd02e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b3bbd02e490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b3bbd02e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd02e910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b3bbd080c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd080c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07f0a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b3bbd02ebe0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd02ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd094020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b3bbd07dce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd07dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07c0a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b3bbd030160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd030160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b3bbd0810a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd0810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd081420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0815b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b3bbd091670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd091670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0919f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd091b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b3bbd092670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd092670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0929f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd092b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b3bbd033ad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd033ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd033e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b3bbd0830a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd0830a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd083420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0835b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b3bbd085880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd085880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd085c00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd085d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b3bbd083880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd083880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd083c00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd083d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b3bbd07ace0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd07ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0790a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd079230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b3bbd07cce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b3bbd07cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07a0a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b3bbd088880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b3bbd088880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd088c00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd088d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b3bbd0840a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd0840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd084420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0845b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b3bbd07ece0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd07ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07d0a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b3bbd08b880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd08b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08bc00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b3bbd079ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd079ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd0780a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd078230"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0783c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd078550"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd0786e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b3bbd033480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b3bbd033480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd033800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b3bbd093670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b3bbd093670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0939f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd093b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b3bbd08f670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd08f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b3bbd0860a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd0860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd086420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0865b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b3bbd08b0a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd08b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08b420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b3bbd086880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd086880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd086c00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd086d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b3bbd08e870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd08e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08ebf0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b3bbd0327b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b3bbd0327b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd032b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b3bbd08d0a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd08d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08d420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbd035e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbd035e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd0341c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd034350"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd0344e0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd034670"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd034800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b3bbd0942f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd0942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd094670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b3bbd093020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b3bbd093020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b3bbd07e500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b3bbd07e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07e880"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b3bbd07fce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd07fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07e0a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b3bbd0307b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd0307b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd030b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b3bbd07f500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd07f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07f880"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b3bbd07a500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b3bbd07a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd07a880"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd07aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b3bbd0870a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd0870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd087420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0875b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b3bbd084880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd084880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd084c00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd084d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b3bbd032e00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b3bbd032e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0311c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b3bbd031ae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd031ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd031e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b3bbd08a0a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd08a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08a420"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b3bbd094940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b3bbd094940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd094cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b3bbd08a880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd08a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd08ac00"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd08ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b3bbd0800a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd0800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd080820"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0809b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b3bbd0789b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd0789b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd078d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd077020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0771b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd077340"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd0774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b3bbcd4d630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd4d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbcd4d9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbcd4db40"/>
        <function-ref name="write" scoped="" ref="0x2b3bbcd4dcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbcd4de60"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbcd4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b3bbcd4e680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd4e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbcd4ea00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbcd4eb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbcd4ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b3bbcd4c8c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b3bbcd4c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbcd4cc40"/>
        <function-ref name="write" scoped="" ref="0x2b3bbcd4cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b3bbcd4b6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b3bbcd4b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbcd4ba70"/>
        <function-ref name="write" scoped="" ref="0x2b3bbcd4bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbcd51960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbcd51960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbcd51ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbcd51e70"/>
        <function-ref name="request" scoped="" ref="0x2b3bbcd4e030"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbcd4e1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbcd4e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b3bbcd49510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd49510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbcd49890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b3bbcd8c680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbcd8c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbcd8ca00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbcd8cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b3bbcd43bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b3bbcd43bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbcd42020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbcd421b0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbcd42340"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbcd424d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbcd42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b3bbcd48930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbcd48930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbcd48cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbcd48e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbcd44020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b3bbcd3c080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b3bbcd3c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b3bbcd3c400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b3bbcd3b020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2b3bbcd3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbcd3b3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbcd3b530"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbcd3b6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbcd3b850"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbcd3b9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbcd3bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b3bbcd3e400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b3bbcd3e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbcd3e780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbcd3e910"/>
        <function-ref name="request" scoped="" ref="0x2b3bbcd3eaa0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbcd3ec30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbcd3edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b3bbcd41020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b3bbcd41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbcd413a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbcd41530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b3bbcd41db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b3bbcd41db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbcd3f180"/>
        <function-ref name="write" scoped="" ref="0x2b3bbcd3f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbcd3bdf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbcd3bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbcd3a1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbcd3a350"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbcd3a4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbcd3a670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbcd3a800"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcd3a990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbcd3ab20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbcd8d1b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcd3acb0"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbcd3ae40"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbcd8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbcd44810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbcd44810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbcd44b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbcd44d20"/>
        <function-ref name="request" scoped="" ref="0x2b3bbcd43020"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbcd431b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbcd43340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b3bbcd87120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2b3bbcd87120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbcd874a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbcd87630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b3bbcd3fba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b3bbcd3fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbcd3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b3bbcde0770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbcde0770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbcde0af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbcde0c80"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbcde0e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbcddd020"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbcddd1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbcddd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b3bbcddc280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbcddc280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbcddc600"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbcddc790"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbcddc920"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbcddcab0"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbcddcc40"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbcddcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbcdd8020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbcdd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbcdd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b3bbcdd8b70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbcdd8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbcdd7020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbcdd71b0"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbcdd7340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbcdd74d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbcdd7660"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbcdd77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b3bbd05b020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbd05b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd05b3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd05b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b3bbce198f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce198f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b3bbce19c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbcdbfc40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbcdbfc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbce19020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbce191b0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbce19340"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbce194d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbce19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbdffdaf0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbdffdaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbdffde70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbdffc030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b3bbdffb440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbdffb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbdffb7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbdffb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b3bbdffbbe0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b3bbdffbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b3bbdffa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b3bbdffc2c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b3bbdffc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b3bbdffc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbdfffe70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbdfffe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbdffd220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbdffd3b0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbdffd540"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbdffd6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbdffd860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b3bbdffc8d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b3bbdffc8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b3bbdffcc50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b3bbdffcde0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b3bbdffb020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbdffb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b3bbce066b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbce066b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbce06a30"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbce06bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b3bbce04850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbce04850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbce04bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbce04d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b3bbce02a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b3bbce02a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b3bbce02dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b3bbce05020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b3bbce053a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b3bbce03690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b3bbce03690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbce03a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbce03ba0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbce03d30"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbce02020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbce021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbce07430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbce07430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbce077b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbce07940"/>
        <function-ref name="request" scoped="" ref="0x2b3bbce07ad0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbce07c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbce07df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b3bbce056a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b3bbce056a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b3bbce05a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b3bbce05bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b3bbce05d40"/>
        <function-ref name="write" scoped="" ref="0x2b3bbce04020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b3bbce002a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbce002a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbce00620"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbce007b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b3bbce60250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbce60250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbce605f0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbce60780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b3bbce5fc50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b3bbce5fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbce5e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbce5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b3bbce5d3e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b3bbce5d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b3bbce5d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b3bbce60a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b3bbce60a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b3bbce60d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b3bbce5da50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b3bbce5da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbce5ddd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbce5c020"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbce5c1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbce5c340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbce5c4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbce5c660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbce5c7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbce5c980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbce5cb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbce5cca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbce5ce30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbce5b020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbce5b1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbce5b440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbce5b5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbce5b760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbce5b8f0"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbce5ba80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbce5bc10"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbce5bda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbce5a020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbce5a1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbce5a340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbce5a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbce5a660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbce5a9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbce5ab80"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbce5ad10"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbce59020"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbce591b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbce59340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbce594d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbce59660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbce597f0"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbce59980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbce59b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbce59ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbce59e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbce58020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbce581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbce58c20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbce58c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbce57020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbce571b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbce57340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbce574d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbce57660"/>
        <function-ref name="get" scoped="" ref="0x2b3bbce577f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbce57980"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbce56020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbce57ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbce57b10"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbce57e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b3bbce5e5b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b3bbce5e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbce5e950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbce5eae0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbce5ec70"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbce5ee00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbce5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbce61470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbce61470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbce61810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbce619a0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbce61b30"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbce61cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbce61e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b3bbce5f060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b3bbce5f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b3bbce5f3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b3bbce5f570"/>
        <function-ref name="splitRead" scoped="" ref="0x2b3bbce5f700"/>
        <function-ref name="write" scoped="" ref="0x2b3bbce5f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b3bbce58480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b3bbce58480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbce58800"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbce58990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2b3bbce562f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2b3bbce562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbce56670"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbce56800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b3bbce485e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b3bbce485e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbce48960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b3bbce49d10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbce49d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbce480e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbce48270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b3bbce4d020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbce4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbce4d3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbce4d530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbce4d6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbce4d850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbce4d9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbce4db70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbce4dd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbce4c020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbce4c1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbce4c340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbce4c4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbce4c660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbce4c7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbce4ca80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbce4cc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbce4cda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbce4b020"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbce4b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbce4b340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbce4b4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbce4b660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbce4b7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbce4b980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbce4bb10"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbce4bca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbce4a220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbce4a3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbce4a540"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbce4a6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbce4a860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbce4a9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbce4ab80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbce4ad10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbce49020"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbce491b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbce49340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbce494d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbce49660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbce497f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbce49980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b3bbcec9b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b3bbcec9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcec8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcec81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcec8340"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcec84d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcec8660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcec87f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcec8980"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcec8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcec8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcec8e30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcec7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcec71b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcec7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcec75d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcec7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b3bbce9d780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b3bbce9d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbce9db00"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbce9dc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b3bbcec7b20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b3bbcec7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcec6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcec61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcec6340"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcec64d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcec6660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcec67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcec6980"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcec6b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcec6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcec6e30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcec5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcec51b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcec5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcec55d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcec5760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b3bbcec5b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b3bbcec5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcec4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcec41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcec4340"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcec44d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcec4660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcec47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcec4980"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcec4b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcec4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcec4e30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcec3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcec31b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcec3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcec35d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcec3760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b3bbcea4c70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b3bbcea4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbcea1020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbcea11b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbcea1340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbcea14d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbcea1660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbcea17f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbcea1980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbcea1b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbcea1ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbcea1e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbcea0020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbcea01b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbcea0340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbcea05d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbcea0760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbcea08f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbcea0a80"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbcea0c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbcea0da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbce9f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbce9f1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbce9f340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbce9f4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbce9f660"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbce9f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbce9fb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbce9fd10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbce9e020"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbce9e1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbce9e340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbce9e4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbce9e660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbce9e7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbce9e980"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbce9eb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbce9eca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbce9ee30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbce9d020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbce9d1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbce9d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2b3bbced2d10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b3bbced2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b3bbce9b0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b3bbce9b270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b3bbce9b400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b3bbce9b590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b3bbce9b720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b3bbce9b8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b3bbce9ba40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b3bbce9bbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbce9bd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b3bbce9a020"/>
        <function-ref name="getData" scoped="" ref="0x2b3bbce9a1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b3bbce9a340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b3bbce9a4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b3bbce9a760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b3bbce9a8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b3bbce9aa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b3bbce9ac10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b3bbce9ada0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b3bbced1020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b3bbced11b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b3bbced1340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b3bbced14d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b3bbced1660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b3bbced17f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b3bbced1980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b3bbced1d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b3bbced0020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b3bbced01b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b3bbced0340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b3bbced04d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b3bbced0660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b3bbced07f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b3bbced0980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b3bbced0b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b3bbced0ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b3bbced0e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b3bbcecf020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b3bbcecf1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b3bbcecf340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b3bbcecf4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b3bbcecf660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b3bbcecf7f0"/>
        <function-ref name="setData" scoped="" ref="0x2b3bbcecf980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b3bbcecfb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b3bbcecfca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b3bbcecfe30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b3bbcece020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b3bbcece1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b3bbcece340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b3bbcece8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b3bbcecea60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b3bbcecebf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b3bbceced80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b3bbcecd020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b3bbcecd1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b3bbcecd340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b3bbcecd4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b3bbcecd660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b3bbcecd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b3bbcecbb20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b3bbcecbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbceca020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbceca1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbceca340"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbceca4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbceca660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbceca7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbceca980"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcecab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcecaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcecae30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcec9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcec91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcec9340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcec95d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcec9760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b3bbce9c150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbce9c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbce9c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b3bbcecdbb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b3bbcecdbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcecc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcecc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcecc340"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcecc4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcecc660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcecc7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcecc980"/>
        <function-ref name="get" scoped="" ref="0x2b3bbceccb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbceccca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcecce30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcecb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcecb1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcecb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcecb5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcecb760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbdff35d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbdff35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbdff3950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbdff3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b3bbdfec7c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b3bbdfec7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbdfecb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbdfe5a80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbdfe5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbdfe5e00"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbdfe4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b3bbdfecdd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b3bbdfecdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b3bbdfeb180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b3bbdfeb310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b3bbdfeb4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b3bbdfeb630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b3bbdfeb7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b3bbdfeb950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b3bbdfebae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b3bbdfebc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbdfebe00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b3bbdfea020"/>
        <function-ref name="getData" scoped="" ref="0x2b3bbdfea1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b3bbdfea340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b3bbdfea4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b3bbdfea760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b3bbdfea8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b3bbdfeaa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b3bbdfeac10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b3bbdfeada0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b3bbdfe9020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b3bbdfe91b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b3bbdfe9340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b3bbdfe94d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b3bbdfe9660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b3bbdfe97f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b3bbdfe9980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b3bbdfe9d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b3bbdfe8020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b3bbdfe81b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b3bbdfe8340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b3bbdfe84d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b3bbdfe8660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b3bbdfe87f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b3bbdfe8980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b3bbdfe8b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b3bbdfe8ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b3bbdfe8e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b3bbdfe7020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b3bbdfe71b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b3bbdfe7340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b3bbdfe74d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b3bbdfe7660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b3bbdfe77f0"/>
        <function-ref name="setData" scoped="" ref="0x2b3bbdfe7980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b3bbdfe7b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b3bbdfe7ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b3bbdfe7e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b3bbdfe6020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b3bbdfe61b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b3bbdfe6340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b3bbdfe68d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b3bbdfe6a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b3bbdfe6bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b3bbdfe6d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b3bbdfe5020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b3bbdfe51b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b3bbdfe5340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b3bbdfe54d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b3bbdfe5660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b3bbdfe57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b3bbdfec020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b3bbdfec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbdfec3a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbdfec530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbdff4860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbdff4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbdff4be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbdff4d70"/>
        <function-ref name="request" scoped="" ref="0x2b3bbdff3020"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbdff31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbdff3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b3bbdff15a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b3bbdff15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbdff1920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbdff1ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbdff1c40"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbdff1dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbdff0020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbdff01b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbdff0340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbdff04d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbdff0660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbdff07f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbdff0980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbdff0b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbdff0ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbdfef020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbdfef1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbdfef340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbdfef4d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbdfef660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbdfef7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbdfef980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbdfefb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbdfefca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbdfefe30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbdfee020"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbdfee1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbdfee540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbdfee6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbdfee860"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbdfee9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbdfeeb80"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbdfeed10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbdfed020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbdfed1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbdfed340"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbdfed4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbdfed660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbdfed7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbdfed980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbdfedb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbdfedca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbdff3d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbdff3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbdff1180"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbdff1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbcf442c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbcf442c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbcf44640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbcf447d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbcf428a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbcf428a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbcf42c20"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbcf42db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b3bbcf474d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b3bbcf474d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbcf47850"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbcf479e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbcf45020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbcf45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbcf453a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbcf45530"/>
        <function-ref name="request" scoped="" ref="0x2b3bbcf456c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbcf45850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbcf459e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b3bbcf463f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbcf463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbcf46770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbcf44ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf44ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbcf44e50"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbcf42020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bbcf3fe50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf3fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbcf3e210"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbcf3e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b3bbcf40060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b3bbcf40060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbcf40400"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbcf40590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b3bbcf3f840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b3bbcf3f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbcf3fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b3bbcf40990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b3bbcf40990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbcf40d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b3bbcf3f060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b3bbcf3f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b3bbcf3f3e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b3bbcf3f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbcf3b850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbcf3b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbcf3bbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbcf3bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbcf38570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbcf38570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbcf38910"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbcf38aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bbcf39020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbcf39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbcf393a0"/>
        <function-ref name="requested" scoped="" ref="0x2b3bbcf39530"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbcf396c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbcf39850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbcf399e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbcf3ca80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbcf3ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbcf3ce20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbcf3b020"/>
        <function-ref name="request" scoped="" ref="0x2b3bbcf3b1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbcf3b340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbcf3b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbcf39c30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbcf39c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbcf38020"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbcf381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbe023a40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbe023a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbe023dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b3bbe0220a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b3bbe0220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bbe022420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bbe0225b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bbe022740"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bbe0228d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bbe01e020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bbe01e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bbe01e3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbe01e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bbe01dcf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bbe01dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bbe01c0e0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bbe01c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3bbe01c500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b3bbe01c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bbe01c880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bbe01ca10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bbe01cba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bbe01cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bbe01e7a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bbe01e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbe01eb20"/>
        <function-ref name="requested" scoped="" ref="0x2b3bbe01ecb0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbe01ee40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbe01d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bbe01d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbe01b020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbe01b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbe01b3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbe01b530"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbe01b6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbe01b850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbe01b9e0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbe01bb70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbe01bd00"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbe01a4d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbe01a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbe01a020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbe01a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbe01f270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbe01f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbe01f610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbe01f7a0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbe01f930"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbe01fac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbe01fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bbe01d400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bbe01d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bbe01d780"/>
        <function-ref name="userId" scoped="" ref="0x2b3bbe01d910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b3bbe01a7a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b3bbe01a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbe01ab20"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbe01acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b3bbcf92540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b3bbcf92540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b3bbcf928c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b3bbcf92a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b3bbcf92be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b3bbcf92d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b3bbcf8f020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b3bbcf8f1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b3bbcf8f340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b3bbcf8f4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbcf8f660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b3bbcf8f7f0"/>
        <function-ref name="getData" scoped="" ref="0x2b3bbcf8f980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b3bbcf8fb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b3bbcf8fca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b3bbcf8e020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b3bbcf8e1b0"/>
        <function-ref name="getIV" scoped="" ref="0x2b3bbcf8e340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b3bbcf8e4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b3bbcf8e660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b3bbcf8e7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b3bbcf8e980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b3bbcf8eb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b3bbcf8eca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b3bbcf8ee30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b3bbcf8d020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b3bbcf8d1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b3bbcf8d540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b3bbcf8d6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b3bbcf8d860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b3bbcf8d9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b3bbcf8db80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b3bbcf8dd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b3bbcf8c020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b3bbcf8c1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b3bbcf8c340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b3bbcf8c4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b3bbcf8c660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b3bbcf8c7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b3bbcf8c980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b3bbcf8cb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b3bbcf8cca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b3bbcf8ce30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b3bbcf8b020"/>
        <function-ref name="setData" scoped="" ref="0x2b3bbcf8b1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b3bbcf8b340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b3bbcf8b4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b3bbcf8b660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b3bbcf8b7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b3bbcf8b980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b3bbcf8bb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b3bbcf8a420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b3bbcf8a5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b3bbcf8a740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b3bbcf8a8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b3bbcf8aa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b3bbcf8abf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b3bbcf8ad80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b3bbcf89020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b3bbcf891b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b3bbcf89340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2b3bbcf7f250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2b3bbcf7f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3bbcf7f5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b3bbcf7f760"/>
        <function-ref name="setUctl" scoped="" ref="0x2b3bbcf7f8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b3bbcf7fa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b3bbcf7fc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b3bbcf7fda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b3bbcf7e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b3bbcf7e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b3bbcf7e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b3bbcf7e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b3bbcf7e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b3bbcf7e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b3bbcf7e980"/>
        <function-ref name="getUbr" scoped="" ref="0x2b3bbcf7ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3bbcf7eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b3bbcf7d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b3bbcf7d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x2b3bbcf7d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3bbcf7d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b3bbcf7d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b3bbcf7d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3bbcf7d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b3bbcf7db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b3bbcf7dca0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbcf7de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b3bbcf7c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b3bbcf7c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b3bbcf7c540"/>
        <function-ref name="tx" scoped="" ref="0x2b3bbcf7c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b3bbcf7c860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b3bbcf7c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b3bbcf7cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b3bbcf7cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b3bbcf7b020"/>
        <function-ref name="rx" scoped="" ref="0x2b3bbcf7b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b3bbcf7b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b3bbcf7b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b3bbcf7b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b3bbcf7b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b3bbcf7b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b3bbcf79cb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b3bbcf79cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcf780a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcf78230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcf783c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcf78550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcf786e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcf78870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcf78a00"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcf78b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcf78d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcf77020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcf771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcf77340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcf774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcf77760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcf778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2b3bbcf86430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b3bbcf86430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b3bbcf867b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b3bbcf86940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b3bbcf86ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b3bbcf86c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b3bbcf86df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b3bbcf85020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b3bbcf851b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b3bbcf85340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbcf854d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b3bbcf85660"/>
        <function-ref name="getData" scoped="" ref="0x2b3bbcf857f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b3bbcf85980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b3bbcf85b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b3bbcf85da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b3bbcf84020"/>
        <function-ref name="getIV" scoped="" ref="0x2b3bbcf841b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b3bbcf84340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b3bbcf844d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b3bbcf84660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b3bbcf847f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b3bbcf84980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b3bbcf84b10"/>
        <function-ref name="isI2C" scoped="" ref="0x2b3bbcf84ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b3bbcf84e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b3bbcf83020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b3bbcf833b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b3bbcf83540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b3bbcf836d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b3bbcf83860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b3bbcf839f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b3bbcf83b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b3bbcf83d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b3bbcf82020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b3bbcf821b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b3bbcf82340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b3bbcf824d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b3bbcf82660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b3bbcf827f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b3bbcf82980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b3bbcf82b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b3bbcf82ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b3bbcf82e30"/>
        <function-ref name="setData" scoped="" ref="0x2b3bbcf81020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b3bbcf811b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b3bbcf81340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b3bbcf814d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b3bbcf81660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b3bbcf817f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b3bbcf81980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b3bbcf80020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b3bbcf801b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b3bbcf80340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b3bbcf804d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b3bbcf80660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b3bbcf807f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b3bbcf80980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b3bbcf80b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b3bbcf80ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b3bbcf80e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b3bbcf7bd40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b3bbcf7bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbcf7a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbcf7a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbcf7a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbcf7a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbcf7a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbcf7a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbcf7aa40"/>
        <function-ref name="get" scoped="" ref="0x2b3bbcf7abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbcf7ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbcf79020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbcf791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbcf79340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbcf794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbcf79760"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbcf798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b3bbd0c5c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd0c5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c4210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b3bbd06ada0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd06ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd068180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b3bbd062b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd062b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c7020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b3bbd0c3670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd0c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c39f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b3bbd0bbe50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd0bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ba210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b3bbd0c3e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd0c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c1210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b3bbd0af2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd0af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0af670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0af800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b3bbd0b12f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b3bbd0b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b1670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b3bbd067120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd067120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0674a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b3bbd0b7670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b3bbd0b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b79f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b3bbd0b22f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd0b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b2670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b3bbd0c7c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b3bbd0c7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c6020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b3bbd0c6c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd0c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c5020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b3bbd0bd670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd0bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0bd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0bdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b3bbd0bfe50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b3bbd0bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0be210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b3bbd0c1670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd0c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c19f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b3bbd06b760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd06b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbd06bae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbd06bc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbd06be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b3bbd066aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd066aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd066e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b3bbd065120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b3bbd065120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0655a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b3bbd0b6a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd0b6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b6df0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b3bbd065870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd065870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd065bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b3bbd0b2ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd0b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b2e50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b3bbd067dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd067dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd066180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b3bbd0b8e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd0b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b7210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b3bbd0c6480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd0c6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c6800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b3bbd0c7480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd0c7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c7800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b3bbd06a750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd06a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd06aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b3bbd0b9e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd0b9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b8210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b3bbd0ba670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd0ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ba9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0bab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b3bbd0b8670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd0b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b89f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b3bbd0b0ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd0b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b0e50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b3bbd0b1ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b3bbd0b1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b1e50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b3bbd0be670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b3bbd0be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0be9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0beb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b3bbd0bae50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd0bae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b9210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b3bbd0b3ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd0b3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b3e50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b3bbd0c0670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd0c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c09f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b3bbd0afad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd0afad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd0afe50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd0ad020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ad1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd0ad340"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd0ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b3bbd06a100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b3bbd06a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd06a480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b3bbd062370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b3bbd062370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0626f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd062880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b3bbd0c5480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd0c5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c5800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b3bbd0bde50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd0bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0bb210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b3bbd0c1e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd0c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c0210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b3bbd0bb670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd0bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0bb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b3bbd0c4670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd0c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c49f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b3bbd068450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b3bbd068450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0687d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b3bbd0c4e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd0c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0c3210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbd06ca80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbd06ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd06ce00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd06b020"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd06b1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd06b340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd06b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b3bbd064020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd064020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b3bbd064cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b3bbd064cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0620a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b3bbd0b32f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b3bbd0b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b3670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b3bbd0b5ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd0b5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b5e50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b3bbd066450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd066450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0667d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b3bbd0b52f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd0b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b5670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b3bbd0b02f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b3bbd0b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b0670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b3bbd0bee50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd0bee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0bd210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b3bbd0b9670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd0b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b99f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b3bbd068aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b3bbd068aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd068e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b3bbd067770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd067770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd067af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b3bbd0c0e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd0c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0bf210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b3bbd064670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b3bbd064670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0649f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b3bbd0bf670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd0bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0bf9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0bfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b3bbd0b7e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd0b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0b6610"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0b67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b3bbd0ad7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd0ad7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd0adb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd0adcb0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ade40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd0ac020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd0ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b3bbd098c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd098c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd097210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b3bbd0a3da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd0a3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0a2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b3bbd09cb50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd09cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd09b020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd09b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b3bbd096670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd096670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0969f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd096b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b3bbd0f5e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd0f5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f4210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b3bbd096e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd096e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd095210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b3bbd0e82f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd0e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0e8670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0e8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b3bbd0ea2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b3bbd0ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ea670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ea800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b3bbd0a1120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd0a1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0a14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b3bbd0f0670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b3bbd0f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f09f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b3bbd0ec2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd0ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ec670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b3bbd09bc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b3bbd09bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd09a020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd09a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b3bbd09ac60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd09ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd098020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b3bbd0f6670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd0f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f69f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b3bbd0f8e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b3bbd0f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f7210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b3bbd095670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd095670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0959f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd095b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b3bbd0a4760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd0a4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbd0a4ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbd0a4c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbd0a4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b3bbd09faa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd09faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b3bbd09e120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b3bbd09e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b3bbd0efa70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd0efa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0efdf0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b3bbd09e870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd09e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b3bbd0ecad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd0ecad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ece50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b3bbd0a1dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd0a1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b3bbd0f1e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd0f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f0210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b3bbd09a480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd09a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd09a800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd09a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b3bbd09b480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd09b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd09b800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd09b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b3bbd0a3750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd0a3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0a3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b3bbd0f3e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd0f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f1210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b3bbd0f4670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd0f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f49f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b3bbd0f1670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd0f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f19f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b3bbd0e9ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd0e9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0e9e50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b3bbd0eaad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b3bbd0eaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0eae50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b3bbd0f7670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b3bbd0f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f79f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b3bbd0f4e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd0f4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f3210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b3bbd0edad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd0edad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ede50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b3bbd0fa670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd0fa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0fa9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0fab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b3bbd0e8ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd0e8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd0e8e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd0e7020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0e71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd0e7340"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd0e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b3bbd0a3100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b3bbd0a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0a3480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b3bbd09c370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b3bbd09c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd09c6f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd09c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b3bbd098480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd098480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd098800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd098990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b3bbd0f6e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd0f6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f5210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b3bbd095e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd095e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0fa210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b3bbd0f5670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd0f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f59f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b3bbd097670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd097670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0979f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd097b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b3bbd0a2450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b3bbd0a2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0a27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b3bbd097e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd097e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd096210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbd0a59e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbd0a59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd0a5d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd0a4020"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd0a41b0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd0a4340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd0a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b3bbd09d020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd09d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b3bbd09dcc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b3bbd09dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b3bbd0ed2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b3bbd0ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ed670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ed800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b3bbd0eead0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd0eead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0eee50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b3bbd09f450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd09f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b3bbd0ee2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd0ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ee670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b3bbd0e92f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b3bbd0e92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0e9670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0e9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b3bbd0f7e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd0f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f6210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b3bbd0f3670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd0f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f39f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b3bbd0a2aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b3bbd0a2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0a2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b3bbd0a1770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd0a1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd0a1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b3bbd0fae50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd0fae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f8210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b3bbd09d670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b3bbd09d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd09d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b3bbd0f8670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd0f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0f89f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b3bbd0f0e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd0f0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ef610"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ef7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b3bbd0e77a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd0e77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd0e7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd0e7cb0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0e7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd0e6020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd0e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b3bbd0dfb30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b3bbd0dfb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b3bbd0dc020"/>
        <function-ref name="changed" scoped="" ref="0x2b3bbd0dc1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b3bbd0dc340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b3bbd0dc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b3bbd0ded30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b3bbd0ded30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b3bbd12d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b3bbd129310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b3bbd129310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b3bbd129690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2b3bbd1268c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b3bbd1268c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd126c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b3bbd11c020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b3bbd11c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd11c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b3bbd112cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b3bbd112cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1150a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd115230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2b3bbd1155b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2b3bbd1155b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbd115930"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd115ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b3bbd116210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b3bbd116210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd116590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b3bbd101020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b3bbd101020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1013a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd101530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b3bbd1018c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b3bbd1018c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd101c40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd101dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd100020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd1001b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd100340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd1004d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd100660"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd1007f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b3bbd160b40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b3bbd160b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b3bbd162970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b3bbd0ff490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b3bbd0ff490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd0ff810"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd0ff9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b3bbd0ffd30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b3bbd0ffd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd0fc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd0fc270"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd0fc400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd0fc590"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd0fc720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd0fc8b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd0fca40"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd0fcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b3bbd140020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b3bbd140020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b3bbd140e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b3bbd13dd20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b3bbd13dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b3bbd197b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbd196260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbd196260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd195090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd195a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd195550"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd194020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2b3bbd192890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b3bbd192890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd18f6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd18e090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd18fba0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd18e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b3bbd189190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbd189190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd189510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbd1896a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbd189830"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd1899c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbd189b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd189ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbd189e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd188030"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd1881c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbd188350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbd1884e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bbd18c060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbd18c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf30ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3bbbf2e240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd18ce70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd18b820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd18b360"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd18bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2b3bbd1025a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2b3bbd1025a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd102920"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd102ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd102c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd102dd0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd184020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd1841b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd184340"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd1844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b3bbd182c50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b3bbd182c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd181020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd1811b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b3bbd181340"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd1814d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd181660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b3bbd1817f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd181980"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd181b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b3bbd181ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b3bbd181e30"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd180020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b3bbd1801b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b3bbd180340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b3bbd1805d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd180760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b3bbd1839e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b3bbd1839e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd183d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd182020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd1821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd182340"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd1824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd182660"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd1827f0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd182980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbd185a20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbd185a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbd185da0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd17b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b3bbd16ccb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbd16ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbd16a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbd16a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbd16a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbd16a550"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbd16a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbd16a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b3bbd1679f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b3bbd1679f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b3bbd167d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b3bbd16c020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b3bbd16c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd16c3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd16c530"/>
        <function-ref name="modify" scoped="" ref="0x2b3bbd16c6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd16c850"/>
        <function-ref name="resend" scoped="" ref="0x2b3bbd16c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbd16f6d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbd16f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbd16fa50"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd16fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b3bbd169190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b3bbd169190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b3bbd169510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b3bbd1d0650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbd1d0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbd1d09d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbd1d0b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbd1d0cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbd1d0e80"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbd1cf030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbd1cf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b3bbd1c87c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b3bbd1c87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd1c6d50"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd1c54c0"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd1c6620"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd1c5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b3bbd1af020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd1af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1af3a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1af530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b3bbd1af890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b3bbd1af890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1afc10"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1afda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b3bbd1cf5e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b3bbd1cf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b3bbd1cf960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b3bbd1b2530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd1b2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd1b28b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b3bbd1c2880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b3bbd1c2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b3bbd1c2c00"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbd1c2d90"/>
        <function-ref name="captured" scoped="" ref="0x2b3bbd1c0020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b3bbd1c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b3bbd1ce7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2b3bbd1ce7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd1ca090"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd1cb090"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbd1cba10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd1cb550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbd1ca550"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd1cd6a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd1cdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b3bbd1caa00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd1caa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbd1cad80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbd1c9020"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbd1c91b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbd1c9340"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbd1c94d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbd1c9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b3bbd1b5550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd1b5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1b58d0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1b5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b3bbd1b5e00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd1b5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1b41c0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1b4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b3bbd1a9d40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b3bbd1a9d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd1ac0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b3bbd1ac270"/>
        <function-ref name="sfd" scoped="" ref="0x2b3bbd1ac400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd1638c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd1638c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd163c40"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd163dd0"/>
        <function-ref name="modify" scoped="" ref="0x2b3bbd1d0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd1d01b0"/>
        <function-ref name="resend" scoped="" ref="0x2b3bbd1d0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b3bbd1b7d10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd1b7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbd1b60e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbd1b6270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbd1b6400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b3bbd1b2c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd1b2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd1b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b3bbd1ba820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b3bbd1ba820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd1baba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd1bad30"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd1b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd1b91b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd1b9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd1b94d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd1b9660"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd1b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd164820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd164820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd164ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbd1c99a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd1c99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd1c9d20"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd1c8020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd1c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b3bbd1bbb30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd1bbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd1c2020"/>
        <function-ref name="isSet" scoped="" ref="0x2b3bbd1c21b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd1c2340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd1c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b3bbd1b13e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd1b13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1b1960"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1b1af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b3bbd1b7020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b3bbd1b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd1b73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd1b7530"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd1b76c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd1b7850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd1b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b3bbd1c0500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b3bbd1c0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd1c0980"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd1c0b10"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd1c0ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd1c0e30"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd1ba020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd1ba1b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd1ba340"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd1ba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b3bbd1ae130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b3bbd1ae130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1ae4b0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1ae640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b3bbd1ae9c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd1ae9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1aed40"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b3bbd1b46d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b3bbd1b46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd1b4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b3bbd1b9b40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b3bbd1b9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd1b8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd1b81b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd1b8340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd1b84d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd1b8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd1b87f0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd1b8980"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd1b8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbd1ac6c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbd1ac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbd1aca40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbd1acbd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbd1acd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbd1ab020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbd1ab1b0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd1ab340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbd1ab4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbd1abb10"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd1ab660"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbd1ab7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbd1ab980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b3bbd1b05e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd1b05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd1b0960"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1b0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbd163020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbd163020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbd1633a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd163530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b3bbd1b6780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd1b6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd1b6b00"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd1b6c90"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd1b6e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd1b5020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd1b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b3bbd1b4de0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b3bbd1b4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd1b2180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b3bbd1b1e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b3bbd1b1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd1b0220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b3bbd1cfd70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b3bbd1cfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b3bbd1ce180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b3bbd24fc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd24fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24e210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b3bbd259020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd259020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b3bbd253c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd253c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd252020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b3bbd24d670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd24d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b3bbd246e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd246e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd245210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b3bbd24de50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd24de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24c210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b3bbd2a62f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd2a62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2a6670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2a6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b3bbd23c2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b3bbd23c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23c670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b3bbd258370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd258370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2586f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b3bbd241670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b3bbd241670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2419f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd241b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b3bbd23d2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd23d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23d670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b3bbd252c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b3bbd252c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd251020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b3bbd251c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd251c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24f020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b3bbd247670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd247670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2479f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd247b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b3bbd24ae50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b3bbd24ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd248210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b3bbd24c670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd24c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b3bbd25b8f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd25b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbd25bc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbd25be00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbd25a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b3bbd257d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd257d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2550a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b3bbd255370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b3bbd255370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b3bbd240a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd240a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd240df0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b3bbd255ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd255ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd255e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b3bbd23dad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd23dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23de50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b3bbd257060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd257060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2573e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b3bbd243e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd243e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd241210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b3bbd251480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd251480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd251800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd251990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b3bbd252480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd252480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd252800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd252990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b3bbd25a940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd25a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd25acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b3bbd244e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd244e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd243210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b3bbd245670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd245670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2459f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd245b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b3bbd243670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd243670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2439f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd243b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b3bbd2a7ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd2a7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2a7e50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b3bbd23cad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b3bbd23cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23ce50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b3bbd248670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b3bbd248670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2489f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd248b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b3bbd245e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd245e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd244210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b3bbd23ead0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd23ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23ee50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b3bbd24b670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd24b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b3bbd2a6ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd2a6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd2a6e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd2a5020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2a51b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd2a5340"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd2a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b3bbd25a2f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b3bbd25a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd25a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b3bbd253490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b3bbd253490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd253810"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2539a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b3bbd24f480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd24f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24f800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b3bbd247e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd247e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd246210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b3bbd24ce50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd24ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24b210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b3bbd246670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd246670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2469f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd246b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b3bbd24e670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd24e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b3bbd259670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b3bbd259670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2599f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b3bbd24ee50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd24ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24d210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbd25cc30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbd25cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd25b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd25b1b0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd25b340"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd25b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd25b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b3bbd254160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd254160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2544e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b3bbd254e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b3bbd254e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2531c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b3bbd23e2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b3bbd23e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23e670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b3bbd23fad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd23fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23fe50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b3bbd2576b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd2576b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd257a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b3bbd23f2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd23f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd23f670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd23f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b3bbd2a72f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b3bbd2a72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2a7670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2a7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b3bbd248e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd248e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd247210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b3bbd244670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd244670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd2449f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd244b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b3bbd259cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b3bbd259cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd2580a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b3bbd2589c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd2589c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd258d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b3bbd24be50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd24be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24a210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b3bbd2547b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b3bbd2547b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd254b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b3bbd24a670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd24a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd24a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd24ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b3bbd241e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd241e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd240610"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2407a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b3bbd2a57a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd2a57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd2a5b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd2a5cb0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd2a5e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd2a4020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd2a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b3bbd299df0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b3bbd299df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd2961c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b3bbd296350"/>
        <function-ref name="sfd" scoped="" ref="0x2b3bbd2964e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd2967c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd2967c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd296b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b3bbd295020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b3bbd295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b3bbd2953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbd2995c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbd2995c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbd299940"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd299ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b3bbd28d380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b3bbd28d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd28d700"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd28d890"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd28da20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd28dbb0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd28dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd28c020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd28c1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd28c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b3bbd286b90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbd286b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b3bbd285020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b3bbd2851b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b3bbd285340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b3bbd2854d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b3bbd285660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b3bbd2857f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b3bbd285980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b3bbd285b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b3bbd285ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b3bbd285e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b3bbd284020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b3bbd2841b0"/>
        <function-ref name="sync" scoped="" ref="0x2b3bbd284340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bbd2845d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b3bbd284760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b3bbd2dd9d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2b3bbd2dd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd2ddd50"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd2dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b3bbd284d70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b3bbd284d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd282330"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd282a60"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd283ba0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd280210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b3bbd28c6b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b3bbd28c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd28ca30"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd28cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd28cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd28b020"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd28b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd28b340"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd28b4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd28b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b3bbd27fcb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd27fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd27e0a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd27e230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b3bbd27e590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b3bbd27e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd27e910"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd27eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b3bbd27d6d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd27d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd27da50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd27dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b3bbd287330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd287330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbd2876b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbd287840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbd2879d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbd287b60"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbd287cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbd287e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b3bbd291550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b3bbd291550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd2918d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b3bbd291a60"/>
        <function-ref name="sfd" scoped="" ref="0x2b3bbd291bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b3bbd2883a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b3bbd2883a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd288720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b3bbd28e020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b3bbd28e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bbd28e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bbd28e530"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bbd28e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bbd28e850"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd28e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bbd28eb70"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd28ed00"/>
        <function-ref name="clr" scoped="" ref="0x2b3bbd28d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b3bbd27c020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd27c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd27c3a0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd27c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd292620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd292620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd2929a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbd2861e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2861e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd286560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd2866f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd286880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd290020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd290020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd2903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b3bbd28a6e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b3bbd28a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd28aa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd28abf0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd28ad80"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd289020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd2891b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b3bbd27ee00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b3bbd27ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd27d1c0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd27d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b3bbd289530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd289530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd2898b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd289a40"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd289bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd289d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd288020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b3bbd27c8b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b3bbd27c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd27ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b3bbd2907c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b3bbd2907c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b3bbd290b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbd27b150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbd27b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbd27b4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbd27b660"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbd27b7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbd27b980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbd27bb10"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd27bca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbd27be30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbd27a4d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd27a020"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbd27a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbd27a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b3bbd27f3e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd27f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd27f760"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd27f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b3bbd280b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd280b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd27f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b3bbd28ba50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b3bbd28ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bbd28bdd0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bbd28a020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bbd28a1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bbd28a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b3bbd288ad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd288ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd287020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3bbd292ca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b3bbd292ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bbd2910a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd291230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b3bbd2eba70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbd2eba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b3bbd2ebdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b3bbd2ef670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbd2ef9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbd2efb80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbd2efd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbd2ec020"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbd2ec1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbd2ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b3bbd2ea550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd2ea550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd2e9b00"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd2e82a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd2e93d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd2e89d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b3bbd2eb0c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd2eb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd2eb440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd2eb5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd2eb760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b3bbd2e2480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd2e2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd2e2800"/>
        <function-ref name="isSet" scoped="" ref="0x2b3bbd2e2990"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd2e2b20"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd2e2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b3bbd2e6660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd2e6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd2e5ce0"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd2e4460"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd2e55b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd2e4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbd2ec6e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbd2ec6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd2eca60"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd2ecbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd2ecd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b3bbd34c020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b3bbd34c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b3bbd34c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b3bbd2e1d20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd2e1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbd34e0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbd34e270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbd34e400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbd34e590"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbd34e720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbd34e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b3bbd3434a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd3434a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd343820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd3439b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd343b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd343cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd343e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b3bbd34ca80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd34ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd34a020"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd34a750"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd34b8d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd34ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b3bbd34d640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd34d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd34d9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd34db50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd34dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b3bbd3448b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd3448b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd344c30"/>
        <function-ref name="isSet" scoped="" ref="0x2b3bbd344dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd343020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd3431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b3bbd33f820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b3bbd33f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd3414c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b3bbd341b80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b3bbd341b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd33e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b3bbd348af0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd348af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd3460d0"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd346800"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd347970"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd344020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbd34ec50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbd34ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd34d020"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd34d1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd34d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3bbd35e4e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd35e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd355150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbd3557c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbd3557c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd354620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd352020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd354ae0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd3524e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b3bbd3be020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b3bbd3be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd3ba630"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd3bda60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd3bc920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd3bc4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd3b9020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd3baab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd3bc020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd3bec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd3ba020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd3bd110"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd3bd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3bbd3b9610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd3b9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd3b73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd3bf130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd3bf130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd3bf4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbd38a870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbd38a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd3f9090"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd388090"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbd388a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd388550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbd3f9550"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd3896a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd389bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd38a020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd38a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd38a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbe134260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbe134260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe131b30"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe133a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe1314e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe131020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe130020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe133090"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe1335a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbe1359d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbe1359d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbe135d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b3bbe1c6a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe1c6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbe1c6e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbe1c5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbe1c51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbe1c5340"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe1c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b3bbe1c8020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe1c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe1c83a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbe1c8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe1c86c0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbe1c8850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe1c89e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbe1c8b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbe1c8d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbe1c7020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbe1c71b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbe1c7340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbe1c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b3bbe1c7760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe1c7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbe1c7ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbe1c7c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe1c7e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbe1c6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbe1c61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe1c6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbe1c64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbe1c6660"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbe1c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b3bbe1bc760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe1bc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbe1bcae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbe1bcc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbe1bce00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbe1bb020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe1bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b3bbe1c0dd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe1c0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe1be180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbe1be310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe1be4a0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbe1be630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe1be7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbe1be950"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbe1beae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbe1bec70"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbe1bee00"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbe1bd020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbe1bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbe1c3bf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbe1c3bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe1c04e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe1c14e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe1c1e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe1c19a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe1c09a0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe1c2a80"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe1c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbe1c3360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbe1c3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbe1c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b3bbe1bd440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe1bd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbe1bd7c0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbe1bd950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe1bdae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbe1bdc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbe1bde00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe1bc020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbe1bc1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbe1bc340"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbe1bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bbd3a9b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbd3a9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd3a69b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd3a5360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd3a6e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd3a5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b3bbd39fb90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b3bbd39fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd39d9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd39c4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd39c020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd39c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bbd3a1610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbd3a1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd3a05b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd39f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd3a0a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd39f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbe12e5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbe12e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe12ce50"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe12de00"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe12c800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe12c340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe12a340"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe12d430"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe12d940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b3bbe128d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b3bbe128d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe124670"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe126550"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe124020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe126a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe124b30"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe127b60"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe126090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbe12a9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbe12a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbe1297e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbe1281b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbe129ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbe128670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b3bbd3c79c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b3bbd3c79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd3c7d40"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd3c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b3bbd3cb850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbd3cb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd3c7090"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd3c8090"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbd3c8a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd3c8550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbd3c7550"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd3ca6a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd3cabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbd3d02f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbd3d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd3cc870"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd3cfe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd3cdc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd3cd780"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd3cb1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd3cccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd3cd300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd3cf020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd3cc260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd3cf4f0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd3cf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b3bbd45da00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b3bbd45da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd45dd80"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd45b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b3bbd462640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b3bbd462640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd45ec40"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd45f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd45e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd45fae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd45d590"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd45d110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd45f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd461390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd45e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd461860"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd461d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbd468150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbd468150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd463700"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd466c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd465a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd4655b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd462090"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd463ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd465110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd468d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd4630d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd4662a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd466790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3bbd4592b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd4592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd458020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbd458690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbd458690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd4575b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd456020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd457a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd4564e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbd44f8c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbd44f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd43bcf0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd43d320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd43b0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd43dc20"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd43a660"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd43a1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd43d7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd43e4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd43b6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd43e9b0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd43ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b3bbd4462c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b3bbd4462c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd442870"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd445e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd444c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd444780"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd4411e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd442cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd444300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd445020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd442260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd4454f0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd4459c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b3bbd49fc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b3bbd49fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49e210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b3bbd434020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b3bbd434020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b3bbd4a2c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b3bbd4a2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4a1020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b3bbd49d670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b3bbd49d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b3bbd496e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b3bbd496e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd494210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b3bbd49de50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b3bbd49de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49b210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b3bbd4892f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b3bbd4892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd489670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd489800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b3bbd48b2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b3bbd48b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48b670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b3bbd4a7370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b3bbd4a7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b3bbd491670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b3bbd491670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4919f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd491b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b3bbd48c2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b3bbd48c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48c670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b3bbd4a1c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b3bbd4a1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4a0020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b3bbd4a0c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b3bbd4a0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49f020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b3bbd497670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b3bbd497670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4979f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd497b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b3bbd499e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b3bbd499e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd498210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b3bbd49b670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b3bbd49b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b3bbd436970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b3bbd436970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b3bbd436cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b3bbd436e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b3bbd435030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b3bbd4a6d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b3bbd4a6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b3bbd4a5370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b3bbd4a5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b3bbd490a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b3bbd490a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd490df0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b3bbd4a5ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b3bbd4a5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b3bbd48cad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b3bbd48cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48ce50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b3bbd4a6060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b3bbd4a6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a63e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b3bbd492e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b3bbd492e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd491210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b3bbd4a0480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b3bbd4a0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4a0800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4a0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b3bbd4a1480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b3bbd4a1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4a1800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4a1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b3bbd435950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b3bbd435950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd435cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b3bbd493e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b3bbd493e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd492210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b3bbd494670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b3bbd494670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4949f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd494b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b3bbd492670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b3bbd492670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4929f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd492b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b3bbd48aad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b3bbd48aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48ae50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd489020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b3bbd48bad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b3bbd48bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48be50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b3bbd498670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b3bbd498670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4989f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd498b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b3bbd494e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b3bbd494e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd493210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b3bbd48dad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b3bbd48dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48de50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b3bbd49a670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b3bbd49a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b3bbd489ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b3bbd489ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd489e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd488020"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4881b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd488340"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd4884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b3bbd435300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b3bbd435300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd435680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b3bbd4a2490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b3bbd4a2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4a2810"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4a29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b3bbd49f480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b3bbd49f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49f800"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b3bbd497e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b3bbd497e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd496210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b3bbd49be50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b3bbd49be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49a210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b3bbd496670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b3bbd496670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4969f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd496b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b3bbd49e670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b3bbd49e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b3bbd434670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b3bbd434670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4349f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b3bbd49ee50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b3bbd49ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd49d210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd49d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbd437d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbd437d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd4360a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd436230"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd4363c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd436550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd4366e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b3bbd4a4160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b3bbd4a4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b3bbd4a4e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b3bbd4a4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b3bbd48d2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b3bbd48d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48d670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b3bbd48fad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b3bbd48fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48fe50"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b3bbd4a66b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b3bbd4a66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b3bbd48f2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b3bbd48f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48f670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b3bbd48a2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b3bbd48a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd48a670"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd48a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b3bbd498e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b3bbd498e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd497210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b3bbd493670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b3bbd493670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4939f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd493b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b3bbd434cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b3bbd434cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b3bbd4a79c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b3bbd4a79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b3bbd49ae50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b3bbd49ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd499210"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b3bbd4a47b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b3bbd4a47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b3bbd4a4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b3bbd499670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b3bbd499670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd4999f0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd499b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b3bbd491e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b3bbd491e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bbd490610"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd4907a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b3bbd4887a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b3bbd4887a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b3bbd488b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b3bbd488cb0"/>
        <function-ref name="write" scoped="" ref="0x2b3bbd488e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b3bbd486020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bbd4861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b3bbd4d6a20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b3bbd4d6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b3bbd4d6da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b3bbd4d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b3bbd4d4920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b3bbd4d4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd4d6560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd4da9a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd4da9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd4dad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b3bbd4cfa20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b3bbd4cfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b3bbd4cfda0"/>
        <function-ref name="rand32" scoped="" ref="0x2b3bbd4ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b3bbd4d0940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b3bbd4d0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd4cf560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd4d0080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd4d0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd4d0400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b3bbd4d8aa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbd4d8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbd4d8e20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbd4d1020"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbd4d11b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbd4d1340"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbd4d14d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbd4d1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd4b7020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd4b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd4b73a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd4b7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd4b76c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd4b7850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd4b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd4b8220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd4b8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd4b85a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd4b8730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd4b88c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd4b8a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd4b8be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd4b3e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd4b3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd4b1210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd4b13a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd4b1530"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd4b16c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd4b1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd4b6a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd4b6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd4b6da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd4b3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd4b31b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd4b3340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd4b34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b3bbd4b08f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b3bbd4b08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b3bbd4b0c70"/>
        <function-ref name="rand32" scoped="" ref="0x2b3bbd4b0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd4b3750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd4b3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd4b3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbd4af170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd4af170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd4af4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd4af680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd4af810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b3bbd4b1ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbd4b1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbd4b1e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbd4b0020"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbd4b01b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbd4b0340"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbd4b04d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbd4b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b3bbd4b4690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbd4b4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbd4b4a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbd4b4ba0"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbd4b4d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbd517020"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbd5171b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbd517340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbd511950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd511950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd511cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd514aa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd514aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd514e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b3bbd511200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b3bbd511200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd511580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbd50c3f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd50c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd50c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd50db70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd50db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd50c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd510e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd510e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd50d1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbd50ca70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd50ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd50cdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd50b020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd50b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b3bbd50d570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b3bbd50d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd50d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbd555020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd555020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd5553a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd5556b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5556b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd555a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd555bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd555d50"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd554020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd55a960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd55a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd55ace0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd55ae70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd559030"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5591c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd559350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b3bbd559ca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbd559ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd5570a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd557230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5573c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd557550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5576e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd5595f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd5595f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd559970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbd55bcb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbd55bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd55a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd55a230"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd55a3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd55a550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd55a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b3bbd557a50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbd557a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd557dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b3bbd556170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b3bbd556170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd5564f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd556680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd556810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5569a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd556b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd54cd70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd54cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd54a180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd54a310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd54a4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd54a630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd54a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbd54ab10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd54ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd549020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b3bbd595db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2b3bbd595db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd594180"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd594310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b3bbd5492f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd5492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbd549670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbd549800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbd549990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbd549b20"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbd549cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbd549e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b3bbd54ea20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b3bbd54ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd54eda0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd54d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd54d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd54d340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd54d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3bbd548b70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b3bbd548b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bbd547020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bbd5471b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bbd547340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bbd5474d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbd548170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd548170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5484f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd548680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd548810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b3bbd54e370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b3bbd54e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd54e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bbd5507b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b3bbd5507b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd550b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd550cc0"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd550e50"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd54f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd54f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b3bbd54f4d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b3bbd54f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd54f850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd54f9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd54fb70"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd54fd00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd54e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b3bbd54d840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b3bbd54d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd54dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b3bbd54c020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b3bbd54c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd54c3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd54c530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd54c6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd54c850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd54c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd575dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd575dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd574180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b3bbd574410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b3bbd574410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bbd574790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bbd574920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bbd574ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bbd574c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbd569b80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbd569b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbd568020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbd5681b0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd568340"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd5684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd567860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd567860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd567be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd567d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd565020"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5651b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd565340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbd565690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd565690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd565a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd56dcf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd56dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd56a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd56a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd56a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd56a550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd56a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b3bbd569080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbd569080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b3bbd569400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b3bbd569590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b3bbd569720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b3bbd5698b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b3bbd568800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b3bbd568800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbd568b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbd568d10"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbd567020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbd5671b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbd567340"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbd5674d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b3bbd565d90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b3bbd565d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbd564180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbd564310"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd5644a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd564630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd56a980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd56a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd56ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b3bbd5612d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbd5612d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b3bbd561650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b3bbd5617e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b3bbd561970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b3bbd561b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b3bbd563580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbd563580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbd563900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbd563a90"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbd563c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbd563db0"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbd562020"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbd5621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd5ced70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5ced70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd5cd180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5cd310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5cd4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5cd630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd5cf2a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd5cf2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd5cf620"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5cf7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5cf940"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5cfad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5cfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b3bbd5ce020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b3bbd5ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b3bbd5ce3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b3bbd5ce530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b3bbd5ce6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b3bbd5ce850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b3bbd5ce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd5c9dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5c9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd5c8180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5c8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5c84a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5c8630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5c87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2b3bbd5bd2a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2b3bbd5bd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd5bd620"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd5bd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2b3bbd5c6650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2b3bbd5c6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd5c2c40"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd5c31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd5c2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd5c3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd5c1590"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd5c1110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd5c3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd5c5390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd5c2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd5c5860"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd5c5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd5cc3b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd5cc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd5cc730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5cc8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5cca50"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5ccbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5ccd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2b3bbd5c8af0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b3bbd5c8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbd5c8e70"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbd5c7030"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbd5c71c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbd5c7350"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbd5c74e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbd5c7670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbd5c1a30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd5c1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5c1db0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd5c0020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd5c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b3bbd5c79a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbd5c79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd5c7d20"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd5c6020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd5c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b3bbd5c9080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b3bbd5c9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b3bbd5c9400"/>
        <function-ref name="setRetries" scoped="" ref="0x2b3bbd5c9590"/>
        <function-ref name="getRetries" scoped="" ref="0x2b3bbd5c9720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b3bbd5c98b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b3bbd5c9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b3bbd60e350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b3bbd60e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b3bbd60e6d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b3bbd60e860"/>
        <function-ref name="isState" scoped="" ref="0x2b3bbd60e9f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b3bbd60eb80"/>
        <function-ref name="requestState" scoped="" ref="0x2b3bbd60ed10"/>
        <function-ref name="forceState" scoped="" ref="0x2b3bbd60d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbd60c750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbd60c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd608c40"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd6091e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd608020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd609ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd607590"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd607110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd609660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd60b390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd608630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd60b860"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd60bd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbd5ec690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd5ec690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd5eca10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd5ed860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd5ed860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd5edbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5edd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5ec020"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5ec1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5ec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b3bbd5ea610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b3bbd5ea610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b3bbd5ea990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b3bbd5eab20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b3bbd5eacb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b3bbd5eae40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b3bbd5e9020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b3bbd5e91b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b3bbd5e9340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b3bbd5e94d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b3bbd5e9660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b3bbd5e97f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b3bbd5e9980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b3bbd5e9b10"/>
        <function-ref name="sync" scoped="" ref="0x2b3bbd5e9ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bbd5e8020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b3bbd5e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b3bbd5ee830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b3bbd5ee830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbd5eebb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbd5eed40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbd5ed020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbd5ed1b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbd5ed340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbd5ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b3bbd5f0b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b3bbd5f0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b3bbd5ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b3bbd5e71f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b3bbd5e71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b3bbd5e7570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b3bbd5e7700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b3bbd5e7890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b3bbd5e7a20"/>
        <function-ref name="setCca" scoped="" ref="0x2b3bbd5e7bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b3bbd5e7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd5f18f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd5f18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd5f1c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd5f1e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5f0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5f01b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd5f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbd5f5da0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbd5f5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd5f4180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5f4310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd5f44a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd5f4630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd5f47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b3bbd5f3c00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b3bbd5f3c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd5f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b3bbd5ecce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b3bbd5ecce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b3bbd5eb0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b3bbd5eb230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b3bbd5eb3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b3bbd5eb550"/>
        <function-ref name="getPower" scoped="" ref="0x2b3bbd5eb6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b3bbd5eb870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b3bbd5e84d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b3bbd5e84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b3bbd5e8950"/>
        <function-ref name="changed" scoped="" ref="0x2b3bbd5e8ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b3bbd5e8c70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b3bbd5e8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b3bbd5ebb70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b3bbd5ebb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd5ea020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b3bbd5ea1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b3bbd5ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd5f3020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd5f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd5f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbd5e6d30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbd5e6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbd5e50e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbd5e5270"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbd5e5400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbd5e5590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbd5e5720"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd5e58b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbd5e5a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbd5e41b0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd5e5bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbd5e5d60"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbd5e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd5f22d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd5f22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd5f2650"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd5f27e0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd5f2970"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd5f2b00"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd5f2c90"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd5f2e20"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd5f1020"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd5f11b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd5f1340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd5f14d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd5f1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b3bbd5e60f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2b3bbd5e60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bbd5e6470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bbd5e6600"/>
        <function-ref name="request" scoped="" ref="0x2b3bbd5e6790"/>
        <function-ref name="granted" scoped="" ref="0x2b3bbd5e6920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bbd5e6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bbd6d2580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b3bbd6d2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bbd6d2900"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bbd6d2a90"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd6d2c20"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd6d2db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b3bbd6bd060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b3bbd6bd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd6bde30"/>
        <function-ref name="eventTime" scoped="" ref="0x2b3bbd6bc380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd6ce7e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd6ce7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd6ceb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd6cecf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6cee80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6cd030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd6cd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b3bbd6ce1d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b3bbd6ce1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd6ce550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b3bbd6cb640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b3bbd6cb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b3bbd6cb9c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b3bbd6cbb50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b3bbd6cbce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b3bbd6cbe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b3bbd6c3e50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b3bbd6c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd6c1c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6bf590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6bf110"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd6c0580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd6c0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd6cf5c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd6cf5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd6cf940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b3bbd6ccb20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3bbd6ccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd6cb020"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd6cb1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd6cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b3bbd6caaa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b3bbd6caaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd6c8890"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6c61e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6c7d10"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd6c71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd6c76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd6cd470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd6cd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd6cd7f0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd6cd980"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd6cdb10"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd6cdca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd6cde30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd6cc020"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd6cc1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd6cc340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd6cc4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd6cc660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd6cc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b3bbd6c6c50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b3bbd6c6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd6c4a40"/>
        <function-ref name="eventTime" scoped="" ref="0x2b3bbd6c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b3bbd6a3e60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b3bbd6a3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd6a2210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b3bbd6a6a00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b3bbd6a6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd6a6d80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6a5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6a51b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd6a5340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd6a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b3bbd6aa910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b3bbd6aa910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd6a9740"/>
        <function-ref name="eventTime" scoped="" ref="0x2b3bbd6a9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b3bbd6b34d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b3bbd6b34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd6b2390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6b0c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6b0800"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd6b2c60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd6b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd6af340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd6af340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd6af6c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd6af850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6af9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6afb70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd6afd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b3bbd6a62c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b3bbd6a62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd6a6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b3bbd6a5800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2b3bbd6a5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd6a5b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd6a5d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6a4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6a41b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd6a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2b3bbd6a1130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b3bbd6a1130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd6a0750"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd6a0e80"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd6a0020"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd69e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b3bbd6a46a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2b3bbd6a46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd6a4a20"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd6a4bb0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd6a4d40"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd6a3020"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd6a31b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd6a3340"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd6a34d0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd6a3660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd6a37f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd6a3980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd6a3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd6a76b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd6a76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd6a7a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b3bbd699020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b3bbd699020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd6993a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b3bbd699530"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd6996c0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd699850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b3bbd699d30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b3bbd699d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd698980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bbd7130f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b3bbd7130f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bbd713470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bbd713600"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bbd713790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bbd713920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bbd713ab0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbd713c40"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bbd713dd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bbd7124d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd712020"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bbd7121b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bbd712340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b3bbd697060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b3bbd697060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd697c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b3bbd6b8c10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b3bbd6b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd6b7a40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd6b54a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd6b5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd6b6350"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd6b6860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd6ae020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd6ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd6ae3a0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd6ae530"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd6ae6c0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd6ae850"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd6ae9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd6aeb70"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd6aed00"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd6ad020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd6ad1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd6ad340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd6ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b3bbd6adb90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b3bbd6adb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd6ac990"/>
        <function-ref name="eventTime" scoped="" ref="0x2b3bbd6aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2b3bbd6a2550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2b3bbd6a2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd6a29d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2b3bbd69d270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b3bbd69d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b3bbd69c800"/>
        <function-ref name="clear" scoped="" ref="0x2b3bbd69a020"/>
        <function-ref name="isValid" scoped="" ref="0x2b3bbd69c0d0"/>
        <function-ref name="set" scoped="" ref="0x2b3bbd69a750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbd7a6020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd7a63a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7a6530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7a66c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd7a6850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd7a69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd7a6c30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd7a6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd7a5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd7a51b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7a5340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7a54d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd7a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd7a58b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7a58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd7a5c30"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd7a5dc0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd7a4020"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd7a41b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd7a4340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd7a44d0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd7a4660"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd7a47f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd7a4980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd7a4b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd7a4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbd7a3020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbd7a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd7a33a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd7a3530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd7a36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe246cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe246cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2450a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe245230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2453c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe245550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe2456e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbe245930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbe245930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe245cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbe245e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe244020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2441b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbe244340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbe244590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe244590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe244910"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe244aa0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe244c30"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe244dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe243020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe2431b0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe243340"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe2434d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe243660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe2437f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe243980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbe243c10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbe243c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbe242020"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbe2421b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbe242340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe239660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe239660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2399e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe239b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe239d00"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe238020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe2381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b3bbe238460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbe238460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2387e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe238970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe238b00"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe238c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe238e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3bbe2360e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2360e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe236460"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe2365f0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe236780"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe236910"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe236aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe236c30"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe236dc0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe235020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe2351b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe235340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe2354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd787940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd787940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd787cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd787e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd784020"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd7841b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd784340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b3bbd7bb400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7bb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd7bb7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7bb930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7bbac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd7bbc50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd7bbde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3bbd7bc4b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbd7bc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd7bc850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7bc9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7bcb70"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd7bcd00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd7bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b3bbd7b8720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd7b8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd7b8aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd7b8c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7b8dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7b7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd7b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b3bbd7b7480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2b3bbd7b7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd7b7800"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd7b7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b3bbd7b7c60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2b3bbd7b7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd7b6020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd7b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3bbd7ba060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7ba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd7ba3e0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd7ba570"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd7ba700"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd7ba890"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd7baa20"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd7babb0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd7bad40"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd7b8020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd7b81b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd7b8340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd7b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3bbd79f830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd79f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd79d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbd79db30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbd79db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd79c970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbd79b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbd79ce30"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbd79b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3bbd79ae60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b3bbd79ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bbbf117d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbd797ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbd80acc0" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbd80acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd8090a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd809230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd8093c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd809550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd8096e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd809930" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd809930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd809cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd809e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd807020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd8071b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd807340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd807590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd807590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd807910"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd807aa0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd807c30"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd807dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd806020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd8061b0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd806340"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd8064d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd806660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd8067f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd806980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbd806c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbd806c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd805020"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd8051b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd805340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe2a2cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2a2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2a10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe2a1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2a13c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe2a1550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe2a16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbe2a1930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbe2a1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe2a1cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbe2a1e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe2a0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2a01b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbe2a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbe2a0590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2a0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe2a0910"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe2a0aa0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe2a0c30"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe2a0dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe29f020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe29f1b0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe29f340"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe29f4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe29f660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe29f7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe29f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbe29fc10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbe29fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbe29e020"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbe29e1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbe29e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe295e30" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe295e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2931e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe293370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe293500"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe293690"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe293820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b3bbe293ad0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbe293ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe293e50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe292020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2921b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe292340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe2924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3bbe292720" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe292720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe292aa0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe292c30"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe292dc0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe291020"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe2911b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe291340"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe2914d0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe291660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe2917f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe291980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe291b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd7fddd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd7fddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd7fc180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd7fc310"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7fc4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7fc630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd7fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd7fd800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd7fd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd7fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd7fca10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7fca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd7fcd90"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd7fa020"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd7fa1b0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd7fa340"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd7fa4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd7fa660"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd7fa7f0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd7fa980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd7fab10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd7faca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd7fae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbd7f7530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7f7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd7f78b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7f7a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7f7bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd7f7d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd7f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd7f6270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd7f6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd7f65f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd7f6780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7f6910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7f6aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd7f6c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd7f6e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7f6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd7f5220"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd7f53b0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd7f5540"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd7f56d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd7f5860"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd7f59f0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd7f5b80"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd7f5d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd7f4020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd7f41b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd7f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbd7f45d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbd7f45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd7f4950"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd7f4ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd7f4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe325140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe325140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe3254c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe325650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe3257e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe325970"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe325b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbe325d50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbe325d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe324100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbe324290"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe324420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe3245b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbe324740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbe324990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe324990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe324d10"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe323020"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe3231b0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe323340"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe3234d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe323660"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe3237f0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe323980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe323b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe323ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe323e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbe322120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbe322120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbe3224a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbe322630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbe3227c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe318390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe318390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe318710"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe3188a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe318a30"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe318bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe318d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b3bbe317060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbe317060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe3173e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe317570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe317700"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe317890"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe317a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3bbe317c70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe317c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe316020"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe3161b0"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe316340"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe3164d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe316660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe3167f0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe316980"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe316b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe316ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe316e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe315020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd7f1710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd7f1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd7f1a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd7f1c20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7f1db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7f0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd7f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd7f1140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd7f1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd7f14c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd7f0400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7f0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd7f0780"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd7f0910"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd7f0aa0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd7f0c30"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd7f0dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd7ef020"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd7ef1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd7ef340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd7ef4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd7ef660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd7ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbd7ede60" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbd7ede60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbd7ec210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7ec3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7ec530"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbd7ec6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbd7ec850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd7ecaa0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd7ecaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd7ece20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd7eb020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd7eb1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd7eb340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd7eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd7eb720" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd7eb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd7ebaa0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd7ebc30"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd7ebdc0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd7e9020"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd7e91b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd7e9340"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd7e94d0"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd7e9660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd7e97f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd7e9980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd7e9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbd7e9da0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbd7e9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbd7e8180"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbd7e8310"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbd7e84a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe2fa4c0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2fa4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2fa840"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe2fa9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2fab60"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe2facf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe2fae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbe2f90f0" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbe2f90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe2f9470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbe2f9600"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe2f9790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2f9920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbe2f9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbe2f9d00" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2f9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe2f80a0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe2f8230"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe2f83c0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe2f8550"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe2f86e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe2f8870"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe2f8a00"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe2f8b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe2f8d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe2f7020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe2f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3bbe2f7440" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b3bbe2f7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3bbe2f77c0"/>
        <function-ref name="noAck" scoped="" ref="0x2b3bbe2f7950"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3bbe2f7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3bbe2ed640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b3bbe2ed640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2ed9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe2edb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2edce0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe2ede70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe2ec030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b3bbe2ec2e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b3bbe2ec2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3bbe2ec660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbe2ec7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbe2ec980"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bbe2ecb10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3bbe2ecca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3bbe2eb020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbe2eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbe2eb3a0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbe2eb530"/>
        <function-ref name="address" scoped="" ref="0x2b3bbe2eb6c0"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbe2eb850"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbe2eb9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbe2ebb70"/>
        <function-ref name="type" scoped="" ref="0x2b3bbe2ebd00"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbe2ea020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbe2ea1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbe2ea340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbe2ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b3bbd7e4240" loc="4:SlotSchedulerC.nc">
      <component-ref qname="SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b3bbd7e4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b3bbd7e31b0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b3bbd7e4750"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b3bbd7e48e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd7e4a70"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b3bbd7e4c00"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd7e4d90"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b3bbd7e3020"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b3bbd7e45c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2b3bbd7d5be0" loc="23:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2b3bbd7d5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd853110"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd8566a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd8554a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd855020"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd853a10"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd853590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd856b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd857860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd855ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd857d30"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd856220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2b3bbd7da680" loc="22:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2b3bbd7da680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd7d7c40"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd7d81e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd7d7020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd7d8ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd7d5590"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd7d5110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd7d8660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd7d9390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd7d7630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd7d9860"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd7d9d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2b3bbd7df1c0" loc="21:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2b3bbd7df1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd7dc630"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd7dec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd7dd9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd7dd550"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd7da020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd7dcab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd7dd0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd7dfdb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd7dc020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd7de2e0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd7de7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b3bbd7e3d90" loc="18:SlotSchedulerP.nc">
      <component-ref qname="SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b3bbd7e3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b3bbd7e0c70"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b3bbd7e0310"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b3bbd7e04a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd7e0630"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b3bbd7e07c0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd7e0950"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b3bbd7e0ae0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b3bbd7e0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b3bbd837680" loc="3:Timer32C.nc">
      <component-ref qname="SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd837680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd886c40"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd8871e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd886020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd887ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd885590"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd885110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd887660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd888390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd886630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd888860"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd888d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b3bbd82e1d0" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd82e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd82a630"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd82dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd82c9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd82c550"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd829020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd82aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd82c0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd82edc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd82a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd82d2e0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd82d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbd828a00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbd828a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd8242a0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd8252a0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbd825c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd825760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbd824760"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd826890"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd826da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbd8281b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbd8281b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbd828530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbe37f650" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbe37f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe37c020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe37d020"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe37d9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe37d4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe37c4e0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe37e5b0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe37eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbe381dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbe381dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbe37f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b3bbe367da0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe367da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbe366180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbe366310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbe3664a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbe366630"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe3667c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b3bbe369450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe369450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe3697d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbe369960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe369af0"/>
        <function-ref name="get" scoped="" ref="0x2b3bbe369c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe369e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbe368020"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbe3681b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbe368340"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbe3684d0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbe368660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbe3687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b3bbe368a80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe368a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbe368e00"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbe367020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe3671b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbe367340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbe3674d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe367660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbe3677f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbe367980"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbe367b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b3bbe35da80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b3bbe35da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b3bbe35de00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b3bbe35c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b3bbe35c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b3bbe35c340"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe35c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b3bbe35f190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b3bbe35f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbe35f510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b3bbe35f6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe35f830"/>
        <function-ref name="get" scoped="" ref="0x2b3bbe35f9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe35fb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbe35fce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b3bbe35fe70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbe35e030"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbe35e1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b3bbe35e350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b3bbe35e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbe363020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbe363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe360870"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe362840"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe360220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe362d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe360d30"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe363e30"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe362380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bbe364660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b3bbe364660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bbe3649e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b3bbe35e770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b3bbe35e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b3bbe35eaf0"/>
        <function-ref name="getControl" scoped="" ref="0x2b3bbe35ec80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b3bbe35ee10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b3bbe35d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b3bbe35d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b3bbe35d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b3bbe35d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b3bbe35d660"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bbe35d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bbe37aa90" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbe37aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe3762e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe3782e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe378c60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe3787a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe3767a0"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe3798d0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe379de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b3bbe373210" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b3bbe373210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbe370b30"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbe372a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbe3704e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbe370020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbe36f020"/>
        <function-ref name="start" scoped="" ref="0x2b3bbe372090"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbe3725a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bbe376e10" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b3bbe376e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bbe375ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bbe374670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bbe3741b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bbe374b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b3bbd819cc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b3bbd819cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd8180a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd818230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b3bbd81db10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b3bbd81db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd819390"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd81a360"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bbd81ace0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd81a820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bbd819850"/>
        <function-ref name="start" scoped="" ref="0x2b3bbd81b970"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd81be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbd822470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbd822470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd81ea20"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd81f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd81fda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd81f920"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd81d4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd81d020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd81f4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd820090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd81e410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd820560"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd820a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b3bbd88e650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b3bbd88e650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bbd88e9d0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bbd88eb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b3bbd8933b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b3bbd8933b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd88f870"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd892e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd891c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd891780"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd88e1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd88fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd891300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd892020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd88f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd8924f0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd8929c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bbd89ad70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b3bbd89ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd895470"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd8989b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd8967c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd896320"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd895db0"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd895910"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd898e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd8999a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd896df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd898020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd898510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b3bbd8820f0" loc="3:Timer32C.nc">
      <component-ref qname="SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd8820f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd87f630"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd881b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd880920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd8804a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd87e020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd87fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd880020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd882ce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd87f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd881220"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd8816f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b3bbd87cb40" loc="3:Timer32C.nc">
      <component-ref qname="SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd87cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd878110"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd87a5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd8794a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd879020"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd878a10"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd878590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd87aa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd87b750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd879ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd87bc20"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd87a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3bbd872cf0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b3bbd872cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bbd8710a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3bbd871230"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3bbd8713c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3bbd871550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3bbd8716e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3bbd872720" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b3bbd872720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3bbd872aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3bbd871930" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b3bbd871930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3bbd871cb0"/>
        <function-ref name="source" scoped="" ref="0x2b3bbd871e40"/>
        <function-ref name="address" scoped="" ref="0x2b3bbd870020"/>
        <function-ref name="destination" scoped="" ref="0x2b3bbd8701b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b3bbd870340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3bbd8704d0"/>
        <function-ref name="type" scoped="" ref="0x2b3bbd870660"/>
        <function-ref name="setType" scoped="" ref="0x2b3bbd8707f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3bbd870980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3bbd870b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3bbd870ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b3bbd8673f0" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b3bbd8673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b3bbbf11c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b3bbbf30a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bbd863870"/>
        <function-ref name="fired" scoped="" ref="0x2b3bbd866e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bbd864c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bbd864780"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bbd8621e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bbd863cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bbd864300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bbd866020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bbd863260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bbd8664f0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bbd8669c0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3bbbf1fdd0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b3bbbf1f480" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b3bbbf1f800" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbbf1fb30" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b3bbbf1a620" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbbf1a020" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbbf1a350" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b3bbbf196d0" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b3bbbf1c2a0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbbf1c020" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b3bbbf1b7f0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbbf1b210" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b3bbbf1b560" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b3bbbef85d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b3bbbef6ab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b3bbbef6830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b3bbbef3020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b3bbbef4d30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3bbbefacb0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bbbef4350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbbf2e840" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbbf2e840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b3bbbf277c0" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bbbf2b020" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b3bbbf29da0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3bbbf297d0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b3bbbf29b10" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b3bbbf29020" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b3bbbf268a0" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b3bbbf26020" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b3bbbf2b800" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b3bbbf2d3f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3bbbf2d170" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b3bbbf28dc0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3bbbf287f0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b3bbbf28b30" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b3bbbf2c020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3bbbf2dc30" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bbbf2c820" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b3bbbf156e0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
              <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbbef2d20" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b3bbbf150d0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbbf15400" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b3bbbf04b90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b3bbbeee590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf04910" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b3bbbf0f810" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf0f590" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b3bbbef9c50" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b3bbbf10740" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf104c0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b3bbbf0d130" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf0bb20" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b3bbbf0be70" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b3bbbf0cc00" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf0c620" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b3bbbf0c970" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b3bbbf08600" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf08380" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b3bbbf07970" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf073c0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b3bbbf076e0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3bbbeee1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b3bbbf09390" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf09110" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b3bbbf050c0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b3bbbeee590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b3bbbf03a60" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b3bbbf03db0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b3bbbeee590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b3bbbf01020" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b3bbbeee590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b3bbbf4b030" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b3bbbf82b40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b3bbbf63de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b3bbbf82420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b3bbbf63700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b3bbbf625a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b3bbbf66900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b3bbbf63020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b3bbbf62cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b3bbbb0fb70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b3bbbac7c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b3bbbfb7020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b3bbbfb8cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b3bbbfba390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bbbf7a910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b3bbbf79390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b3bbbfb7890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b3bbbfd77b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b3bbbfb8560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b3bbbfd7020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b3bbbfbab30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b3bbbfb9350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b3bbbfb9da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bbbf7a910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b3bbbf79390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b3bbbfb9b20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bbbf7a910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b3bbbf79390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b3bbbfcb0e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b3bbbfc9630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b3bbbfc93b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b3bbbfc72a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b3bbbfc7020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b3bbbfcabe0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b3bbbfca3e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b3bbbfcba90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b3bbbfcb810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b3bbbfd23e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b3bbbfd2d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b3bbbfd2ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b3bbbfd1790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b3bbbfd1510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b3bbbfd02a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b3bbbfd0020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bbbfd0990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b3bbbfc0810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b3bbbfbe2a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b3bbbfbe020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b3bbbfbf020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bbbfa5ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b3bbbfbf760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b3bbbfc39b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b3bbbfc0120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b3bbbfc3270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b3bbbfc20e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b3bbbfc29f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b3bbbfc2770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b3bbbfbecb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b3bbbfbea30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b3bbbfec9f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b3bbbe592b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b3bbbc4d420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b3bbba09020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b3bbba08020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b3bbba09790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b3bbba1b020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b3bbba1b870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbc140280" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbc140280"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bbc1404c0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc1404c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2b3bbc13fac0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc1404c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b3bbc140d90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b3bbc13f150" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc13f480" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2b3bbc13f810" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc1404c0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b3bbc13a660" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc13a060" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc13a390" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b3bbc13b790" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b3bbc13ec10" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc13e990" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b3bbc13cde0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc13c800" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b3bbc13cb50" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbc137780" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbc137780"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bbc1379c0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc1379c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2b3bbc134570" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc1342f0" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2b3bbc1322a0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc1379c0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc132020" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b3bbc11c650" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc11c3d0" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b3bbc120730" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc120110" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b3bbc1204a0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b3bbc11d630" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc11d3b0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b3bbc11fb30" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc11f510" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b3bbc11f8a0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b3bbc11b630" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc11b3b0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2b3bbc151860" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2b3bbc14f970" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b3bbc14f6f0" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2b3bbc14f020" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b3bbc152020" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2b3bbc151110" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2b3bbc152e60" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3bbc1538a0" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2b3bbc1532a0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2b3bbc153610" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2b3bbc14e350" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b3bbc14e0d0" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bbc152710" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b3bbc1cd0e0" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bbc1cd8f0" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b3bbc1c10b0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b3bbc1c7dd0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3bbc1c6400" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b3bbc1c6180" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b3bbc1c52b0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b3bbc1c6c70" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b3bbc1c5020" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3bbc1de2b0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b3bbc1e1b80" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc1de020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b3bbc1d9020" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b3bbc1dbce0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b3bbc1d9df0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b3bbc1d9820" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc1d9b60" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b3bbc1dabc0" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b3bbc1d6720" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b3bbc1d7dc0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc1d6130" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b3bbc1d6480" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b3bbc1db510" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b3bbc1ddbb0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b3bbc1dd280" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc1dd5c0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b3bbc1dd910" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b3bbc257270" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b3bbc257ba0" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b3bbc256d30" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b3bbc222450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b3bbc222870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b3bbc22e9c0" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b3bbc22f990" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b3bbc22f020" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b3bbc22e1f0" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b3bbc22d470" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b3bbc24c3e0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b3bbc24fb80" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2b3bbc244d70" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbc244af0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b3bbc244350" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b3bbc279390" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2b3bbc285020" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2b3bbc266de0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1fb3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b3bbc1fbbf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b3bbc266b60" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1fb3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b3bbc1fbbf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2b3bbc2590e0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2b3bbc2612a0" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1f6360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b3bbc1f6ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b3bbc261020" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1f6360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b3bbc1f6ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b3bbc27e750" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2b3bbc27ccf0" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2b3bbc262830" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1f8290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2b3bbc1f8a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2b3bbc261a90" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1f6360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2b3bbc1f6ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2b3bbc25d830" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2b3bbc25d5b0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2b3bbc25ee40" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b3bbc27e020" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2b3bbc262040" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1f8290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b3bbc1f8a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b3bbc263da0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1f8290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b3bbc1f8a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2b3bbc260c80" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b3bbc27ee80" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2b3bbc25e690" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2b3bbc25e410" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2b3bbc25b190" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2b3bbc25b910" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b3bbc280070" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2b3bbc282020" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2b3bbc258070" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b3bbc2807b0" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2b3bbc285800" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b3bbc27d5c0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b3bbc25c070" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2b3bbc1df330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2b3bbc1fda50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2b3bbc27dd60" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2b3bbc27abd0" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2b3bbc2604d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2b3bbc260250" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b3bbc279d30" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbc279ab0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2b3bbc263600" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bbc1fb3b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2b3bbc1fbbf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2b3bbc259850" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b3bbc283020" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2b3bbc281800" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b3bbc222450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b3bbc222870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b3bbc281580" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b3bbc222450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b3bbc222870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2b3bbc282af0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b3bbc20a420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b3bbc20a840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b3bbc282870" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b3bbc20a420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b3bbc20a840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b3bbc278730" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2b3bbc27c570" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2b3bbc25c880" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2b3bbc27a480" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2b3bbc283790" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2b3bbc258850" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbc274ce0" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbc274ce0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bbc271020" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc271020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b3bbc271940" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc271020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b3bbc26fa50" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b3bbc26f1f0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b3bbc29c1f0" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b3bbc2955b0" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b3bbc295d60" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b3bbc2945a0" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b3bbc293510" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b3bbc291c60" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bbc2904d0" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b3bbc294d30" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bbc28f0b0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b3bbc290dc0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b3bbc296df0" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b3bbc293cf0" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b3bbc2914b0" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b3bbc30f860" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bbc30e0e0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b3bbc2fca50" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b3bbc2fb1f0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b3bbc327b10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b3bbc327890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b3bbc2fd2d0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b3bbc2fa0e0" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b3bbc326490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b3bbc2fb930" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bbc2fc2b0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b3bbc3287c0" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b3bbc2fda70" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bbc2ff420" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b3bbc2fa860" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b3bbc327020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b3bbc328070" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b3bbc2ffb50" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b3bbc5c4020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b3bbc5c4750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b3bbc5c50e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b3bbc5c25e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bbc5c57e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b3bbc5c4e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bbc5c62b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b3bbc5c6980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b3bbc61d460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b3bbc61dcc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b3bbc646a40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b3bbc667e00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b3bbc664020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b3bbc667570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b3bbc6656d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b3bbc664950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b3bbc658020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bbc660090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b3bbc659d20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bbc660090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b3bbc65a020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b3bbc65ab20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bbc660090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b3bbc65a8a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bbc660090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b3bbc659470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bbc660090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b3bbc6e3770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b3bbc70b7a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc70b520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b3bbc70a840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc70a5c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b3bbc745d30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc745730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc745a60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b3bbc748da0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b3bbc747ce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc747720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc747a50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b3bbc7402e0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc740060" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b3bbc73f510" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc73f290" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b3bbc73d680" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc73d400" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3bbc7305e0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc730020" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc730350" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b3bbc72bbb0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc72b5b0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc72b8e0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b3bbc72fd20" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b3bbc72e900" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc72e680" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b3bbc72ce00" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc72c820" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b3bbc72cb70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b3bbc78eb00" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc78e4f0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b3bbc78e870" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b3bbc792c80" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b3bbc78fb60" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc78f560" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b3bbc78f8d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b3bbc7b1190" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b3bbc7b49f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b3bbc7ba2b0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b3bbc7b9720" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b3bbc7b6390" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbc7b6110" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b3bbc7b8020" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b3bbc7bae20" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbc7baba0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b3bbc7b6bf0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b3bbc7b88d0" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b3bbc7c3d70" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b3bbc7c2750" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b3bbc7c3400" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b3bbc7c3180" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b3bbc7c1350" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b3bbc7c10d0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b3bbc7be020" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b3bbc7bec40" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbc7be9c0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b3bbc7bd730" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b3bbc7bd4b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbc94a7a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbc94a7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bbc94a9e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc94a9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b3bbc945840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc94a9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc9455c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b3bbc9439d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc943750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b3bbc9475f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc947370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bbc942d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc94a9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc942710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b3bbc942a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbc94a9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b3bbc937e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc937810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b3bbc937ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b3bbc934020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc935d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b3bbc937020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b3bbc938560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b3bbc9382e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b3bbc956430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc9561b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b3bbc959720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc9594a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b3bbc95bdc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b3bbc95bb40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b3bbc95b2a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b3bbc95b020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b3bbc95a880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b3bbc95a600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b3bbc9575e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc957360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b3bbc951630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b3bbc951020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b3bbc9513a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b3bbc9650c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc966aa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b3bbc966df0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b3bbc9616d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc9610d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b3bbc961440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b3bbc965ba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b3bbb32b110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc965920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b3bbc962600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc962380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b3bbc9662a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc966020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b3bbc963720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc9634a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b3bbc95d0b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc967de0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3bbc975360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc97ed40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b3bbc9750d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b3bbc9746a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b3bbc971e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b3bbc971060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b3bbc9718a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbc971bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b3bbc972840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b3bbc972260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b3bbc9725b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b3bbc975df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b3bbc975b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b3bbc9b70e0" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b3bbc976870" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b3bbc9b12e0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc9b1020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b3bbc9b2710" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b3bbbeb2ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b3bbbeafc70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc9b2410" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b3bbc9b0620" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b3bbbeae7c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b3bbbeac660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbc9b0320" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b3bbc97b070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b3bbc9780e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b3bbc97a8f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b3bbc97d730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b3bbc97c7e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b3bbc97b8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b3bbc97a120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b3bbc97c020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b3bbc9abd00" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b3bbc9ac350" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b3bbc9ab530" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b3bbc9ab2b0" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b3bbc9acac0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b3bbc9ad020" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b3bbc9b4c90" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b3bbc9adad0" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b3bbc9ad850" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b3bbc9e4870" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b3bbc9e4290" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b3bbc9e45e0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b3bbc9e51f0" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b3bbc9e7880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b3bbc9e7210" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b3bbc9e75f0" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b3bbc9edc10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b3bbc9ed990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b3bbc9e5a70" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b3bbc9e9730" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b3bbc9e94b0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b3bbc9ecd30" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b3bbc9ecab0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b3bbc9e3ae0" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b3bbc9e89c0" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b3bbc9e8740" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b3bbc9e32b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b3bbc9ea4d0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b3bbc932360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b3bbc932ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b3bbc9eacc0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b3bbc9ed1f0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b3bbc9ec390" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b3bbc9e8020" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b3bbc9e14b0" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bbc9e14b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b3bbc9e1d70" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b3bbca29ae0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bbc9e14b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b3bbca29530" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b3bbca29850" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bbc9e14b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b3bbca4cc10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b3bbbeb3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbca4c990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b3bbca4a710" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b3bbbeb3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbca4a490" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b3bbca1fc60" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b3bbc932360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b3bbc932ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbca1b020" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbca1b020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bbca1b260" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b3bbca17e00" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bbca1ae40" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b3bbca17460" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3bbca19e60" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b3bbca171d0" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b3bbca19640" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b3bbca16620" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3bbca1bdc0" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3bbca1bb40" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbca1b260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bbca1a680" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b3bbca08560" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b3bbca074f0" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b3bbca08d40" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b3bbbeee590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b3bbca09cd0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b3bbbeee590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b3bbca096f0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b3bbbeee590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b3bbca09a40" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3bbbeee970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b3bbca46e50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b3bbbeb3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b3bbca05e80" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b3bbbeb3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b3bbca05020" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b3bbca05890" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b3bbca05be0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b3bbca4e610" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b3bbbeb3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b3bbca4f770" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b3bbca4e020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b3bbca4e370" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b3bbca0cc30" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b3bbca0c470" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b3bbca0dce0" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b3bbca0d420" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b3bbcc07030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b3bbcc061f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b3bbcc079d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b3bbcc07750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b3bbcc087a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b3bbcbe3020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bbcbe2ac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b3bbcbe57c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b3bbcbe22a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b3bbcbe2020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b3bbcbe5020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b3bbcbe3820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b3bbcd292b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b3bbcd29b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b3bbcd27390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b3bbcd59b60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbcd59580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b3bbcd598d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b3bbcd54dd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbcd54490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b3bbcd547e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b3bbcd54b30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b3bbcd556b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b3bbbeb3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbcd550d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b3bbcd55420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b3bbcd5b730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b3bbbeb3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbcd5b150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b3bbcd5b4a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b3bbcd572c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbcd58930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b3bbcd58c80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b3bbcd57020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3bbcd39cf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b3bbcd39380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b3bbcd39710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbcd39a50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b3bbcd903c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b3bbcd8e6a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b3bbcd8ea30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbcd8ed70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b3bbcd90110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b3bbcd3dc90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b3bbcd3da10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b3bbce0a120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b3bbc20a420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b3bbc20a840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b3bbce12d70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbce12af0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b3bbce0d2a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbce0d020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b3bbce0e610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b3bbce0dd30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbce0dab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2b3bbce7d9d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2b3bbce8f420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2b3bbce83620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b3bbce833a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2b3bbce98af0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2b3bbce81c50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2b3bbce885e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2b3bbce90540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2b3bbce8e2d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b3bbce91500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2b3bbce91280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2b3bbce94a10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2b3bbce8b070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2b3bbce82550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2b3bbce7d270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2b3bbce85c30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2b3bbce78350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2b3bbced29d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2b3bbce97980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2b3bbce8c8b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2b3bbce8a1f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2b3bbce91dc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2b3bbce998c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2b3bbce85460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b3bbce851e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2b3bbce99190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2b3bbce814d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2b3bbce7c190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2b3bbce77b00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2b3bbced2270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2b3bbce80b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2b3bbce7c8c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2b3bbce83db0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2b3bbce79390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2b3bbce950e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2b3bbce877e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2b3bbce7a7b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2b3bbce7eac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2b3bbce8ade0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2b3bbce8ab60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2b3bbce762d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2b3bbce86a60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2b3bbce80420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2b3bbce98390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b3bbc23b240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b3bbc23b660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b3bbce98110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b3bbc23b240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b3bbc23b660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2b3bbce8c190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2b3bbce942a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b3bbce94020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2b3bbce8b9d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bbce8b750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2b3bbce79b60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2b3bbce93b50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2b3bbce95850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2b3bbce862a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2b3bbce86020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bbb32c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2b3bbce97270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2b3bbce7a020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2b3bbce7e350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2b3bbce82cc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2b3bbce87020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2b3bbce88d30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2b3bbce8e9f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2b3bbce90c80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2b3bbce76a40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2b3bbce933c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b3bbce93140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2b3bbce78b10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2b3bbce8fb50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2b3bbce77350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b3bbd126620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b3bbd1263a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b3bbd113bc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b3bbd113280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b3bbd1135f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbd113920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b3bbd112960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b3bbd1123a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3bbd1126d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbd0fb730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbd0fb730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bbd0fb970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbd0fb970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b3bbd1604d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbd0fb970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3bbd160250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bbd0fb970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b3bbd1675e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b3bbd1a99e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b3bbd1a9020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b3bbd1a9750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b3bbd1aa7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b3bbd1aa020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b3bbd1add40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b3bbd1be2a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bbb32c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbd1be020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b3bbd1bf2a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bbba01090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbd1bf020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b3bbd1bb2a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbd1bb020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bbd1bd2a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3bbd1bd020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b3bbbf003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b3bbbeffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bbd342910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bbd342910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b3bbd33f270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bbb32c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b3bbd4d7600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b3bbd4d7600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b3bbd4d42a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bbba10980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b3bbd4d7600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b3bbd4d4020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b3bbd4d7600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
