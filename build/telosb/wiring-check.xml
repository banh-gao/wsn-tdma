<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ba15aaec9a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ba15aa97cd0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ba15aa97cd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ba15ace4590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="TDMALinkControl" scoped="" ref="0x2ba15aae7580"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ab40590"/></to>
    </wire>
    <wire loc="61:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2ba15ab40590"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ad18680"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="TDMALinkSnd" scoped="" ref="0x2ba15aafc1a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15ad1eae0"/></to>
    </wire>
    <wire loc="58:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15ad1eae0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15ad17610"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="TDMALinkRcv" scoped="" ref="0x2ba15aaf7b50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15ad1e490"/></to>
    </wire>
    <wire loc="55:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15ad1e490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c4b4650"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2ba15ab06240"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c4a78b0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c4a78b0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3d9020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15ab077e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b544020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15c1cadd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15c0e8b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15c107750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15c0a8080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15bf9a130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15be6d620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15bda9820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b6cf7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15cc80a40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b9b3020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b606d60"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b3b4e60"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b33b780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15c9b5ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15adcb2a0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ba15ace4c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ba15a5fc3a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ba15a5fc3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ba15aa52140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ba15ad026c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15ab3b0f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15ab3b0f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15ab37360"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ad02dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2ba15ab37a70"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2ba15ab38910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2ba15ab38910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15ab59850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ba15ab36190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15ab504a0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2ba15ab36870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b1f2c40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15ab59850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15ab857e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ba15ab73de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ba15ab84020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ba15a7a9080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ba15ab83360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2ba15abc65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ac946d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2ba15abd7020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ac8db30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2ba15abbd700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15ac73160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2ba15abe9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15ac99cb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2ba15abc4aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15ac74480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2ba15abef020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15ac99020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2ba15abe5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15aca8cb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2ba15abd25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15acb9220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2ba15abc8b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ac319d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2ba15abeba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15ac822f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2ba15abcd3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15ac83610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2ba15abd65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ac84220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2ba15abbc700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15ac927a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2ba15abe8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15acb62f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2ba15abd5be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15aca36d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2ba15abbf890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15ac93ac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2ba15abb6060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac1cc80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2ba15abefda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15acb8610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2ba15abac0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ac76020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2ba15abd1a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15acb16d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2ba15abdb690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15ac7ca90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2ba15abeaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15aca07a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2ba15abc0cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15ac7dde0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2ba15abcc1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15aca2ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2ba15abe7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15acaf7a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2ba15abd30c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15ac9bb30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2ba15abeeb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15acb0ac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2ba15abeca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15ac8acb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2ba15abeda20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15aca8020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2ba15abce570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ba15ac8a020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2ba15abcf020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ba15acaab30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2ba15ac19c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac195b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2ba15ac182f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2ba15acc8aa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2ba15ac18940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2ba15acc5260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15ac7b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac1cc80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15ac79020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac195b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15ac72020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac1cc80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15ac717a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac195b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15ac91610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac1cc80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15ac90c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac195b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2ba15ac36c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2ba15ac352f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2ba15acc59f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2ba15ac35940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2ba15acc4240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15ac89b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15ac872f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15aca7160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15aca67a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15ac9f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15ac9ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15ac98b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15ac962f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15acb5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15acb47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15acae610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15acadc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15acccb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ba15acca2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15aa50040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ba15aa4d5d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ba15a66c2d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15c4b4650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b527210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15ad15990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2ba15ad36470"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b529020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15b529020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b549680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ba15ad2e880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ba15c1a9020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ba15c1a9020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ba15c1a4080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2ba15ad47de0"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ba15c29fc50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ba15c29fc50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ba15c306b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2ba15ad35290"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ba15c2a3aa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2ba15ad230b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c2a85c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRandom" scoped="" ref="0x2ba15ad42ca0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ba15c0afa20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ba15c0afa20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ba15c0a7a20"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2ba15ad45710"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3e3680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3e3680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3d9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2ba15ad3ea70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15c42cb30"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15c42cb30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15cf303b0"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2ba15ad3d820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c41f800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15c41f800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b527210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2ba15ad3c020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15c41a530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15c41a530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15cfb6920"/></to>
    </wire>
    <wire loc="43:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2ba15ad3cd30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c413140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15c413140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b527210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2ba15ad3b400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15c40e020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15c40e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15cf8a140"/></to>
    </wire>
    <wire loc="51:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2ba15ad5cd40"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2ba15c4b7900"/></to>
    </wire>
    <wire loc="14:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2ba15c4b7900"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2ba15d01cde0"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ba15adce490"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15adf2a70"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2ba15add1680"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15adcdcc0"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ba15adcdcc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15b30c7a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ba15adf2220"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ba15ade57c0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ba15ade57c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ba15b30e060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2ba15b33c430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2ba15adf0d50"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ba15b30e060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ba15ae51560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ba15ae05660"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ba15b30f0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ba15b30f0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ba15ae54020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15b30e800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15b309080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b3096f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b311c00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b311c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15ae574d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b3108f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15c657c70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15c657c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b2262c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15ae4e6c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15b30e800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15c651d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15ae551d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ba15ae503f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15c657020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15c657020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b227020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ae78c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15c6515d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15c6515d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ba15b2281d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15ae551d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15af00dc0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ba15ae51560"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ba15aefe890"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ba15ae54020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ba15aeff6d0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15ae574d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15af00020"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15aefc020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15ae4e6c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ba15aefd230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2ba15ae503f0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15aef7290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ae78c20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2ba15aefc690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15af1a8b0"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15af1a8b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ba15af10020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15aef7c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15b1c59a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15b1c59a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ba15b1c09d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15aef4dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1de2a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15af143b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ba15af0cdc0"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15af1a080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15af13710"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ba15af2f860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2ba15b0043f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2ba15b0043f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0fe100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2ba15af09800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2ba15b0023f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2ba15b0023f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0f9d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ba15af2c800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2ba15b0003f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2ba15b0003f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0f4740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2ba15af2a800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2ba15b0303f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2ba15b0303f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0bf740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2ba15af28800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2ba15b0323f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2ba15b0323f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0c4d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2ba15afa4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b078d10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2ba15afc2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0b4740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2ba15b0123d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0a6740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2ba15b0213e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b130d10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2ba15b0103f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0a1100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2ba15afbecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0abd10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2ba15afdb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0e7740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2ba15affb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b127100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2ba15afea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b139740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2ba15b00a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0cd740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2ba15b02e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b115d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2ba15b0193f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b12b740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2ba15af9ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b06ad10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2ba15b0083f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0c8100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2ba15af9acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b096100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2ba15afb7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0d2d10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2ba15afd5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0d9740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2ba15aff4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b119100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2ba15b018020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b12b740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2ba15afa8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b082740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2ba15afc6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b087260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2ba15afe4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0c4d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2ba15b0143f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0a6740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2ba15b0273e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b13ed10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2ba15b01b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b12b740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2ba15afe0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0ba3f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2ba15afcb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0f9d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2ba15afee020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b142100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2ba15b0253e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b139740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2ba15b0063e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b103740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2ba15afa2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b073740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2ba15afc0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0af100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2ba15aff2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b115d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2ba15afbbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0a6740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2ba15afd9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0e2100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2ba15aff9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b123d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2ba15afe8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b134100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2ba15afaee10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0553f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2ba15afcacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b092d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2ba15afb5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0cd740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2ba15afd3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0d4100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2ba15b02b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b110740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2ba15b01f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b12b740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2ba15afcf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b103740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2ba15afa6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b07c100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2ba15afc4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b083d10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2ba15afe2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0bf740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2ba15b0233e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b134100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2ba15afdd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0ede00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2ba15affd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0f4740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2ba15afec020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b13ed10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2ba15afa0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b06e100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2ba15aff0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b110740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2ba15af9ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b09b740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2ba15afb9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0a1100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2ba15afd7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0ded10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2ba15aff7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b11e740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2ba15afe6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b130d10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2ba15afaacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b051e00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2ba15afc8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b08c740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2ba15afb3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0c8100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2ba15afd1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b108d10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2ba15b00c3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0d2d10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2ba15b0293e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b142100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2ba15b00e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0d2d10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2ba15afcd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0fe100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2ba15b01d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b130d10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2ba15b04b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b119100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2ba15b016060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ba15b0abd10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ba15b1c09d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15b1b9b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b1e8c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15b1f2c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b1e1c40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ba15b1d6910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ba15b1f5360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ba15b1f5360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b1ef710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ba15b1dcb10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ba15b1f46a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ba15b1f46a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b2161d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ba15b1dbe30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ba15b1f39c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ba15b1f39c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b212d70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b21a930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2ba15affb020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b215480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2ba15aff9020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b210020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2ba15aff7020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15c656be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15af1a8b0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15c656440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b226ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b226ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b2c5400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b2608a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15c651d70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b2262c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b2c6020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b2c6020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15ca603a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2ba15b2281d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ba15b25eb60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b227020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b2c7210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b2c7210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15c9b2540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b2c5400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15ca5e8b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2ba15b25dc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15af143b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b2c5cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b2608a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b24aa90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b2c5400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15b2e99d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15b2c67a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15b2c67a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15ca60b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15b2c0b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15af1a080"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15ca5d210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b2c5cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ba15ca5d9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ba15c9b4330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ba15ca5bc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15ca2b3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15b2c0b20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ba15ca2bb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ba15b2e9400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15ca2a0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15b2e99d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15ca2ad00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b2e8720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2ba15b33bde0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2ba15b33c430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ba15b331020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ba15aa97cd0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ba15b331740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b329320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15b329320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b3b14e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15b3b14e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b3e12f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15b328370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15b351b40"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15b326020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b3b8720"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15b327530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b3ba9e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b3559f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b3b7400"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15b326c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b3b9020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15b3b4e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b3a1c30"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15b3ac940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b35b490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15b3b7d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15b3ae020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15b3b6a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b3b04c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ba15b3ac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2ba15b53c6c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15b3ae020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15b4d9830"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15b3b04c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b4d9110"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2ba15b4d8760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ba15b3ac020"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15b3de8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b3ac940"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15b4d6590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b3ac940"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15b515c80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b3ac940"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ba15b4d70e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ba15b3d75c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2ba15b4d79d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2ba15b3da130"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2ba15b3d18e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2ba15b519b70"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ba15b3d0060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15adcdcc0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ba15b516ca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ba15ae05660"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2ba15b447e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2ba15b3f7d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2ba15b406400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ba15b4420c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2ba15b4d4c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2ba15b4d3480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15b549680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b56e340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15b528050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15b5487f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15b5487f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15c1d0da0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ba15b527df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ba15b545880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ba15b545880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ba15c1cec00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b543760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15b543760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15c2488f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15b5619e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf35550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf35550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf27a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b5558a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b580bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b580bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b567700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15b527210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b547b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15b547b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c1ce020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b524800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b541810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b541810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b568670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15b544020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15c2492d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15b560af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15bf31660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15bf31660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15bf23af0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15b56e340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15c1beb80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15b578d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15c246830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ba15b575500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ba15c247b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15b583970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15b569740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15b569740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b567700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15c1be080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b568670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ba15bf376e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ba15b57e790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ba15b5662e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ba15b5662e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ba15c1a9020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15b57fa80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15b567080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15b567080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15bf36a70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2ba15c23d0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b56d430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c244860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ba15b56a350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ba15b56a350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ba15c134ca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15c243690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15b5690f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15b5690f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15c133a50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ba15c23f4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ba15bd20b30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15c243ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf2cd20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c242b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf28640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ba15c241610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ba15b609550"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ba15b609550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ba15b5ff1a0"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ba15c23e1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15b5aa990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15b5aa990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15b5a4020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15c23dd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15c1beb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ba15c1bbd90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15bf36a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15bf27020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ba15c134ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ba15c129a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15c1be080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15c1b62d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ba15b56ce70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c1345f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15c1345f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2ba15c129370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15bf376e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ba15bf29c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b56d430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15c136cb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15c136cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15c12b7b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ba15b56c160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c135960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15c135960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2ba15c12a4d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ba15b56b560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ba15c131170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ba15c131170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ba15c127020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15c133a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15c128840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ba15c1bbd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b5659f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15b5659f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b5a6690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c1306b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c10c220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15c10c220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c10aa20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c10b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c1aa2a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15c1aa2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c1a73b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c1a9d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c1c2cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15c1c2cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ba15c1bc860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c1bc860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15b5ac600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15b5ac600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15b5a52e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15c130020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c1bf980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15c1bf980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ba15c1bb690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15c1bb690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c0efaa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15c0efaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c0ebe30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15c0ec950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b5aa300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15b5aa300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15be717c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15be717c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15be6b020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b5a4e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b617020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b617020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b600470"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ba15b59b3f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ba15b6154b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ba15b6154b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ba15b5fd020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ba15b5a26f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15bdb46d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ba15b5a26f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15be745c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ba15be745c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15be6dca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ba15bdb46d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15bda7020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ba15b5932a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2ba15bdb1020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ba15bdb1020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15bda78c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ba15b59a060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15bdb1cb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15bdb1cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15bda6650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15b591e20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15b589430"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ba15b59ae80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ba15c0afa20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2ba15b5cebc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15c0b1aa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ba15c0b1aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15b9b7280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15b599670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2ba15b5ca5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2ba15b5cb660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2ba15b5cc730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2ba15b604890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2ba15b5fc500"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2ba15b63c790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ba15b6cc220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ba15b6cc220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ba15b6c62e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ba15b63a9d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ba15b7cc370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ba15b7cc370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7bf1b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ba15b639ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2ba15b7c9ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ba15b7c9ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7b0710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ba15b637020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2ba15b7c6380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ba15b7c6380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7fad70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ba15b632c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2ba15b7e3210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ba15b7e3210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ba15b921a30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ba15b61fb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15bc74e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15bc74e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b985960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ba15b61ebb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2ba15bc717b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ba15bc717b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ba15b6203b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2ba15bc70ae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ba15bc70ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ba15b61f440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2ba15bc72ad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ba15bc72ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15b620ae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15bc6f160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15bc6f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ba15b624420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2ba15bc66870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ba15bc66870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ba15b624cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2ba15bc64880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ba15bc64880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ba15b62c5d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2ba15bc630a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ba15bc630a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15b626020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15bc6be50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15bc6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15b6268f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bc6a670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bc6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ba15b627e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2ba15bc56500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ba15bc56500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ba15b6274a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2ba15bc57ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ba15bc57ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15b6221e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15bc67e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15bc67e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ba15b622a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2ba15bc6ae50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ba15bc6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ba15b6213c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bc69e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bc69e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2ba15b668880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15bcaca80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15bcaca80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b985960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2ba15b669a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15bce59e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15bce59e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b985960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ba15b62d390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ba15bd20b30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ba15b643970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ba15bd1fd30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ba15bd1fd30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ba15bd05310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2ba15b65c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2ba15b65e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15b6cf7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15b6c7a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15b6c7a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15cacf8e0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ba15b6c62e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cace180"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15cacf8e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15cac8a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15cace180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cac15f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15cac8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15cb4a510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ba15cabbd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cac72a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15cac72a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cb4ada0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15cabd9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15b746020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15b746020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15b7405f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cb46020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cab11b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cab11b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cb44760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cb4e8f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cb4e8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cb43a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cb4dc10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cb4dc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2ba15abd7020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2ba15abce570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2ba15abd5be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2ba15abcc1f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2ba15abd30c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2ba15abef020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2ba15abd25a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2ba15abefda0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2ba15abd1a50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2ba15abeeb80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2ba15abcf020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2ba15abeda20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ba15b774950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ba15b1c09d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ba15b7cb6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7bad70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ba15b7ca9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7b5b70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ba15b7cd0e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7c4710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ba15b7c7020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7ab1b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7c3930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ba15afa4cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7be480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2ba15afdb020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7b8020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2ba15afa6cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7b4de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ba15afaee10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7af930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2ba15afd3020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7fd480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2ba15afdd020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7f7020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2ba15afd5020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ba15b7df5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ba15b820020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ba15b7e3e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ba15b912a70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b820ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2ba15abd65a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2ba15b81fda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2ba15abeba20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b81ec20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2ba15afdd020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2ba15b920610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ba15b80fc40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2ba15b80fc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ba15b84fa30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2ba15b911610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ba15b811e70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2ba15b811e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ba15b8019d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2ba15b805bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2ba15b845bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2ba15b80cbc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2ba15b84ca30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2ba15b80abc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2ba15b84aa30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2ba15b815d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2ba15b851a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2ba15b807bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2ba15b847a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2ba15b80ebc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2ba15b84ea30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2ba15b803bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2ba15b844bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2ba15b809bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2ba15b849a30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2ba15b810c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2ba15b850a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2ba15b806c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2ba15b846bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2ba15b80dbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2ba15b84da30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2ba15b80bbc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2ba15b84ba30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2ba15b816dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2ba15b852a30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2ba15b808bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2ba15b848a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ba15bc71160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bc65880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ba15bc5d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ba15bc640a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bcb9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ba15bc54500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bc70490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ba15bc59880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bc55500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ba15bc5f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ba15bc610a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bc73a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b982680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b982680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b97b930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bc6fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ba15bc6d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15bc58c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ba15bc6dbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bc55ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ba15bc590a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15bc69670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15bc5b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ba15bc5d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15bc5b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bcbace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ba15bc54ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ba15bc61880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ba15bc5c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ba15bc56ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ba15bc63880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bcb9ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ba15bc72480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ba15bc6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15bc67670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ba15bc5e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ba15bc5e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bc650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bc6c2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ba15bc6b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bc6f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15bc57500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ba15bcba500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15bc5f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ba15bc5c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ba15bc71e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ba15bc620a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ba15bc6c940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ba15bc62880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ba15bc580a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bcb89b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b977bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b975020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b975db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b985960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b978810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b974ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2ba15b96f020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15b9bb770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ba15b9bb770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15b9b7280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ba15b972400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b9f5c40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b9f5c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15cbb2e70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ba15b970080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ba15b9f48f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ba15b9f48f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ba15cbaf2c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ba15b967680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ba15bc35020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ba15bc35020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ba15cbad440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15b96fdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2ba15b962120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ba15b9b7280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15b9b3b70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ba15cbad440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ba15ba3b850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ba15cbaf2c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ba15b9e0020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15cbb2e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b9e3430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15cbb0af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15cba55d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15cba55d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15bb802c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ba15b9e0020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ba15ba98a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ba15cbaf8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ba15b9e06a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ba15b9e06a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ba15ba97060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ba15ba39a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ba15cbadbe0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15cc42a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b9e16b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ba15ba3a690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15cba6860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15cba6860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15bb81020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ba372a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15cc49020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15cc49020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ba15bb834d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b9e16b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15ba98250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ba15ba3b850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ba15ba97c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15b9e3430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15ba3d470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ba15ba953e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ba15ba39a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ba15ba965b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2ba15ba3a690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ba90480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ba372a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2ba15ba95a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15ba86020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15ba86020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ba15ba7fc70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15ba90c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2ba15ba8e2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ba15ba815e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15ba77150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15ba82d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ba15ba78780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ba15baa8bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2ba15b0143f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2ba15baa6b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2ba15b0103f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ba15baa4b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2ba15b00e3f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2ba15baa2b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2ba15b0083f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2ba15baa0b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2ba15b00a3f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2ba15baadd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2ba15bb60430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ba15cc497c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15bb823f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ba15cc49dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ba15bb6d540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ba15bb6d540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2ba15bb60430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15cba45a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15ba86020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15cba5d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb80ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb80ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb76c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15bb7f8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15cc42a80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15bb802c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15bb77850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15bb77850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15cc7c020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2ba15bb834d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ba15bb7c060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15bb81020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15bb78a80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15bb78a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15cc7d270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15bb823f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15bb7c990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb76c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15cc7b400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15bb74570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15bb7f8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb7be50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb76c30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2ba15bb7b060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15ba82d10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ba15bb7b840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ba15ba815e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15bb76020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15cc7c7a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15cc7bcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15bb74570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ba15cc79500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ba15cc7f0a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ba15cc777a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2ba15bb59250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ba15ba7fc70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ba15bbb7d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2ba15b0143f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ba15bbb5cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2ba15b00e3f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15bc9fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ba15bcaada0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15bca2b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bc9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ba15bc96e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ba15bc9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bc892f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ba15bc8b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bca7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ba15bc91670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bc8c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ba15bca1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bca0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ba15bc97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ba15bc99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ba15bc9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bcab760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b982680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bca6aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ba15bca5120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15bc90a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ba15bca5870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bc8cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15bca7dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ba15bc92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15bca0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bca1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ba15bcaa750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15bc93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ba15bc94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15bc92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bc8aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ba15bc8bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ba15bc98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ba15bc94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ba15bc8dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ba15bc9a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bc89ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ba15bcaa100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ba15bca2370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15bc9f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ba15bc97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ba15bc9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ba15bc96670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ba15bc9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ba15bca9450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bc9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bca4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ba15bca4cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ba15bc8d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ba15bc8fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bca6450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15bc8f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ba15bc8a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15bc98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ba15bc93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ba15bca9aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ba15bca7770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ba15bc9ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ba15bca4670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ba15bc99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ba15bc91e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bcee7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15bcd8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ba15bce3da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15bcdcb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bcd6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ba15bccfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ba15bcd6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bcc22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ba15bcc52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bce1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ba15bcca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bcc62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ba15bcdbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bcdac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ba15bcd0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ba15bcd3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ba15bcd5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bce4760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b982680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bce0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ba15bcde120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15bcc9a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ba15bcde870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bcc6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15bce1dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ba15bccce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15bcda480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bcdb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ba15bce3750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15bccde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ba15bcce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15bccc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bcc3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ba15bcc5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ba15bcd1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ba15bccee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ba15bcc7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ba15bcd4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bcc2ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ba15bce3100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ba15bcdc370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15bcd8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ba15bcd0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ba15bcd5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ba15bccf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ba15bcd7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ba15bce2450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bcd7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bcdd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ba15bcddcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ba15bcc72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ba15bcc8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bce0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15bcc82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ba15bcc32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15bcd1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ba15bccd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ba15bce2aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ba15bce1770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ba15bcd4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ba15bcdd670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ba15bcd3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ba15bccae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bcc17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2ba15bd018c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2ba15bcf7020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2ba15bcf7020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2ba15bcf1210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2ba15bd55cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2ba15bd44020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2ba15bd44020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2ba15bd42490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2ba15bcf05b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ba15bd60a20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2ba15bd448c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2ba15bd455a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2ba15bd455a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ba15bd5e9e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ba15bd3bb40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ba15bd84020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ba15bd84020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ba15bd81d20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2ba15bd42d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ba15bd448c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15bd71260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ba15bd6e890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ba15bd6e890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15bd67060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15bd64190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2ba15abb6060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15bd5dc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2ba15afc6cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2ba15bdad9f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2ba15bda55e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2ba15bdaf190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2ba15bda5d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2ba15bda47f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ba15b6cc220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ba15bd98500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ba15b7cd0e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ba15bd91820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ba15b7cc370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ba15bd90b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2ba15b7c7020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ba15bd99880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2ba15b7df5a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ba15bd8e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15be38c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15be38c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b985960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bd8ed10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15be368f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15be368f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b982680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ba15bdf96d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ba15be352f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ba15be352f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ba15bdf9de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2ba15be34cc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ba15be34cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bdf8530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2ba15be33370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ba15be33370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bdf8c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15be32d00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15be32d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bd8ce00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ba15be99c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ba15be99c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bd8d780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2ba15be807a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ba15be807a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bd8c550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15be852f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15be852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bdf63e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15be9a480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15be9a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bdf55e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15be96e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15be96e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bdf4020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15be95670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15be95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ba15bdf6e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2ba15be9c7b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ba15be9c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bdf39c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2ba15be82ad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ba15be82ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ba15bdf4890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ba15be842f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ba15be842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ba15bdf3130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ba15be84ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ba15be84ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ba15bdeed40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ba15be74df0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ba15be74df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ba15be6c550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bda0a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bd9f9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ba15bd9e7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf35550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bd93b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bf2d480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bf2d480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bf1f8b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15bdf16c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15be98c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ba15be34020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15be9bc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ba15be8ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ba15be95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ba15be812f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ba15be89670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ba15be9ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ba15be8f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ba15be92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ba15be94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ba15be30370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15be88a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ba15be30ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15be85ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15be32060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ba15be8be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15be99480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ba15be35940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15be8ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ba15be8d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15be8b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ba15be90670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ba15be8de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ba15be86ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ba15be93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ba15be81ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ba15be9b490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15be98480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ba15be8fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ba15be94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ba15be8e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ba15be96670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ba15be34670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ba15be9c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ba15be9ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ba15be862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ba15be87ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15be326b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15be872f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ba15be822f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15be90e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ba15be8c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ba15be339c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ba15be93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ba15be92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ba15be89e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2ba15be70020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2ba15be6b7c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15bec4150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ba15be6a020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ba15b7cc370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ba15be69380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2ba15b7cb6a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ba15be676b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2ba15b7ca9d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ba15be66a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ba15b7e3e30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ba15bed36e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15c087d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ba15c087d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ba15b985960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bed2530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2ba15c064ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ba15c064ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bed1ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15c0816b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15c0816b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ba15bed13a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2ba15c080370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ba15c080370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bed0330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15becf1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ba15becdd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf35550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ba15becfb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ba15b609550"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bec83e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15c079e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15c079e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bec8cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15c078670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15c078670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bec9b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2ba15c07f160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ba15c07f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bec66d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2ba15c0642f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ba15c0642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ba15bec7590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ba15c0662f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ba15c0662f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ba15bec7e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ba15c066ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ba15c066ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bec5020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15c067ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15c067ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ba15bec58b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ba15c085300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ba15c085300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2ba15beb89d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15bfa17c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15b746020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ba15bf1a820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ba15bfaa4e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ba15bf1cb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ba15bf94610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ba15bf94610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ba15c0342b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ba15bf99020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15c043150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15bf9a130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15bfd7020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15bfd7020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15cd959d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ba15c03d640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15c01e2f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15c019850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15bfd7870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15bfd7870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cd8f5f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15c033690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15bf84b70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15bf84b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15bf7c610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15cd959d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15cd79360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ba15cd89d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cd94260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15cd94260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cd79bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15cd8b9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15bf84b70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cd75dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cd7e020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cd7e020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cd73440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cd7d760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cd7d760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cd72760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cd7ca80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cd7ca80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ba15bfecb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ba15b1c09d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ba15c0159c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ba15c038a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15c02a8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ba15c0962c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ba15c0962c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ba15bf99020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15c07ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ba15c084020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15c07ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ba15c071e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ba15c078e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ba15c082370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ba15c06c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15c0672f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ba15c07cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ba15c07bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ba15c072670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ba15c074e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ba15c076670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15c086970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b982680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15c081d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15c06ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ba15c080ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15c081060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ba15c06de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15c07b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15c07c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ba15c085950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15c06ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ba15c06f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15c06d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ba15c065ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ba15c073670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ba15c06fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ba15c068ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ba15c075670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ba15c07e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15c07a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ba15c072e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ba15c076e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ba15c071670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ba15c079670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ba15c084670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ba15c07fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ba15c0682f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ba15c06aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15c06a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ba15c0652f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15c073e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ba15c06e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ba15c084cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ba15c0829c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ba15c075e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ba15c07f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ba15c074670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ba15c06ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ba15c0637a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ba15c0ac920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ba15c0a8940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15c0b39a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15c0a8080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c107e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ba15c10b020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ba15c106ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15c0f3690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ba15c0f3690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15b9b7280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ba15c1058f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ba15c0afa20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c103170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2ba15c0ec200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2ba15c0e8570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15c0e73f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ba15c0ec950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c0e7a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c127d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ba15c1306b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15c126b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ba15c130020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15c1252f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c123170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ba15c123b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ba15c1c9410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2ba15c170db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2ba15c1bd800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15c1b8580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ba15c1b8580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15b9b7280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c1a4dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ba15c1a9d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2ba15c1a3af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15c1e9350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ba15c1e9350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ba15b9b7280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2ba15c1a1650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15c1e7750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ba15c1e7750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ba15c0962c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15c1a29a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ba15bf376e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c19ca30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2ba15c1982a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ba15c2ab580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ba15b549680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ba15c296060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ba15c303910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c2a77e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15c288340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ba15c2a71d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ba15c2ff2c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15c2a4640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b580bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ba15c29ce50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ba15c28c4d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ba15c2a85c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15c3016b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15c2a5b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b541810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ba15c2a3aa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ba15c292c10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c2a6470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15c307020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ba15c2ffa00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15c403020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15c403020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15ceb4cb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2ba15c2fd6a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15c4028b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c4028b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15ceb1590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ba15c2fe800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15c403c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c403c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15ceb2930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15c2fa130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf35550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15c2f6270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15bf31660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15c2f2020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bf2d480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15c3fab30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15b746020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ba15c2f2d30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ba15c3fc830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ba15c2f0060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ba15c3f7e60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ba15c3f7e60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ba15bf94610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ba15c2ef0f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ba15c2fce60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ba15b527210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2ba15c2fb550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ba15b527df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15ceb4cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15cea6660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15ceb2930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15ceb1590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15c400020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ba15ceb0c10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15ceb0c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b524800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15cea5460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c362940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15cea40e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15c362940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c3974b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15c396400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15b528050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c395060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c394720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ba15c392480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ba15c392c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3d9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15c444d70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ba15c43d3b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ba15c3cd470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15c44bb10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15c3d3a00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15c3d3a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cf00890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15c3d31b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15cf07b10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ba15cf07b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ba15ceea660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ba15cef90a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cf054f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ba15cf054f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ba15cee9020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ba15cefcc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ba15b746020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cee5190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15ceef450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15ceef450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cee4770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15ceeea80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15ceeea80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cee3a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15ceedda0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15ceedda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ba15c447cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ba15c437650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15cf303b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15cfd3640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c42b8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15cf2f020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15cf2f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c42a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15cf2fc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15cf2fc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15c429c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ba15cf2d2b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15cf2d2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b524800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15cfd22e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c362940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15cfd1020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c41fdd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c41ea10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15cfb6920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15cfa9b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c419270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15cfb5590"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15cfb5590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c419e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15cfb4270"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15cfb4270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15c4165d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ba15cfb38f0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15cfb38f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b524800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15cfa8910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c362940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15cfa6590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c413710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c412400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ba15cf8a140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ba15d030390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c40ec30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15cf8ad50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15cf8ad50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c40d8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15cf89990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15cf89990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15c40b020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ba15cf87120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ba15cf87120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b524800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ba15d02f060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ba15c362940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15d02fc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2ba15d01a0a0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15d007310"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ba15d007310"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3d9020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2ba15d015570"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15d001a70"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ba15d001a70"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3d9020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2ba15d0109f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15cffa240"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2ba15cffa240"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3d9020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ba15c4b4c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ba15c4b38b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="7:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="21:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqDelayTimer" loc="2(TDMALinkC.JoinReqDelayTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.StartSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EndSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="4">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2ba15abe0230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2ba15abe05d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2ba15abe0980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2ba15abe0d00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2ba15abdf0d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2ba15abdf440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2ba15abdf7d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2ba15abdfb60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2ba15abde020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2ba15ac33960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2ba15ac33d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2ba15b046890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2ba15b046c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2ba15b045020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2ba15b0453d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2ba15b045740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ba15b1baad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ba15b1baad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ba15b2455b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ba15b2745b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2ba15b299d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ba15b7299d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ba15b7299d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ba15b742bb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ba15b742bb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ba15b73f3b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ba15b73f3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ba15b73f7a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ba15b73f7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ba15b73e020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ba15b73e020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ba15b73e3f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ba15b73ebf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ba15b73ebf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ba15b747dd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ba15b747dd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ba15b76d600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ba15b76d600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ba15b76d9f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ba15b76d9f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ba15b76c210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ba15b76c210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ba15b76c5e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15bd7f400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15bd7f400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ba15bd7fb90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15bd7fb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15bfaca60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15bfaca60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15bfd3cd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15bfd3cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15c010230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15c010230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ba15c010560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ba15c387a00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ba15c3806b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ba15c376320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ba15c35ec80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ba15c424060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2ba15c48e840" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2ba15c48ebb0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2ba15c4860d0" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2ba15c486440" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2ba15aaec9a0" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ba15aaec9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ba15aaecd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2ba15ab06240" loc="13:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2ba15ab06240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15ab176e0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ab05c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15ab18a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15ab185f0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15ab15020"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15ab17b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15ab18170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15ab06e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15ab170d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15ab05340"/>
        <function-ref name="stop" scoped="" ref="0x2ba15ab05810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkSnd" ref="0x2ba15aafc1a0" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkSnd" scoped="" ref="0x2ba15aafc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15aafc520"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15aafc6b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15aafc840"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15aafc9d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15aafcb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkControl" ref="0x2ba15aae7580" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkControl" scoped="" ref="0x2ba15aae7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALinkControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ba15aaed1b0"/>
        <function-ref name="startDone" scoped="" ref="0x2ba15aae7a90"/>
        <function-ref name="startSlave" scoped="" ref="0x2ba15aae7c20"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15aae7db0"/>
        <function-ref name="startMaster" scoped="" ref="0x2ba15aaed020"/>
        <function-ref name="isMaster" scoped="" ref="0x2ba15aae7900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkRcv" ref="0x2ba15aaf7b50" loc="11:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkRcv" scoped="" ref="0x2ba15aaf7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15aae6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ba15ab077e0" loc="12:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15ab077e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15ab07b60"/>
        <function-ref name="source" scoped="" ref="0x2ba15ab07cf0"/>
        <function-ref name="address" scoped="" ref="0x2ba15ab07e80"/>
        <function-ref name="destination" scoped="" ref="0x2ba15aafb030"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15aafb1c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15aafb350"/>
        <function-ref name="type" scoped="" ref="0x2ba15aafb4e0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15aafb670"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15aafb800"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15aafb990"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15aafbb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ba15ab3c210" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ab3c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab3c590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ba15aa97cd0" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ba15aa97cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ba15ab3f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15ab3b0f0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15ab3b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab3b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ba15ab36190" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2ba15ab36190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab36510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15ab37360" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15ab37360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab376e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2ba15ab37a70" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2ba15ab37a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab37df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2ba15ab36870" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2ba15ab36870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab36bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15ab504a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15ab504a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab50820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2ba15ab38910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2ba15ab38910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab38c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2ba15ab73de0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ba15ab73de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ba15ab55c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ba15ab55310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ba15ab554a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ba15ab55630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ba15ab55180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ba15ab557c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ba15ab55950"/>
        <function-ref name="initClocks" scoped="" ref="0x2ba15ab55ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15ab59850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15ab59850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab59bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2ba15ab84020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ba15ab84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ba15ab83020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ba15ab84530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ba15ab846c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ba15ab84850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ba15ab843a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ba15ab849e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ba15ab84b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2ba15ab84d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ba15ab83360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ba15ab83360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ba15ab836e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15ab857e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15ab857e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ab85b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2ba15abc65a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2ba15abc65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abc6920"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abc6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abc6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abc6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abc5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abc51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abc5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abc54d0"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abc5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2ba15abd7020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2ba15abd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abd73a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abd7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abd76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abd7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abd79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abd7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abd7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abd6020"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2ba15abbd700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2ba15abbd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abbda80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abbdc10"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abbdda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abbc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abbc1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abbc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2ba15abe9a20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2ba15abe9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abe9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abe8020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abe81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abe8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abe84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abe8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2ba15abc4aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2ba15abc4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abc4e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abbf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abbf1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abbf340"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abbf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2ba15abef020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2ba15abef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abef3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abef530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abef6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abef850"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2ba15abe5a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2ba15abe5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abe5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abe4020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abe41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abe4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abe44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abe4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2ba15abd25a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2ba15abd25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abd2920"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abd2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abd2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abd2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abd1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abd11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abd1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abd14d0"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2ba15abc8b10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2ba15abc8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abae020"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abae1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abae340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abae4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abae660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abae7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abae980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abaeb10"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abaeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2ba15abeba20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2ba15abeba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abebda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abea020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abea1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abea340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abea4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2ba15abcd3e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2ba15abcd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abcd760"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abcd8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abcda80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abcdc10"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abcdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2ba15abd65a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2ba15abd65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abd6a20"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abd6bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abd6d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abd5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abd51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abd5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abd54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abd5660"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abd57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2ba15abbc700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2ba15abbc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abbca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abbcc10"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abbcda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abd9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abd91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abd9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2ba15abe8a20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2ba15abe8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abe8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abe7020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abe71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abe7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abe74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abe7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2ba15abd5be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2ba15abd5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abd4020"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abd41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abd4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abd44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abd4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abd47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abd4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abd4b10"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abd4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2ba15abbf890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2ba15abbf890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abbfc10"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abbfda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abbe020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abbe1b0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abbe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2ba15abb6060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2ba15abb6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15abb63e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15abb6570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abb6700"/>
        <function-ref name="get" scoped="" ref="0x2ba15abb6890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abb6a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abb6bb0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15abb6d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abb5020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15abb51b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15abb5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15abb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2ba15abefda0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2ba15abefda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abee180"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abee310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abee4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abee630"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abee7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2ba15abac0c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2ba15abac0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abac440"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abac5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abac760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abac8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abaca80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abacc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abacda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abc6020"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2ba15abd1a50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2ba15abd1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abd1dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abd0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abd01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abd0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abd04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abd0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abd07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abd0980"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abd0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2ba15abdb690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2ba15abdb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abdba10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abdbba0"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abdbd30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abbd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abbd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2ba15abeaa20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2ba15abeaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abeada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abe9020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abe91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abe9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abe94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abe9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2ba15abc0cf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2ba15abc0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abc40a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abc4230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abc43c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abc4550"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abc46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2ba15abcc1f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2ba15abcc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abcc570"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abcc700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abcc890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abcca20"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abccbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2ba15abe7a20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2ba15abe7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abe7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abe5020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abe51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abe5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abe54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abe5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2ba15abd30c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2ba15abd30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abd3440"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abd35d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abd3760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abd38f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abd3a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abd3c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abd3da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abd2020"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2ba15abd96c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2ba15abd96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15abd9a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15abd9bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abd9d60"/>
        <function-ref name="get" scoped="" ref="0x2ba15abd8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abd81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abd8340"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15abd84d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abd8660"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15abd87f0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15abd8980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15abd8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2ba15abeeb80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2ba15abeeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abed020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abed1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abed340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abed4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2ba15abeca20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2ba15abeca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abecda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15abeb020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15abeb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15abeb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15abeb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15abeb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2ba15abeda20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2ba15abeda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abec020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abec1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abec340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abec4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2ba15abce570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2ba15abce570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15abce8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15abcea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15abcec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15abceda0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15abcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2ba15abcf020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2ba15abcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15abcf3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15abcf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15abcf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15abcf850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15abcf9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15abcfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15abcfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15abce020"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15abce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2ba15ac182f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2ba15ac182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac18670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2ba15ac19c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ba15ac19c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac18020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2ba15ac18940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2ba15ac18940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac18cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2ba15ac195b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac195b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac19950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15ac1cc80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac1cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac1a0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac1a230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac1a3c0"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac1a550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac1a6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac1a870"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac1aa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac1ab90"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac1ad20"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac19020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2ba15ac352f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2ba15ac352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac35670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2ba15ac36c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ba15ac36c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2ba15ac35940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2ba15ac35940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac35cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2ba15ac365b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac365b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac36950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15ac14c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac14c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac370a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac37230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac373c0"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac37550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac376e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac37870"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac37a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac37b90"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac37d20"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac36020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15ac7ca90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15ac7ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac7ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15ac7b020"/>
        <function-ref name="captured" scoped="" ref="0x2ba15ac7b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac7b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac7b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15ac7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ac319d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ac319d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15ac31d50"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15ac7d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac7d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15ac7d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15ac7d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac7d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15ac7d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15ac7d980"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15ac7db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15ac79020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15ac7dde0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15ac7dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac7c180"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15ac7c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15ac7c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15ac7c630"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ac7c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15ac7b930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac7b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac7bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac7be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac7a020"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac7a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac7a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac7a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac7a660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac7a7f0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac7a980"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac7ab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac7aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15ac73160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15ac73160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac734e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15ac73670"/>
        <function-ref name="captured" scoped="" ref="0x2ba15ac73800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac73990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac73b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15ac73cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ac76020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ac76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15ac763a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15ac76530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac766c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15ac76850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15ac769e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac76b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15ac76d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15ac74020"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15ac741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15ac717a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac71b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15ac74480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15ac74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac74800"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15ac74990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15ac74b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15ac74cb0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ac74e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15ac72020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac723a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac72530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac726c0"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac72850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac729e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac72b70"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac72d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac71020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac711b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac71340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15ac927a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15ac927a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac92b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15ac92cb0"/>
        <function-ref name="captured" scoped="" ref="0x2ba15ac92e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac91020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac911b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15ac91340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ac946d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ac946d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15ac94a50"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15ac94be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac94d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15ac93020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15ac931b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac93340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15ac934d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15ac93660"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15ac937f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15ac90c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac90c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15ac93ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15ac93ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac93e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15ac92020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15ac921b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15ac92340"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ac924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15ac91610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac91610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac91990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac91b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac91cb0"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac91e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac90020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac901b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac90340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac904d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac90660"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac907f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15ac8acb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15ac8acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac890a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15ac89230"/>
        <function-ref name="captured" scoped="" ref="0x2ba15ac893c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac89550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac896e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15ac89870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ac8db30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ac8db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15ac8b020"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15ac8b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac8b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15ac8b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15ac8b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac8b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15ac8b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15ac8bb10"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15ac8bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15ac872f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac87670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15ac8a020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15ac8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac8a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15ac8a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15ac8a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15ac8a850"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ac8a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15ac89b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac89b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac88020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac881b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac88340"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac884d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac88660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac887f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac88980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac88b10"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac88ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac88e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15ac822f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15ac822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac82670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15ac82800"/>
        <function-ref name="captured" scoped="" ref="0x2ba15ac82990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac82b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac82cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15ac82e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ac84220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ac84220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15ac845a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15ac84730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac848c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15ac84a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15ac84be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac84d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15ac83020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15ac831b0"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15ac83340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15aca67a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15aca67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15aca6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15ac83610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15ac83610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac83990"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15ac83b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15ac83cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15ac83e40"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ac82020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15aca7160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15aca7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15aca74e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15aca7670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15aca7800"/>
        <function-ref name="get" scoped="" ref="0x2ba15aca7990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15aca7b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15aca7cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15aca7e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15aca6020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15aca61b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15aca6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15aca64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15aca07a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15aca07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15aca0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15aca0cb0"/>
        <function-ref name="captured" scoped="" ref="0x2ba15aca0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac9f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac9f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15ac9f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15aca36d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15aca36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15aca3a50"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15aca3be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15aca3d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15aca2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15aca21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15aca2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15aca24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15aca2660"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15aca27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15ac9ec50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac9ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15aca2ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15aca2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15aca2e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15aca0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15aca01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15aca0340"/>
        <function-ref name="fired" scoped="" ref="0x2ba15aca04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15ac9f610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac9f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac9f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac9fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac9fcb0"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac9fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac9e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac9e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac9e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac9e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac9e660"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac9e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac9e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15ac99cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15ac99cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac980a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15ac98230"/>
        <function-ref name="captured" scoped="" ref="0x2ba15ac983c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac98550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac986e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15ac98870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ac9bb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ac9bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15ac9a020"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15ac9a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac9a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15ac9a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15ac9a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac9a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15ac9a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15ac9ab10"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15ac9aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15ac962f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15ac962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ac96670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15ac99020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15ac99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ac993a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15ac99530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15ac996c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15ac99850"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ac999e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15ac98b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15ac98b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ac97020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ac971b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ac97340"/>
        <function-ref name="get" scoped="" ref="0x2ba15ac974d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ac97660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ac977f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ac97980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ac97b10"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ac97ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ac97e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ac96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15acb62f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15acb62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15acb6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15acb6800"/>
        <function-ref name="captured" scoped="" ref="0x2ba15acb6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15acb6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15acb6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15acb6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15acb9220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15acb9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15acb95a0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15acb9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15acb98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15acb9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15acb9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15acb9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15acb8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15acb81b0"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15acb8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15acb47a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15acb47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15acb4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15acb8610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15acb8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15acb8990"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15acb8b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15acb8cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15acb8e40"/>
        <function-ref name="fired" scoped="" ref="0x2ba15acb6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15acb5160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15acb5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15acb54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15acb5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15acb5800"/>
        <function-ref name="get" scoped="" ref="0x2ba15acb5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15acb5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15acb5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15acb5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15acb4020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15acb41b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15acb4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15acb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15acaf7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15acaf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15acafb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15acafcb0"/>
        <function-ref name="captured" scoped="" ref="0x2ba15acafe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15acae020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15acae1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15acae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15acb16d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15acb16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15acb1a50"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15acb1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15acb1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15acb0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15acb01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15acb0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15acb04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15acb0660"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15acb07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15acadc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15acadc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15acac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15acb0ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15acb0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15acb0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15acaf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15acaf1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15acaf340"/>
        <function-ref name="fired" scoped="" ref="0x2ba15acaf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15acae610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15acae610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15acae990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15acaeb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15acaecb0"/>
        <function-ref name="get" scoped="" ref="0x2ba15acaee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15acad020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15acad1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15acad340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15acad4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15acad660"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15acad7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15acad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15aca8cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15aca8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15accc0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15accc230"/>
        <function-ref name="captured" scoped="" ref="0x2ba15accc3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15accc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15accc6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15accc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15acaab30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15acaab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15aca9020"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15aca91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15aca9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15aca94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15aca9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15aca97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15aca9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15aca9b10"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15aca9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ba15acca2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ba15acca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15acca670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ba15aca8020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ba15aca8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15aca83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15aca8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15aca86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15aca8850"/>
        <function-ref name="fired" scoped="" ref="0x2ba15aca89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ba15acccb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15acccb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15accb020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15accb1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15accb340"/>
        <function-ref name="get" scoped="" ref="0x2ba15accb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15accb660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15accb7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15accb980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15accbb10"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15accbca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15accbe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15acca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2ba15acc4240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2ba15acc4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15acc45c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2ba15acc8aa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2ba15acc8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15acc8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2ba15acc5260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2ba15acc5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15acc55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2ba15acc59f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2ba15acc59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15acc5d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ba15a7a9080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ba15a7a9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ba15a7a9400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ba15a66c2d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2ba15a66c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ba15a66c650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ba15a8417d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2ba15a8417d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ba15a841b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2ba15ab57b50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ba15ab57b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ba15ad0eb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ba15ad0e1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ba15ad0e340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ba15ad0e4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ba15ad0e020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ba15ad0e660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ba15ad0e7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2ba15ad0e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ba15ad02dc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2ba15ad02dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ad01180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ba15ace4590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ba15ace4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ba15ace4910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ba15ad026c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2ba15ad026c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ad02a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ba15ace4c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ba15ace4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ad02020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ba15ad021b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ba15ad02340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ba15a5921d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2ba15a5921d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15a592550"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15a5926e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ba15a5fc3a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ba15a5fc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15a5fc720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ba15a5fc8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ba15a5fca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ba15aa50040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2ba15aa50040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15aa503c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15aa50550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ba15aa4d5d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2ba15aa4d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ba15aa4d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ba15aa52140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ba15aa52140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15aa524c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ba15aa52650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ba15aa527e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15ad1eae0" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15ad1eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ad1ee60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ad1d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ad1d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15ad1d340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ad1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15ad1e490" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15ad1e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15ad1e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ab40590" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ab40590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALinkControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ba15ad1e1b0"/>
        <function-ref name="startDone" scoped="" ref="0x2ba15ab40aa0"/>
        <function-ref name="startSlave" scoped="" ref="0x2ba15ab40c30"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15ab40dc0"/>
        <function-ref name="startMaster" scoped="" ref="0x2ba15ad1e020"/>
        <function-ref name="isMaster" scoped="" ref="0x2ba15ab40910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2ba15ad36470" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2ba15ad36470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15ad367f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15ad36980"/>
        <function-ref name="start" scoped="" ref="0x2ba15ad36b10"/>
        <function-ref name="stop" scoped="" ref="0x2ba15ad36ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2ba15ad3cd30" loc="42:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2ba15ad3cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15ad3b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15ad17610" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15ad17610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ad17990"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ad17b20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ad17cb0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15ad17e40"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ad15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2ba15ad35290" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2ba15ad35290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ad2d090"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ad25970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ad254f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15ad2d960"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ad2de70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRandom" ref="0x2ba15ad42ca0" loc="35:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRandom" scoped="" ref="0x2ba15ad42ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ba15ad450a0"/>
        <function-ref name="rand32" scoped="" ref="0x2ba15ad45230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2ba15ad3ea70" loc="38:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2ba15ad3ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ad3edf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ad3d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ad3d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15ad3d340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ad3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqDelayTimer" ref="0x2ba15ad45710" loc="36:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2ba15ad45710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15ad3fc40"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ad401e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15ad3f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15ad40ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15ad3e590"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15ad3e110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15ad40660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15ad43390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15ad3f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15ad43860"/>
        <function-ref name="stop" scoped="" ref="0x2ba15ad43d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2ba15ad3b400" loc="44:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2ba15ad3b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ad3b780"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ad3b910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ad3baa0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15ad3bc30"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ad3bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15ad15300" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15ad15300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15ad15680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2ba15ad230b0" loc="32:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2ba15ad230b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15ad23430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ba15ad18680" loc="22:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ba15ad18680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALinkControl"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ba15ad17340"/>
        <function-ref name="startDone" scoped="" ref="0x2ba15ad18b90"/>
        <function-ref name="startSlave" scoped="" ref="0x2ba15ad18d20"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15ad17020"/>
        <function-ref name="startMaster" scoped="" ref="0x2ba15ad171b0"/>
        <function-ref name="isMaster" scoped="" ref="0x2ba15ad18a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2ba15ad47de0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2ba15ad47de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ba15ad4ac60"/>
        <function-ref name="eventTime" scoped="" ref="0x2ba15ad461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2ba15ad3d820" loc="39:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2ba15ad3d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15ad3dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2ba15ad3c020" loc="41:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2ba15ad3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ad3c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ad3c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ad3c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15ad3c850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ad3c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2ba15ad2e880" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ba15ad2e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ba15ad2ec00"/>
        <function-ref name="setRetries" scoped="" ref="0x2ba15ad2ed90"/>
        <function-ref name="getRetries" scoped="" ref="0x2ba15ad11020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ba15ad111b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ba15ad11340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ba15ad15990" loc="27:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15ad15990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15ad15d10"/>
        <function-ref name="source" scoped="" ref="0x2ba15ad14020"/>
        <function-ref name="address" scoped="" ref="0x2ba15ad141b0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15ad14340"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15ad144d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15ad14660"/>
        <function-ref name="type" scoped="" ref="0x2ba15ad147f0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15ad14980"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15ad14b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15ad14ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15ad14e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2ba15ad5cd40" loc="46:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2ba15ad5cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ba15ad39bd0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2ba15ad39270"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2ba15ad39400"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15ad39590"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2ba15ad39720"/>
        <function-ref name="start" scoped="" ref="0x2ba15ad398b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2ba15ad39a40"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2ba15ad390e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15adce490" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15adce490"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15adce810"/>
        <function-ref name="stop" scoped="" ref="0x2ba15adce9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2ba15adf0d50" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2ba15adf0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ba15adca100"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2ba15adf2220" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ba15adf2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15adf25a0"/>
        <function-ref name="receive" scoped="" ref="0x2ba15adf2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15adcb2a0" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15adcb2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15adcb620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2ba15add1680" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2ba15add1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15add1a00"/>
        <function-ref name="stop" scoped="" ref="0x2ba15add1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15adf2a70" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15adf2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15adf2df0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15adcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ba15ade57c0" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ba15ade57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ade5b40"/>
        <function-ref name="receive" scoped="" ref="0x2ba15ade5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ba15ae05660" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ba15ae05660"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ae059e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ba15ae05b70"/>
        <function-ref name="receive" scoped="" ref="0x2ba15ae05d00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ba15ade5020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ba15ade51b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ba15ade5340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ade54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15adcdcc0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15adcdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15ade60a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15ade6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15b3108f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b3108f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15b310c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15b310e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ba15b30e060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ba15b30e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b30e3e0"/>
        <function-ref name="receive" scoped="" ref="0x2ba15b30e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2ba15b30e800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15b30e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ba15b30eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ba15b30f0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ba15b30f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b30f440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ba15b30f5d0"/>
        <function-ref name="receive" scoped="" ref="0x2ba15b30f760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ba15b30f8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ba15b30fa80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ba15b30fc10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b30fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b311c00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b311c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b310020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b3101b0"/>
        <function-ref name="request" scoped="" ref="0x2ba15b310340"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b3104d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b310660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ba15ae551d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15ae551d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15ae55550"/>
        <function-ref name="configure" scoped="" ref="0x2ba15ae556e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ba15ae51560" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ba15ae51560"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ae518e0"/>
        <function-ref name="receive" scoped="" ref="0x2ba15ae51a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2ba15ae4e6c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15ae4e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ba15ae4ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ba15ae54020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ba15ae54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ae543a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ba15ae54530"/>
        <function-ref name="receive" scoped="" ref="0x2ba15ae546c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ba15ae54850"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ba15ae549e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ba15ae54b70"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ae54d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ba15ae503f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ba15ae503f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15ae50770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15ae50900"/>
        <function-ref name="request" scoped="" ref="0x2ba15ae50a90"/>
        <function-ref name="granted" scoped="" ref="0x2ba15ae50c20"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ae50db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15ae574d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15ae574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15ae57850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15ae579e0"/>
        <function-ref name="request" scoped="" ref="0x2ba15ae57b70"/>
        <function-ref name="granted" scoped="" ref="0x2ba15ae57d00"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ae56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ba15ae78c20" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ae78c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15ae4c020"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15ae4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ba15af00dc0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15af00dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15aeff180"/>
        <function-ref name="configure" scoped="" ref="0x2ba15aeff310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ba15aefe890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2ba15aefe890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15aefec30"/>
        <function-ref name="receive" scoped="" ref="0x2ba15aefedc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2ba15aefc020" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15aefc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ba15aefc3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2ba15aefc690" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ba15aefc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15aefca10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15aefcba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15aefcd30"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15aefb020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15aefb1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15aefb340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15aefb4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15aefb660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15aefb7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15aefb980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15aefbb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15aefbca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15aefbe30"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15aefa120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15aefa2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15aefa440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15aefa5d0"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15aefa760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15aefa8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15aefaa80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15aefac10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15aefada0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15aef9020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15aef91b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15aef9340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15aef96d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15aef9860"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15aef99f0"/>
        <function-ref name="tx" scoped="" ref="0x2ba15aef9b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15aef9d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15aef8020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15aef81b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15aef8340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15aef84d0"/>
        <function-ref name="rx" scoped="" ref="0x2ba15aef8660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15aef87f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15aef8980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15aef8b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15aef8ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15aef8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ba15aeff6d0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ba15aeff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15aeffa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ba15aeffc00"/>
        <function-ref name="receive" scoped="" ref="0x2ba15aeffd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ba15aefe020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ba15aefe1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ba15aefe340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15aefe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15aef7c90" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15aef7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15aef6ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15aef44e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15aef4020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15aef49a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ba15aefd230" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ba15aefd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15aefd5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15aefd760"/>
        <function-ref name="request" scoped="" ref="0x2ba15aefd8f0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15aefda80"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15aefdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15af00020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15af00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15af003c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15af00550"/>
        <function-ref name="request" scoped="" ref="0x2ba15af006e0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15af00870"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15af00a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ba15aef7290" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15aef7290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15aef7630"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15aef77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15aef4dd0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15aef4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15aef3180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15aef3310"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15aef34a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15aef3630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15aef37c0"/>
        <function-ref name="get" scoped="" ref="0x2ba15aef3950"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15aef3ae0"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15aef21b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15aef3e00"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15aef3c70"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15aef2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ba15af143b0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15af143b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15af14730"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15af148c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ba15af1a080" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15af1a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15af1a400"/>
        <function-ref name="stop" scoped="" ref="0x2ba15af1a590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ba15af1a8b0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15af1a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15af1ac30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15af1adc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15af19020"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15af191b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15af19340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15af194d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15af19660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15af197f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15af19980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15af19b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15af19ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15af19e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15af17020"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15af172b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15af17440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15af175d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15af17760"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15af178f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15af17a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15af17c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15af17da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15af16020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15af161b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15af16340"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15af164d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15af16860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15af169f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15af16b80"/>
        <function-ref name="tx" scoped="" ref="0x2ba15af16d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15af15020"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15af151b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15af15340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15af154d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15af15660"/>
        <function-ref name="rx" scoped="" ref="0x2ba15af157f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15af15980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15af15b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15af15ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15af15e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15af14020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ba15af2c800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ba15af2c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af2cb80"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af2cd10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af2b020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af2b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af2b340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af2b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af2b660"/>
        <function-ref name="get" scoped="" ref="0x2ba15af2b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af2b980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af2bb10"/>
        <function-ref name="set" scoped="" ref="0x2ba15af2bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af2be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af2a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af2a2b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af2a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ba15af0cdc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ba15af0cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15af0b180"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15af0b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2ba15af2a800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2ba15af2a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af2ab80"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af2ad10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af29020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af29340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af29660"/>
        <function-ref name="get" scoped="" ref="0x2ba15af297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af29980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af29b10"/>
        <function-ref name="set" scoped="" ref="0x2ba15af29ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af29e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af28020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af282b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af28440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2ba15af28800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2ba15af28800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af28b80"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af28d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af27020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af27340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af27660"/>
        <function-ref name="get" scoped="" ref="0x2ba15af277f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af27980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af27b10"/>
        <function-ref name="set" scoped="" ref="0x2ba15af27ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af27e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af26020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af262b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af26440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2ba15af10020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ba15af10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15af103a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15af10530"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15af106c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15af10850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15af109e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15af10b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15af10d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15af0f020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15af0f1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15af0f340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15af0f4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15af0f660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15af0f7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15af0fa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15af0fc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15af0fda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15af0e020"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15af0e1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15af0e340"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15af0e4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15af0e660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15af0e7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15af0e980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15af0eb10"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15af0eca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15af0d220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15af0d3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15af0d540"/>
        <function-ref name="tx" scoped="" ref="0x2ba15af0d6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15af0d860"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15af0d9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15af0db80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15af0dd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15af0c020"/>
        <function-ref name="rx" scoped="" ref="0x2ba15af0c1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15af0c340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15af0c4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15af0c660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15af0c7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15af0c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ba15af13710" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15af13710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15af13a90"/>
        <function-ref name="stop" scoped="" ref="0x2ba15af13c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2ba15af09800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2ba15af09800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af09b80"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af09d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af2d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af2d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af2d340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af2d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af2d660"/>
        <function-ref name="get" scoped="" ref="0x2ba15af2d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af2d980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af2db10"/>
        <function-ref name="set" scoped="" ref="0x2ba15af2dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af2de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af2c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af2c2b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af2c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ba15af2f860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ba15af2f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af2fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af2fd70"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af0a020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af0a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af0a340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af0a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af0a660"/>
        <function-ref name="get" scoped="" ref="0x2ba15af0a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af0a980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af0ab10"/>
        <function-ref name="set" scoped="" ref="0x2ba15af0aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af0ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af09020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af092b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af09440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ba15afa4cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ba15afa4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afa30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afa3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afa33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afa3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afa36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afa3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afa3a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afa3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afa3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afa2020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afa21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afa2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afa24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afa2760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afa28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ba15afc2cc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ba15afc2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afc10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afc1230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afc13c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afc1550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afc16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afc1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afc1a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afc1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afc1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afc0020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afc01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afc0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afc04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afc0760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afc08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2ba15b0123d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2ba15b0123d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b012750"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0128e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b012a70"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b012c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b012d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b011020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0111b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b011340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0114d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b011660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0117f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b011980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b011b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b011da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b010020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2ba15b0213e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2ba15b0213e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b021760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0218f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b021a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b021c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b021da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b020020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0201b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b020340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0204d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b020660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0207f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b020980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b020b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b020da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b01f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2ba15b0103f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2ba15b0103f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b010770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b010900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b010a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b010c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b010db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b00f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b00f1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b00f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b00f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b00f660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b00f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b00f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b00fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b00fda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b00e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2ba15afbecc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2ba15afbecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afbc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afbc230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afbc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afbc550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afbc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afbc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afbca00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afbcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afbcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afbb020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afbb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afbb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afbb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afbb760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afbb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2ba15afdb020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2ba15afdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afdb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afdb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afdb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afdb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afdb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afdbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afdbd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afda020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afda1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afda340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afda4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afda660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afda7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afdaa80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afdac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2ba15affb020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2ba15affb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15affb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15affb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15affb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15affb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15affb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15affbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15affbd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15affa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15affa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15affa340"/>
        <function-ref name="set" scoped="" ref="0x2ba15affa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15affa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15affa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15affaa80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15affac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2ba15afea020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2ba15afea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afea530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afea6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afea850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afea9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afeab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afead00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afe9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afe91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afe9340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afe94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afe9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afe97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afe9a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afe9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2ba15b00a3f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2ba15b00a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b00a770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b00a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b00aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b00ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b00adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b009020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0091b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b009340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0094d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b009660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0097f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b009980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b009b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b009da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b008020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2ba15b02e3e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2ba15b02e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b02e760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b02e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b02ea80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b02ec10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b02eda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b02c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b02c1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b02c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b02c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b02c660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b02c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b02c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b02cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b02cda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b02b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2ba15b0193f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2ba15b0193f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b019770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b019900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b019a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b019c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b019db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b04c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b04c1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b04c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b04c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b04c660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b04c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b04c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b04cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b04cda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b04b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ba15af9ecc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ba15af9ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af9d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af9d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af9d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af9d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af9d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af9d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af9da00"/>
        <function-ref name="get" scoped="" ref="0x2ba15af9db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af9dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af9c020"/>
        <function-ref name="set" scoped="" ref="0x2ba15af9c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af9c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af9c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af9c760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af9c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2ba15b0083f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2ba15b0083f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b008770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b008900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b008a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b008c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b008db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b007020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0071b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b007340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0074d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b007660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0077f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b007980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b007b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b007da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b006020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ba15af9acc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ba15af9acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af990a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af99230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af993c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af99550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af996e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af99870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af99a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15af99b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af99d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afca020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afca760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2ba15afb7cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2ba15afb7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afb60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afb6230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afb63c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afb6550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afb66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afb6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afb6a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afb6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afb6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afb5020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afb51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afb5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afb54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afb5760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afb58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2ba15afd5020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2ba15afd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afd53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afd5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afd56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afd5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afd59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afd5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afd5d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afd4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afd41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afd4340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afd44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afd4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afd47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afd4a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afd4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2ba15aff4020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2ba15aff4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15aff43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15aff4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15aff46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15aff4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15aff49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15aff4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15aff4d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15aff3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15aff31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15aff3340"/>
        <function-ref name="set" scoped="" ref="0x2ba15aff34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15aff3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15aff37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15aff3a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15aff3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2ba15b018020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2ba15b018020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0183a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b018530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0186c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b018850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0189e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b018b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b018d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15b017020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0171b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b017340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0174d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b017660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0177f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b017a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b017c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ba15afa8cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ba15afa8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afa70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afa7230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afa73c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afa7550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afa76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afa7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afa7a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afa7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afa7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afa6020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afa61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afa6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afa64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afa6760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afa68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ba15afc6cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ba15afc6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afc5180"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afc5310"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afc54a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afc5630"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afc57c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afc5950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afc5ae0"/>
        <function-ref name="get" scoped="" ref="0x2ba15afc5c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afc5e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afc4020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afc41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afc4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afc44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afc4760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afc48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2ba15afe4cc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2ba15afe4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afe30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afe3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afe33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afe3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afe36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afe3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afe3a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afe3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afe3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afe2020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afe21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afe2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afe24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afe2760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afe28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2ba15b0143f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2ba15b0143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b014770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b014900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b014a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b014c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b014db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b013020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0131b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b013340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0134d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b013660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0137f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b013980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b013b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b013da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b012020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2ba15b0273e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2ba15b0273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b027760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0278f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b027a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b027c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b027da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b026020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0261b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b026340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0264d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b026660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0267f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b026980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b026b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b026da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2ba15b01b3e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2ba15b01b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b01b760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b01b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b01ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b01bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b01bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b01a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b01a1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b01a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b01a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b01a660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b01a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b01a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b01ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b01ada0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b019020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2ba15b0003f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2ba15b0003f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b000770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b000900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b000a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b000c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b000db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afff1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15afff340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afff4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afff660"/>
        <function-ref name="set" scoped="" ref="0x2ba15afff7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afff980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afffb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afffda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b032020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2ba15afe0cc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2ba15afe0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afdf410"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afdf5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afdf730"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afdf8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afdfa50"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afdfbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afdfd70"/>
        <function-ref name="get" scoped="" ref="0x2ba15afde020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afde1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afde340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afde4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afde660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afde7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afdea80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afdec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2ba15afcb020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2ba15afcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afcb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afcb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afcb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afcb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afcb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afcbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afcbd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15affe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15affe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15affe340"/>
        <function-ref name="set" scoped="" ref="0x2ba15affe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15affe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15affe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15affea80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15affec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2ba15afee020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2ba15afee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afee530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afee6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afee850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afee9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afeeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afeed00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afed340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afeda80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afedc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2ba15b0253e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2ba15b0253e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b025760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0258f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b025a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b025c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b025da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b024020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0241b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b024340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0244d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b024660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0247f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b024980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b024b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b024da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2ba15b0063e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2ba15b0063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b006760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0068f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b006a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b006c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b006da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b005020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0051b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b005340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0054d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b005660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0057f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b005980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b005b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b005da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b004020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ba15afa2cc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ba15afa2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afa10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afa1230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afa13c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afa1550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afa16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afa1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afa1a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afa1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afa1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afa0020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afa01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afa0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afa04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afa0760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afa08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ba15afc0cc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ba15afc0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afbf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afbf230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afbf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afbf550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afbf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afbf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afbfa00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afbfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afbfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afbe020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afbe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afbe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afbe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afbe760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afbe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2ba15aff2020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2ba15aff2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15aff23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15aff2530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15aff26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15aff2850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15aff29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15aff2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15aff2d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15aff1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15aff11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15aff1340"/>
        <function-ref name="set" scoped="" ref="0x2ba15aff14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15aff1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15aff17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15aff1a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15aff1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2ba15afbbcc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2ba15afbbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afba230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afba3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afba550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afba6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afba870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afbaa00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afbab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afbad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afb9020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afb91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afb9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afb94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afb9760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afb98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2ba15afd9020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2ba15afd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afd93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afd9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afd96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afd9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afd99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afd9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afd9d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afd8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afd81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afd8340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afd84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afd8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afd87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afd8a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afd8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2ba15aff9020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2ba15aff9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15aff93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15aff9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15aff96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15aff9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15aff99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15aff9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15aff9d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15aff8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15aff81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15aff8340"/>
        <function-ref name="set" scoped="" ref="0x2ba15aff84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15aff8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15aff87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15aff8a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15aff8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2ba15afe8020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2ba15afe8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afe83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afe8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afe86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afe8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afe89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afe8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afe8d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afe7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afe71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afe7340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afe74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afe7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afe77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afe7a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afe7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2ba15b0023f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2ba15b0023f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b002770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b002900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b002a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b002c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b002db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b001020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0011b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b001340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0014d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b001660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0017f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b001980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b001b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b001da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b000020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ba15afaee10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ba15afaee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afab1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afab350"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afab4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afab670"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afab800"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afab990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afabb20"/>
        <function-ref name="get" scoped="" ref="0x2ba15afabcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afabe40"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afaa020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afaa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afaa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afaa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afaa760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afaa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ba15afcacc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ba15afcacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afc90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afc9230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afc93c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afc9550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afc96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afc9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afc9a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afc9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afc9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afc8020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afc81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afc8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afc84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afc8760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afc88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2ba15afb5cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2ba15afb5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afb40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afb4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afb43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afb4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afb46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afb4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afb4a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afb4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afb4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afb3020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afb31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afb3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afb34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afb3760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afb38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2ba15afd3020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2ba15afd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afd33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afd3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afd36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afd3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afd39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afd3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afd3d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afd2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afd21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afd2340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afd24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afd2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afd27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afd2a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afd2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2ba15b0323f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2ba15b0323f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b032770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b032900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b032a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b032c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b032db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b031020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0311b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b031340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0314d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b031660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0317f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b031980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b031b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b031da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b030020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2ba15b02b3e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2ba15b02b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b02b760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b02b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b02ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b02bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b02bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b02a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b02a1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b02a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b02a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b02a660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b02a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b02a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b02ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b02ada0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b029020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2ba15b01f3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2ba15b01f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b01f760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b01f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b01fa80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b01fc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b01fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b01e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b01e1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b01e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b01e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b01e660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b01e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b01e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b01eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b01eda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b01d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2ba15afcf020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2ba15afcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afcf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afcf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afcf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afcf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afcf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afcfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afcfd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afce1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afce340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afce4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afce660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afce7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afcea80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afcec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2ba15b0303f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2ba15b0303f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b030770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b030900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b030a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b030c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b030db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b02f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b02f1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b02f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b02f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b02f660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b02f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b02f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b02fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b02fda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b02e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ba15afa6cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ba15afa6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afa50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afa5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afa53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afa5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afa56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afa5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afa5a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afa5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afa5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afa4020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afa41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afa4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afa44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afa4760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afa48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ba15afc4cc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ba15afc4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afc30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afc3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afc33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afc3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afc36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afc3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afc3a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afc3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afc3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afc2020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afc21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afc2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afc24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afc2760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afc28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2ba15afe2cc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2ba15afe2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afe10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afe1230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afe13c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afe1550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afe16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afe1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afe1a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afe1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afe1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afe0020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afe01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afe0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afe04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afe0760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afe08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2ba15b0043f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2ba15b0043f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b004770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b004900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b004a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b004c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b004db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b003020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0031b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b003340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0034d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b003660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0037f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b003980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b003b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b003da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b002020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2ba15b0233e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2ba15b0233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b023760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0238f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b023a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b023c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b023da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b022020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0221b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b022340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0224d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b022660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0227f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b022980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b022b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b022da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b021020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2ba15afdd020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2ba15afdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afdd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afdd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afdd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afdd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afdd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afddb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afddd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afdc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afdc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afdc340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afdc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afdc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afdc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afdca80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afdcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2ba15affd020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2ba15affd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15affd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15affd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15affd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15affd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15affd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15affdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15affdd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15affc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15affc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15affc340"/>
        <function-ref name="set" scoped="" ref="0x2ba15affc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15affc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15affc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15affca80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15affcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2ba15afec020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2ba15afec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afec3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afec530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afec6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afec850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afec9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afecb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afecd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afeb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afeb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afeb340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afeb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afeb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afeb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afeba80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ba15afa0cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ba15afa0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af9f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af9f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af9f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af9f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af9f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af9f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af9fa00"/>
        <function-ref name="get" scoped="" ref="0x2ba15af9fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af9fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af9e020"/>
        <function-ref name="set" scoped="" ref="0x2ba15af9e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af9e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af9e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af9e760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af9e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2ba15aff0020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2ba15aff0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15aff03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15aff0530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15aff06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15aff0850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15aff09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15aff0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15aff0d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afef1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afef340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afef4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afef660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afef7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afefa80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afefc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ba15af9ccc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ba15af9ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15af9b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15af9b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15af9b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15af9b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15af9b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15af9b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15af9ba00"/>
        <function-ref name="get" scoped="" ref="0x2ba15af9bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15af9bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15af9a020"/>
        <function-ref name="set" scoped="" ref="0x2ba15af9a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15af9a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15af9a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15af9a760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15af9a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2ba15afb9cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2ba15afb9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afb80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afb8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afb83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afb8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afb86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afb8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afb8a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afb8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afb8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afb7020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afb71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afb7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afb74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afb7760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afb78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2ba15afd7020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2ba15afd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afd73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afd7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afd76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afd7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afd79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afd7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afd7d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afd6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afd61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afd6340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afd64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afd6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afd67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afd6a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afd6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2ba15aff7020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2ba15aff7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15aff73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15aff7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15aff76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15aff7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15aff79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15aff7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15aff7d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15aff6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15aff61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15aff6340"/>
        <function-ref name="set" scoped="" ref="0x2ba15aff64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15aff6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15aff67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15aff6a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15aff6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2ba15afe6020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2ba15afe6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afe63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afe6530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afe66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afe6850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afe69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afe6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afe6d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afe5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afe51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afe5340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afe54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afe5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afe57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afe5a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afe5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ba15afaacc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ba15afaacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afa90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afa9230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afa93c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afa9550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afa96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afa9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afa9a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afa9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afa9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afa8020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afa81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afa8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afa84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afa8760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afa88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ba15afc8cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ba15afc8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afc70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afc7230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afc73c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afc7550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afc76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afc7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afc7a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afc7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afc7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afc6020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afc61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afc6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afc64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afc6760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afc68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2ba15afb3cc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2ba15afb3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afb20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afb2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afb23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afb2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afb26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afb2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afb2a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afb2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afb2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afe4020"/>
        <function-ref name="set" scoped="" ref="0x2ba15afe41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afe4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afe44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afe4760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afe48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2ba15afd1020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2ba15afd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afd13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afd1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afd16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afd1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afd19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afd1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afd1d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afd0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afd01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afd0340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afd04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afd0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afd07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afd0a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afd0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2ba15b00c3d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2ba15b00c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b00c750"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b00c8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b00ca70"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b00cc00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b00cd90"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b00b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b00b1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b00b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b00b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b00b660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b00b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b00b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b00bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b00bda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b00a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2ba15b0293e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2ba15b0293e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b029760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0298f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b029a80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b029c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b029da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b028020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0281b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b028340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0284d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b028660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0287f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b028980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b028b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b028da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b027020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2ba15b00e3f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2ba15b00e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b00e770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b00e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b00ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b00ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b00edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b00d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b00d1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b00d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b00d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b00d660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b00d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b00d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b00db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b00dda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b00c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2ba15afcd020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2ba15afcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15afcd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15afcd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15afcd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15afcd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15afcd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15afcdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15afcdd00"/>
        <function-ref name="get" scoped="" ref="0x2ba15afcc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15afcc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15afcc340"/>
        <function-ref name="set" scoped="" ref="0x2ba15afcc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15afcc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15afcc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15afcca80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15afccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2ba15b01d3e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2ba15b01d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b01d760"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b01d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b01da80"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b01dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b01dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b01c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b01c1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b01c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b01c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b01c660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b01c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b01c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b01cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b01cda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b01b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2ba15b04b3f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2ba15b04b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b04b770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b04b900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b04ba90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b04bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b04bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b04a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b04a1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b04a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b04a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b04a660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b04a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b04a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b04ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b04ada0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b049020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2ba15b016060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2ba15b016060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0167e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b016970"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b016b00"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b016c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b016e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b015020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0151b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b015340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0154d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b015660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0157f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b015980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b015b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b015da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b014020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0553f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0553f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b055770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b055900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b055a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b055c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b055db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b054020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0541b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b054340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0544d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b054660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0547f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b054980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b054b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b054da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b053020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b051e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b051e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0501c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b050350"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0504e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b050670"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b050800"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b050990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b050b20"/>
        <function-ref name="get" scoped="" ref="0x2ba15b050cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b050e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b04f020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b04f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b04f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b04f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b04f760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b04f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b082740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b082740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b082ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b082c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b082de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b081020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0811b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b081340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0814d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b081660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0817f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b081980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b081b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b081ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b081e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b080120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b07c100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b07c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b07c480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b07c610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b07c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b07c930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b07cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b07cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b07cde0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b07b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b07b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b07b340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b07b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b07b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b07b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b07ba80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b07bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b078d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b078d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0770e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b077270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b077400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b077590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b077720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0778b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b077a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b077bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b077d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b076020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0761b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b076340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0764d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b076760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0768f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b073740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b073740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b073ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b073c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b073de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b072020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b072340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0724d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b072660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b072980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b072b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b072ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b072e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b071120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b06e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b06e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b06e480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b06e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b06e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b06e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b06eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b06ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b06ede0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b06d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b06d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b06d340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b06d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b06d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b06d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b06da80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b06dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b06ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b06ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0690e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b069270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b069400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b069590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b069720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0698b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b069a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b069bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b069d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b068020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b068340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b068760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b09b740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b09b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b09bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b09bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b09bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b09a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b09a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b09a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b09a4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b09a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b09a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b09a980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b09ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b09aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b09ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b099120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b096100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b096100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b096480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b096610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0967a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b096930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b096ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b096c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b096de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b095020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b095340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b095660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b095a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b095c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b092d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b092d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0900e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b090270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b090400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b090590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b090720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b090a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b090bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b090d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b08f020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b08f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b08f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b08f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b08f760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b08f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b08c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b08c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b08cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b08cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b08cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b08b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b08b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b08b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b08b4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b08b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b08b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b08b980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b08bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b08bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b08be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b08a120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b08a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b087260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b087260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0875e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b087770"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b087900"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b087a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b087c20"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b087db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b086020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0861b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b086340"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0864d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b086660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0867f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b086980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b086c10"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b086da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b083d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b083d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0b80e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0b8270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0b8400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0b8590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0b8720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0b88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0b8a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0b8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0b8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0b7020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0b7760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0b4740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0b4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0b4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0b4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0b4de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0b31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0b3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0b34d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0b3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0b37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0b3980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0b3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0b3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0b3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0b2120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0af100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0af480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0af610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0af7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0af930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0afac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0afc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0afde0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0ae020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0ae1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0ae340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0ae4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0ae660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0ae7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0aea80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0aec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0abd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0abd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0aa0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0aa270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0aa400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0aa590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0aa720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0aa8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0aaa40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0aabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0aad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0a9020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0a9760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0a6740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0a6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0a6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0a6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0a6de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0a5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0a51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0a5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0a54d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0a5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0a57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0a5980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0a5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0a5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0a5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0a4120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0a1100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0a1480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0a1610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0a17a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0a1930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0a1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0a1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0a1de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b09f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b09f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b09f340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b09f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b09f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b09f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b09fa80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b09fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0d2d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0d2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0d10e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0d1270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0d1400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0d1590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0d1720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0d18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0d1a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0d1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0d1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0d0020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0d01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0d0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0d04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0d0760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0d08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0cd740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0cd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0cdac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0cdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0cdde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0cc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0cc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0cc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0cc4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0cc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0cc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0cc980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0ccb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0ccca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0cce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0cb120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0cb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0c8100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0c8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0c8480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0c8610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0c87a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0c8930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0c8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0c8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0c8de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0c7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0c71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0c7340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0c74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0c7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0c77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0c7a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0c7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0c4d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0c4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0c30e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0c3270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0c3400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0c3590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0c3720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0c38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0c3a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0c3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0c3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0c2020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0c21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0c2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0c24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0c2760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0c28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0bf740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0bf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0bfac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0bfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0bfde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0be020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0be1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0be340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0be4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0be660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0be7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0be980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0beb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0beca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0bee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0bd120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0bd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0ba3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0ba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0ba770"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0ba900"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0baa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0bac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0badb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0b9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0b91b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0b9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0b94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0b9660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0b97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0b9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0b9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0b9da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0ede00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0ede00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0ec1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0ec350"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0ec4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0ec670"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0ec800"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0ec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0ecb20"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0eccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0ece40"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0eb020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0eb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0eb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0eb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0eb760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0eb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0e7740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0e7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0e7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0e7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0e7de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0e61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0e6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0e64d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0e6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0e67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0e6980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0e6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0e6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0e6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0e5120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0e2100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0e2480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0e2610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0e27a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0e2930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0e2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0e2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0e2de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0e11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0e1340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0e14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0e1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0e17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0e1a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0e1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0ded10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0ded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0dd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0dd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0dd400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0dd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0dd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0dd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0dda40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0ddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0ddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0dc020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0dc760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0d9740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0d9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0d9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0d9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0d9de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0d8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0d81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0d8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0d84d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0d8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0d87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0d8980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0d8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0d8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0d8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0d7120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0d4100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0d4480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0d4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0d47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0d4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0d4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0d4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0d4de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b10b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b10b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b10b340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b10b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b10b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b10b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b10ba80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b10bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b108d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b108d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1070e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b107270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b107400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b107590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b107720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b1078b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b107a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b107bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b107d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b106020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b106340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b1064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b106760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b103740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b103740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b103ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b103c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b103de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b102020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b102340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1024d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b102660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b1027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b102980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b102b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b102ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b102e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b101120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0fe100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0fe480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0fe610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0fe7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0fe930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0feac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0fec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0fede0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0fc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0fc340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0fc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0fc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0fc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0fca80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0fcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0f9d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0f9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0f80e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0f8270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0f8400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0f8590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0f8720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0f88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0f8a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0f8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0f8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0f7020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0f71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0f7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0f74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0f7760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0f78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b0f4740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b0f4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b0f4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b0f4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b0f4de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b0f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b0f31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b0f3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b0f34d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b0f3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b0f37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b0f3980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b0f3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b0f3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b0f3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b0f2120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b0f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b127100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b127100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b127480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b127610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b1277a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b127930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b127ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b127c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b127de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b126020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b1261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b126340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b126660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b1267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b126a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b126c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b123d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b123d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1220e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b122270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b122400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b122590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b122720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b1228b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b122a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b122bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b122d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b121020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b121340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b1214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b121760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b11e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b11e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b11eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b11ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b11ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b11d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b11d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b11d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b11d4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b11d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b11d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b11d980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b11db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b11dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b11de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b11c120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b11c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b119100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b119100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b119480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b119610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b1197a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b119930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b119ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b119c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b119de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b118020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b1181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b118340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b118660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b1187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b118a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b118c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b115d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b115d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1140e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b114270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b114400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b114590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b114720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b1148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b114a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b114bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b114d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b113020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b113340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b1134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b113760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b110740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b110740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b110ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b110c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b110de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b10e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b10e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b10e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b10e4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b10e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b10e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b10e980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b10eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b10eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b10ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b10d120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b10d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b142100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b142100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b142480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b142610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b1427a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b142930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b142ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b142c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b142de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b141020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b1411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b141340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b141660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b1417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b141a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b141c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b13ed10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b13ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b13d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b13d270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b13d400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b13d590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b13d720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b13d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b13da40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b13dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b13dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b13c020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b13c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b13c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b13c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b13c760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b13c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b139740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b139740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b139ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b139c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b139de0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b138020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1381b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b138340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1384d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b138660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b1387f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b138980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b138b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b138ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b138e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b137120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b134100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b134100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b134480"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b134610"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b1347a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b134930"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b134ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b134c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b134de0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b133020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b1331b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b133340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1334d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b133660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b1337f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b133a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b133c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b130d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b130d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b12f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b12f270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b12f400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b12f590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b12f720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b12f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b12fa40"/>
        <function-ref name="get" scoped="" ref="0x2ba15b12fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b12fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b12e020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b12e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b12e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b12e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b12e760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b12e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ba15b12b740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ba15b12b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b12bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b12bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b12bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b12a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b12a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b12a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b12a4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b12a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b12a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b12a980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b12ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b12aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b12ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b129120"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ba15b1c59a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15b1c59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15b1c27e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b1c11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b1c2ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b1c1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2ba15b1c09d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ba15b1c09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15b1bd810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b1bb1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b1bdcd0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b1bb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ba15b1e8c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b1e8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b1e6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15b1e61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15b1e6340"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1e64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15b1e6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b1e67f0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15b1e6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b1e6b10"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b1e6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15b1e6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15b1e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ba15b1b9b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15b1b9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15b1b89b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b1e8360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b1b8e70"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b1e8820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ba15b1c4970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b1c4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b1c4cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b1c4e80"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b1e2030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b1e21c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b1e2350"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1e24e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b1e2670"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b1e2cb0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1e2800"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b1e2990"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b1e2b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ba15b1d6910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2ba15b1d6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1d6c90"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b1d6e20"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b1dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1dc1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1dc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1dc4d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1dc660"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b1e1c40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b1e1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b1de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ba15b1dcb10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2ba15b1dcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1db020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b1db1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b1db340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1db4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1db660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1db7f0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1db980"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1dbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ba15b1de2a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b1de2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b1de620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b1de7b0"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b1de940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b1dead0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b1dec60"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1dedf0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b1dd020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b1dd660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1dd1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b1dd340"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b1dd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ba15b1dbe30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2ba15b1dbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1d51e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b1d5370"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b1d5500"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1d5690"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1d5820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1d59b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1d5b40"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1d5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ba15b1f5360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2ba15b1f5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1f56e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b1f5870"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b1f5a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1f5b90"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1f5d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1f4020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1f41b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ba15b1f46a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2ba15b1f46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1f4a20"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b1f4bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b1f4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1f3020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1f31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1f3340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1f34d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1f3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ba15b1f2c40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b1f2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b1f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ba15b1f39c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2ba15b1f39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1f3d40"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b1f2020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b1f21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b1f2340"/>
        <function-ref name="get" scoped="" ref="0x2ba15b1f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b1f2660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b1f27f0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b1f2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b21a930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b21a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b21acb0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b21ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b219020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b2191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b219340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b2194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b219660"/>
        <function-ref name="get" scoped="" ref="0x2ba15b2197f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b219980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b219b10"/>
        <function-ref name="set" scoped="" ref="0x2ba15b219ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b219e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b218020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b2182b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b218440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b1ef710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b1ef710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b1efa90"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b1efc20"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b1efdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b21a020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b21a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b21a340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b21a4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b21a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b215480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b215480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b215800"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b215990"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b215b20"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b215cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b215e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b214020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b2141b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b214340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b2144d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b214660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b2147f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b214980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b214b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b214da0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b213020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b2161d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b2161d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b216550"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b2166e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b216870"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b216a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15b216b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b216d20"/>
        <function-ref name="set" scoped="" ref="0x2ba15b215020"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b2151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b210020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b210020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b2103a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b210530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b2106c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b210850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b2109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b210b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b210d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15b20f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b20f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b20f340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b20f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b20f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b20f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b20fa80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b20fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b212d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b212d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b211180"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b211310"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b2114a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b211630"/>
        <function-ref name="get" scoped="" ref="0x2ba15b2117c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b211950"/>
        <function-ref name="set" scoped="" ref="0x2ba15b211ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b211c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15c657c70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15c657c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15c656020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15c6561b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15c651d70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15c651d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15c650180"/>
        <function-ref name="configure" scoped="" ref="0x2ba15c650310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ba15c6515d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15c6515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15c651950"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15c651ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15c657020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15c657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15c6573a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15c657530"/>
        <function-ref name="request" scoped="" ref="0x2ba15c6576c0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15c657850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15c6579e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ba15c656be0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15c656be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15c655020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15c6551b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15c655340"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15c6554d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15c655660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15c6557f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15c655980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15c655b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15c655ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15c655e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15c654020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15c6541b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15c654340"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15c6545d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15c654760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15c6548f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15c654a80"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15c654c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15c654da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15c653020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15c6531b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15c653340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15c6534d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15c653660"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15c6537f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15c653b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15c653d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15c652020"/>
        <function-ref name="tx" scoped="" ref="0x2ba15c6521b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15c652340"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15c6524d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15c652660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15c6527f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15c652980"/>
        <function-ref name="rx" scoped="" ref="0x2ba15c652b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15c652ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15c652e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15c651020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15c6511b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15c651340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15c656440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15c656440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15c6567c0"/>
        <function-ref name="userId" scoped="" ref="0x2ba15c656950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15b2262c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b2262c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15b226640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15b2267d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15b2608a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b2608a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15b260c20"/>
        <function-ref name="configure" scoped="" ref="0x2ba15b260db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ba15b2281d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ba15b2281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15b228550"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15b2286e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b227020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b227020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b2273a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b227530"/>
        <function-ref name="request" scoped="" ref="0x2ba15b2276c0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b227850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b2279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15b226ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b226ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15b226e50"/>
        <function-ref name="userId" scoped="" ref="0x2ba15b260020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ba15b24aa90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b24aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15b24ae10"/>
        <function-ref name="userId" scoped="" ref="0x2ba15b249020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ba15b25eb60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ba15b25eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15b25d020"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15b25d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2ba15b24a480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ba15b24a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15b24a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ba15b25d5b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15b25d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15b25d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2ba15b25dc20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2ba15b25dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15b24a020"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15b24a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15b2c6020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15b2c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15b2c63c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15b2c6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15b2c5cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b2c5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15b2c40a0"/>
        <function-ref name="configure" scoped="" ref="0x2ba15b2c4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ba15b2c67a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15b2c67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b2c6b20"/>
        <function-ref name="requested" scoped="" ref="0x2ba15b2c6cb0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b2c6e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b2c5020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15b2c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b2c7210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b2c7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b2c75b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b2c7740"/>
        <function-ref name="request" scoped="" ref="0x2ba15b2c78d0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b2c7a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b2c7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15b2c5400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b2c5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15b2c5780"/>
        <function-ref name="userId" scoped="" ref="0x2ba15b2c5910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15c9b5ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15c9b5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c9b40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ba15c9b4330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ba15c9b4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ba15c9b46b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ba15c9b4840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ba15c9b49d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ba15c9b4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15ca603a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15ca603a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15ca60740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15ca608d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15ca5d210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15ca5d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15ca5d5b0"/>
        <function-ref name="configure" scoped="" ref="0x2ba15ca5d740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ba15ca5d9d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ba15ca5d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ba15ca5dd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ba15ca5c020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ba15ca5c1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ba15ca5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ba15ca60b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15ca60b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15ca5e020"/>
        <function-ref name="requested" scoped="" ref="0x2ba15ca5e1b0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15ca5e340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ca5e4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15ca5e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15ca5c590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15ca5c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15ca5c910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15ca5caa0"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15ca5cc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15ca5cdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15ca5b020"/>
        <function-ref name="get" scoped="" ref="0x2ba15ca5b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15ca5b340"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15ca5b980"/>
        <function-ref name="set" scoped="" ref="0x2ba15ca5b660"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15ca5b4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15ca5b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15c9b2540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15c9b2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15c9b28e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15c9b2a70"/>
        <function-ref name="request" scoped="" ref="0x2ba15c9b2c00"/>
        <function-ref name="granted" scoped="" ref="0x2ba15c9b2d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ca60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15ca5e8b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15ca5e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15ca5ec30"/>
        <function-ref name="userId" scoped="" ref="0x2ba15ca5edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ba15ca5bc50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2ba15ca5bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15ca5a020"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15ca5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ba15b2e9400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ba15b2e9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ba15b2e9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ba15b2e99d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15b2e99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b2e9d50"/>
        <function-ref name="requested" scoped="" ref="0x2ba15b2e8020"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b2e81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b2e8340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15b2e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2ba15b2c0b20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15b2c0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15b2e9020"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b2e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ba15b2e8720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15b2e8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15b2e8aa0"/>
        <function-ref name="userId" scoped="" ref="0x2ba15b2e8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2ba15ca2bb00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2ba15ca2bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2ba15ca2be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2ba15ca2a0f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15ca2a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15ca2a470"/>
        <function-ref name="requested" scoped="" ref="0x2ba15ca2a600"/>
        <function-ref name="granted" scoped="" ref="0x2ba15ca2a790"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ca2a920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15ca2aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2ba15ca2b3a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ba15ca2b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15ca2b720"/>
        <function-ref name="stop" scoped="" ref="0x2ba15ca2b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ba15ca2ad00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15ca2ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15ca280a0"/>
        <function-ref name="userId" scoped="" ref="0x2ba15ca28230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2ba15b309080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2ba15b309080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ba15b309400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ba15b3096f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b3096f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b309a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b309c00"/>
        <function-ref name="request" scoped="" ref="0x2ba15b309d90"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b308020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b3081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15b30c7a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15b30c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15b30cb20"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b30ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2ba15b33c430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2ba15b33c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ba15b33c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b33b780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b33b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b33bb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2ba15b33bde0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2ba15b33bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ba15b338180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ba15b331020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ba15b331020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ba15b3313a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ba15b331740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2ba15b331740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b331ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b331c50"/>
        <function-ref name="start" scoped="" ref="0x2ba15b331de0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b330020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b329320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b329320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b3296a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b329830"/>
        <function-ref name="start" scoped="" ref="0x2ba15b3299c0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b329b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15b328370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15b328370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b3286f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b328880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b328a10"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b328ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b328d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15b326020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15b326020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b3263a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15b326530"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b3266c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b326850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15b3269e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15b327530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15b327530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b3278b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b35b490" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b35b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b35b810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b35b9a0"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b35bb30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b35bcc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b35be50"/>
        <function-ref name="get" scoped="" ref="0x2ba15b35a020"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b35a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b35a7f0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b35a340"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b35a4d0"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b35a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ba15b3559f0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b3559f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15b355d70"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15b35b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15b35b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15b326c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15b326c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15b3250a0"/>
        <function-ref name="source" scoped="" ref="0x2ba15b325230"/>
        <function-ref name="address" scoped="" ref="0x2ba15b3253c0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15b325550"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15b3256e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15b325870"/>
        <function-ref name="type" scoped="" ref="0x2ba15b325a00"/>
        <function-ref name="setType" scoped="" ref="0x2ba15b325b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15b325d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15b35c020"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15b35c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15b3b7d90" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15b3b7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b3b6180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b3b6310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b3b64a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b3b6630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b3b67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15b3b6a50" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15b3b6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b3b6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15b351b40" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15b351b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b3ba020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b3ba1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b3ba340"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b3ba4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b3ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15b3b8720" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15b3b8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b3b8aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15b3b8c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b3b8dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b3b7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15b3b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15b3ba9e0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15b3ba9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b3bad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ba15b3b7400" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b3b7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15b3b7780"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15b3b7910"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15b3b7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15b3b9020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15b3b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15b3b93a0"/>
        <function-ref name="source" scoped="" ref="0x2ba15b3b9530"/>
        <function-ref name="address" scoped="" ref="0x2ba15b3b96c0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15b3b9850"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15b3b99e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15b3b9b70"/>
        <function-ref name="type" scoped="" ref="0x2ba15b3b9d00"/>
        <function-ref name="setType" scoped="" ref="0x2ba15b3b8020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15b3b81b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15b3b8340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15b3b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b3b14e0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b3b14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b3b1860"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b3b19f0"/>
        <function-ref name="start" scoped="" ref="0x2ba15b3b1b80"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b3b1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15b3ae020" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15b3ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ba15aae1d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b3ae3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b3ae530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b3ae6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b3ae850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b3ae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b3b4e60" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b3b4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b3b1210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15b3b04c0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15b3b04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ba15aae1d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b3b0840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b3ac940" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b3ac940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b3accc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b3ace50"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b3a8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b3a81b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b3a8340"/>
        <function-ref name="get" scoped="" ref="0x2ba15b3a84d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b3a8660"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b3a8ca0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b3a87f0"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b3a8980"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b3a8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2ba15b3ac020" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ba15b3ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ba15aae1d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ba15b3ac3a0"/>
        <function-ref name="offset" scoped="" ref="0x2ba15b3ac530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ba15b3ac6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b3e12f0" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b3e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b3e1670"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b3e1800"/>
        <function-ref name="start" scoped="" ref="0x2ba15b3e1990"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b3e1b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2ba15b447e40" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2ba15b447e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b4461e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b446370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ba15b3d0060" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2ba15b3d0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15b3d03e0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b3d0570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2ba15b3f7d10" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2ba15b3f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b3f50e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b3f5270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b3a1c30" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b3a1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b3e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2ba15b3cdc50" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2ba15b3cdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2ba15b3cf020"/>
        <function-ref name="flush" scoped="" ref="0x2ba15b3cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2ba15b406400" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2ba15b406400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b406780"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b406910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2ba15b3d18e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ba15b3d18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ba15b3d1c60"/>
        <function-ref name="resetSend" scoped="" ref="0x2ba15b3d1df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ba15b3de020"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ba15b3de1b0"/>
        <function-ref name="putData" scoped="" ref="0x2ba15b3de340"/>
        <function-ref name="putDone" scoped="" ref="0x2ba15b3de4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ba15b3de660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b3de8e0" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b3de8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b3dec60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b3dedf0"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b3d6020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b3d61b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b3d6340"/>
        <function-ref name="get" scoped="" ref="0x2ba15b3d64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b3d6660"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b3d6ca0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b3d67f0"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b3d6980"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b3d6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2ba15b4420c0" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ba15b4420c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b442440"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b4425d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2ba15b3da130" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2ba15b3da130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ba15b3da4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x2ba15b3da640"/>
        <function-ref name="startSend" scoped="" ref="0x2ba15b3da7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ba15b3da960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2ba15b3d75c0" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ba15b3d75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ba15b3d7940"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ba15b3d7ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x2ba15b3d7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2ba15b4d4c50" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2ba15b4d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b4d3020"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b4d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15b4d9830" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15b4d9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ba15aae1d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b4d9bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b4d9d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b4d8020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b4d81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b4d8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2ba15b4d3480" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2ba15b4d3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b4d3800"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b4d3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15b4d9110" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15b4d9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ba15aae1d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b4d94b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2ba15b4d8760" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2ba15b4d8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ba15aae1d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ba15b4d8b00"/>
        <function-ref name="offset" scoped="" ref="0x2ba15b4d8c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ba15b4d8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b4d6590" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b4d6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b4d6910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b4d6aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b4d6c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b4d6dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b4d4020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b4d41b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b4d4340"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b4d4980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b4d4660"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b4d44d0"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b4d47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2ba15b4d79d0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2ba15b4d79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ba15b4d7d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2ba15b4d6020"/>
        <function-ref name="startSend" scoped="" ref="0x2ba15b4d61b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ba15b4d6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2ba15b4d70e0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ba15b4d70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ba15b4d7460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ba15b4d75f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2ba15b4d7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2ba15b516ca0" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2ba15b516ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b5150a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ba15b515230"/>
        <function-ref name="receive" scoped="" ref="0x2ba15b5153c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ba15b515550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ba15b5156e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ba15b515870"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b515a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2ba15b519b70" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ba15b519b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ba15b516020"/>
        <function-ref name="resetSend" scoped="" ref="0x2ba15b5161b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ba15b516340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ba15b5164d0"/>
        <function-ref name="putData" scoped="" ref="0x2ba15b516660"/>
        <function-ref name="putDone" scoped="" ref="0x2ba15b5167f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ba15b516980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b515c80" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b515c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b5140a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b514230"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b5143c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b514550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b5146e0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b514870"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b514a00"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b5131b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b514b90"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b514d20"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b513020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2ba15b53c6c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2ba15b53c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ba15b53ca40"/>
        <function-ref name="offset" scoped="" ref="0x2ba15b53cbd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ba15b53cd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b529020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b529020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b5293a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b529530"/>
        <function-ref name="start" scoped="" ref="0x2ba15b5296c0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b529850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15b528050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15b528050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b5283d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b528560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b5286f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b528880"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b528a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ba15b527df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ba15b527df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b5261c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15b526450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15b526450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b5267d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15b526960"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b526af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b526c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15b526e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ba15b5619e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15b5619e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15b51b020"/>
        <function-ref name="clear" scoped="" ref="0x2ba15b51b750"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15b521890"/>
        <function-ref name="set" scoped="" ref="0x2ba15b51be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ba15b5558a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b5558a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ba15b555c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ba15b555db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ba15b55b020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ba15b55b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15b527210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15b527210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b527590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ba15b524800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b524800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15b524b80"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15b524d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15b523020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15b525120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15b525120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15b5254a0"/>
        <function-ref name="source" scoped="" ref="0x2ba15b525630"/>
        <function-ref name="address" scoped="" ref="0x2ba15b5257c0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15b525950"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15b525ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15b525c70"/>
        <function-ref name="type" scoped="" ref="0x2ba15b525e00"/>
        <function-ref name="setType" scoped="" ref="0x2ba15b524020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15b5241b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15b524340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15b5244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ba15b560af0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15b560af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15b55d0d0"/>
        <function-ref name="clear" scoped="" ref="0x2ba15b55d800"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15b55f970"/>
        <function-ref name="set" scoped="" ref="0x2ba15b55c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b549680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b549680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b549a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b549b90"/>
        <function-ref name="start" scoped="" ref="0x2ba15b549d20"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b548020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ba15b578d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15b578d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15b5800e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15b580270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15b580400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15b580590"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15b580720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15b5808b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ba15b575500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2ba15b575500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ba15b575980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15b543760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15b543760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b543ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15b543c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b543e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b542020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15b5421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15b5487f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15b5487f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b548b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b548d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b547020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b5471b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b547340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ba15b545880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ba15b545880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b545c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ba15b583970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15b583970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15b583cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15b583e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15b541030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15b5411c0"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15b541350"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15b5414e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ba15b580bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b580bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ba15b57e020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ba15b57e1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ba15b57e340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ba15b57e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15b547b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15b547b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b545020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ba15b541810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b541810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15b541b90"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15b541d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15b540020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ba15b57e790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ba15b57e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ba15b57eb10"/>
        <function-ref name="setRetries" scoped="" ref="0x2ba15b57eca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2ba15b57ee30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ba15b576020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ba15b5761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15b544020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15b544020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15b5443a0"/>
        <function-ref name="source" scoped="" ref="0x2ba15b544530"/>
        <function-ref name="address" scoped="" ref="0x2ba15b5446c0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15b544850"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15b5449e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15b544b70"/>
        <function-ref name="type" scoped="" ref="0x2ba15b544d00"/>
        <function-ref name="setType" scoped="" ref="0x2ba15b543020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15b5431b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15b543340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15b5434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ba15b57fa80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15b57fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ba15b57fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b56e340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b56e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b56e6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b56e850"/>
        <function-ref name="start" scoped="" ref="0x2ba15b56e9e0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b56eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ba15b567080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15b567080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ba15b567400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ba15b5662e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ba15b5662e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ba15b566660"/>
        <function-ref name="setRetries" scoped="" ref="0x2ba15b5667f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2ba15b566980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ba15b566b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ba15b566ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ba15b569740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15b569740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15b569ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15b569c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15b569de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15b568020"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15b5681b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15b568340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ba15b56a350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ba15b56a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b56a6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b56a860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b56a9f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b56ab80"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b56ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ba15b567700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15b567700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ba15b567a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ba15b567c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ba15b567da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ba15b566020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ba15b56ce70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2ba15b56ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b56b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ba15b568670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15b568670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15b5689f0"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15b568b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15b568d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b56d430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b56d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b56d7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b56d940"/>
        <function-ref name="request" scoped="" ref="0x2ba15b56dad0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b56dc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b56ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ba15b56c160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2ba15b56c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b56c4e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b56c670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b56c800"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b56c990"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b56cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ba15b56b560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ba15b56b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b56b8e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15b56ba70"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b56bc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b56bd90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15b56a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ba15b5690f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15b5690f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b569470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b5659f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b5659f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b565d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b5ac020"/>
        <function-ref name="start" scoped="" ref="0x2ba15b5ac1b0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b5ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ba15b5aa990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15b5aa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15b5aad10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15b5a9020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15b5a91b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15b5a9340"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15b5a94d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15b5a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15b5ac600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15b5ac600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b5ac980"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b5acb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b5acca0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b5ace30"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b5aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15b5aa300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15b5aa300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15b5aa680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15b5a6690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15b5a6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15b5a6a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15b5a6ba0"/>
        <function-ref name="start" scoped="" ref="0x2ba15b5a6d30"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b5a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ba15b5a4020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15b5a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15b5a43a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15b5a4530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15b5a46c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15b5a4850"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15b5a49e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15b5a4b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ba15b59a060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2ba15b59a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15b59a3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15b59a570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15b59a700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15b59a890"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15b59aa20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15b59abb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ba15b591e20" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15b591e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15b5901c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15b590350"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15b5904e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15b590670"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15b590800"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15b590990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2ba15b5932a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ba15b5932a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b593620"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b5937b0"/>
        <function-ref name="modify" scoped="" ref="0x2ba15b593940"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b593ad0"/>
        <function-ref name="resend" scoped="" ref="0x2ba15b593c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15b5a52e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15b5a52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b5a5660"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b5a57f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15b5a5980"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15b5a5b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b5a5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ba15b59ae80" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ba15b59ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ba15b599220"/>
        <function-ref name="rand32" scoped="" ref="0x2ba15b5993b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ba15b5a26f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2ba15b5a26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15b5a2a70"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b5a2c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15b589430" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15b589430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15b5897b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15b589940"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15b589ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2ba15b59b3f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ba15b59b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ba15b59b770"/>
        <function-ref name="rfOff" scoped="" ref="0x2ba15b59b900"/>
        <function-ref name="rxOn" scoped="" ref="0x2ba15b59ba90"/>
        <function-ref name="startVReg" scoped="" ref="0x2ba15b59bc20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ba15b59bdb0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ba15b5a2020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ba15b5a21b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ba15b5a2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b599670" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b599670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b5999f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b599b80"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b599d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b591020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b5911b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b591340"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b5914d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b591b10"/>
        <function-ref name="set" scoped="" ref="0x2ba15b591660"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b5917f0"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b591980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ba15b5a4e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b5a4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b5a3210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b5a33a0"/>
        <function-ref name="request" scoped="" ref="0x2ba15b5a3530"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b5a36c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b5a3850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2ba15b5cebc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2ba15b5cebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15b58e0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15b58e230"/>
        <function-ref name="isState" scoped="" ref="0x2ba15b58e3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15b58e550"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15b58e6e0"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15b58e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2ba15b5ca5d0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2ba15b5ca5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b5ca950"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b5caae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2ba15b5cb660" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2ba15b5cb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b5cb9e0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b5cbb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2ba15b5cc730" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2ba15b5cc730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b5ccab0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b5ccc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ba15b609550" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ba15b609550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ba15b6098d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ba15b609a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ba15b609bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2ba15b609d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ba15b616020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ba15b6161b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ba15b616340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ba15b6164d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ba15b616660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ba15b6167f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ba15b616980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ba15b616b10"/>
        <function-ref name="sync" scoped="" ref="0x2ba15b616ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ba15b615020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ba15b6151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ba15b604890" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2ba15b604890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b6074c0"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15b607940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ba15b6154b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ba15b6154b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ba15b615830"/>
        <function-ref name="rfOff" scoped="" ref="0x2ba15b6159c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2ba15b615b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2ba15b615ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ba15b615e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ba15b608030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ba15b6081c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ba15b608350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b617020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b617020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b6173a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b617530"/>
        <function-ref name="request" scoped="" ref="0x2ba15b6176c0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b617850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b6179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ba15b5ff1a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ba15b5ff1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ba15b5ff520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ba15b5ff6b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ba15b5ff840"/>
        <function-ref name="syncDone" scoped="" ref="0x2ba15b5ff9d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ba15b5ffb60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ba15b5ffcf0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ba15b5ffe80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ba15b5fe030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ba15b5fe1c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ba15b5fe350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ba15b5fe4e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ba15b5fe670"/>
        <function-ref name="sync" scoped="" ref="0x2ba15b5fe800"/>
        <function-ref name="getChannel" scoped="" ref="0x2ba15b5fea90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ba15b5fec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2ba15b6221e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15b6221e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b622560"/>
        <function-ref name="write" scoped="" ref="0x2ba15b6226f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2ba15b643970" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ba15b643970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ba15b643cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2ba15b63c790" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2ba15b63c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15b63a020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b642020"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15b6429a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15b6424e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15b63a4e0"/>
        <function-ref name="start" scoped="" ref="0x2ba15b5f85d0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b5f8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2ba15b626020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15b626020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b6263a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15b626530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2ba15b639ce0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2ba15b639ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b6380a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b638230"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b6383c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b638550"/>
        <function-ref name="get" scoped="" ref="0x2ba15b6386e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b638870"/>
        <function-ref name="set" scoped="" ref="0x2ba15b638a00"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b638b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ba15b5fc500" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2ba15b5fc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b5fb130"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15b5fb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2ba15b65c2f0" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2ba15b65c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b65c670"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b65c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2ba15b622a80" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ba15b622a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b622e00"/>
        <function-ref name="write" scoped="" ref="0x2ba15b621020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ba15b6213c0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ba15b6213c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b621740"/>
        <function-ref name="write" scoped="" ref="0x2ba15b6218d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2ba15b624cd0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ba15b624cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b62c0a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15b62c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ba15b62d390" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ba15b62d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ba15b62d710"/>
        <function-ref name="changed" scoped="" ref="0x2ba15b62d8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ba15b62da30"/>
        <function-ref name="setAddress" scoped="" ref="0x2ba15b62dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ba15b63a9d0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ba15b63a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b63ad50"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b639020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b6391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b639340"/>
        <function-ref name="get" scoped="" ref="0x2ba15b6394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b639660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b6397f0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b639980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2ba15b620ae0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15b620ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15b61f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2ba15b637020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2ba15b637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b6373a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b637530"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b6376c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b637850"/>
        <function-ref name="get" scoped="" ref="0x2ba15b6379e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b637b70"/>
        <function-ref name="set" scoped="" ref="0x2ba15b637d00"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b606d60" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b606d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b600180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ba15b6268f0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15b6268f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b626c70"/>
        <function-ref name="write" scoped="" ref="0x2ba15b626e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2ba15b61f440" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ba15b61f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15b61f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ba15b61fb60" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ba15b61fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b669020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b6691b0"/>
        <function-ref name="request" scoped="" ref="0x2ba15b669340"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b6694d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b669660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2ba15b668880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2ba15b668880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b668c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b668d90"/>
        <function-ref name="request" scoped="" ref="0x2ba15b667020"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b6671b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b667340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ba15b5fd020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ba15b5fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ba15b5fd3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2ba15b5fd530"/>
        <function-ref name="rxOn" scoped="" ref="0x2ba15b5fd6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2ba15b5fd850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ba15b5fd9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ba15b5fdb70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ba15b5fdd00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ba15b5fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2ba15b62c5d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ba15b62c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b62c950"/>
        <function-ref name="write" scoped="" ref="0x2ba15b62cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2ba15b624420" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ba15b624420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b6247a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15b624930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2ba15b61ebb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ba15b61ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15b620020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b667600" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b667600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b667980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b667b10"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b667ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b667e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b666020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b6661b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b666340"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b666980"/>
        <function-ref name="set" scoped="" ref="0x2ba15b6664d0"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b666660"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b6667f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2ba15b65e410" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2ba15b65e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b65e790"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b65e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b600470" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b600470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b6007f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b600980"/>
        <function-ref name="request" scoped="" ref="0x2ba15b600b10"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b600ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b600e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2ba15b627e20" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ba15b627e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b6301c0"/>
        <function-ref name="write" scoped="" ref="0x2ba15b630350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2ba15b6274a0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ba15b6274a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b627920"/>
        <function-ref name="write" scoped="" ref="0x2ba15b627ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2ba15b632c00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2ba15b632c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15b635020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b6351b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ba15b635340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ba15b6354d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2ba15b669a10" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2ba15b669a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b669d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b668020"/>
        <function-ref name="request" scoped="" ref="0x2ba15b6681b0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b668340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b6684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2ba15b6203b0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ba15b6203b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15b620730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b6cf7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b6cf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b6cfb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ba15b6cc220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ba15b6cc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15b6cab30"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b6cba60"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15b6ca4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15b6ca020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15b6c8020"/>
        <function-ref name="start" scoped="" ref="0x2ba15b6cb090"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b6cb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b6c7a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b6c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b6c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ba15b6c62e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ba15b6c62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15b7d2b30"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b7d3ae0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15b7d24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15b7d2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15b7d0020"/>
        <function-ref name="start" scoped="" ref="0x2ba15b7d3110"/>
        <function-ref name="stop" scoped="" ref="0x2ba15b7d3620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cace180" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cace180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15caccb30"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cacd9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cacc4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cacc020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cacb020"/>
        <function-ref name="start" scoped="" ref="0x2ba15cacd020"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cacd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15cacf8e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15cacf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15cacfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cac72a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cac72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cac4b30"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cac6aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cac44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cac4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cac3020"/>
        <function-ref name="start" scoped="" ref="0x2ba15cac60d0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cac65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15cac8a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15cac8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15cac8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ba15cb4dc10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cb4dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15cb4c020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15cb4c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15cb4c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15cb4c4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cb4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ba15cab11b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cab11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cab1530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15cab16c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cab1850"/>
        <function-ref name="get" scoped="" ref="0x2ba15cab19e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cab1b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cab1d00"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15cb4e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cb4e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cb4e340"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15cb4e4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15cb4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ba15cb4e8f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cb4e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15cb4ec70"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15cb4ee00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cb4d020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15cb4d1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15cb4d340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cb4d4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15cb4d660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15cb4d7f0"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15cb4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ba15b6f3ba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15b6f3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15b6f2020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15b6f21b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15b6f2340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15b6f24d0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b6f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ba15b6f74d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15b6f74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b6f7850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15b6f79e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15b6f7b70"/>
        <function-ref name="get" scoped="" ref="0x2ba15b6f7d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15b6f6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b6f61b0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15b6f6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b6f64d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b6f6660"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15b6f67f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15b6f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ba15b6f4280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b6f4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15b6f4600"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15b6f4790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15b6f4920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15b6f4ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15b6f4c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15b6f4dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15b6f3020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15b6f31b0"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15b6f3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ba15cb43a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cb43a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15cb43e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15cb42020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15cb421b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15cb42340"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cb424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ba15cb46020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cb46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cb463a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15cb46530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cb466c0"/>
        <function-ref name="get" scoped="" ref="0x2ba15cb46850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cb469e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cb46b70"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15cb46d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cb44020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cb441b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15cb44340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15cb444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cb4ada0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cb4ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cb47670"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cb48610"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cb47020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cb48ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cb47b30"/>
        <function-ref name="start" scoped="" ref="0x2ba15cb49bf0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cb48150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15cb4a510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15cb4a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15cb4a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ba15cb44760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cb44760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15cb44ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15cb44c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cb44e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15cb43020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15cb431b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cb43340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15cb434d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15cb43660"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15cb437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ba15b746020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15b746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15b746e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b745800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b745340"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b745cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ba15b774950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2ba15b774950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15b773780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b772150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b773c40"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b772610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ba15b7405f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15b7405f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15b776430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b776db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b7768f0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15b7742a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cac15f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cac15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cabfe50"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cac0e00"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cabf800"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cabf340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cabd340"/>
        <function-ref name="start" scoped="" ref="0x2ba15cac0430"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cac0940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ba15cabbd20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ba15cabbd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cab8670"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cab9550"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cab8020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cab9a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cab8b30"/>
        <function-ref name="start" scoped="" ref="0x2ba15cabab60"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cab9090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15cabd9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15cabd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15cabc7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cabb1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cabcca0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cabb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2ba15b7cb6a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2ba15b7cb6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7cba20"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7cbbb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7cbd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7ca020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7ca340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7ca4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2ba15b7ca9d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2ba15b7ca9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7cad50"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7c9020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7c9340"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7c9660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7c97f0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7c9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2ba15b7c9ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2ba15b7c9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7c8230"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7c83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7c8550"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7c86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7c8870"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7c8a00"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7c8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2ba15b7cc370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ba15b7cc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7cc6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7cc880"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7cca10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7ccba0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7ccd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7cb020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2ba15b7c6380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2ba15b7c6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7c6700"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7c6890"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7c6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7c6bb0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7c6d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7c5020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7c51b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2ba15b7cd0e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2ba15b7cd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7cd460"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7cd5f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7cd780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7cd910"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7cdaa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7cdc30"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7cddc0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2ba15b7c7020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2ba15b7c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7c7530"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7c76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7c7850"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7c79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7c7b70"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7c7d00"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b7c3930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7c3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7c3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7c3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b7c2020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7c2340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b7c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7c2660"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7c27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b7c2980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b7c2b10"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7c2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b7c2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b7c1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b7c12b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7c1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b7c4710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7c4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7c4a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7c4c20"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7c4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7c3020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7c3340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7c34d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7c3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b7be480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7be480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7be800"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7be990"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b7beb20"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7becb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7bee40"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b7bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7bc1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7bc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b7bc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b7bc660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7bc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b7bc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b7bcb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b7bcda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b7bf1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7bf1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7bf530"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7bf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7bf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7bf9e0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7bfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7bfd00"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7be020"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b7b8020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7b83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7b8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b7b86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7b8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7b89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b7b8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7b8d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b7b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b7b7340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b7b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b7b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b7b7a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b7bad70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7bad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7b9180"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7b9310"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7b94a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7b9630"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7b97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7b9950"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7b9ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7b9c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b7b4de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7b4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7b3180"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7b3310"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b7b34a0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7b3630"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7b37c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b7b3950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7b3ae0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7b3c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b7b3e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b7b2020"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b7b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b7b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b7b2760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b7b5b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7b5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7b4020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7b41b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7b4340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7b44d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7b4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7b47f0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7b4980"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7b4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b7af930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7af930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7afcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7afe40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b7ae020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7ae340"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b7ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7ae660"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7ae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b7ae980"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b7aeb10"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7aeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b7aee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b7ad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b7ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7ad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b7b0710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7b0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7b0c20"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7b0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7af020"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7af340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7af4d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7af660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b7fd480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7fd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7fd800"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7fd990"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b7fdb20"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7fdcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7fde40"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b7fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7fc1b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7fc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b7fc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b7fc660"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7fc7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b7fc980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b7fcb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b7fcda0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b7ab1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7ab1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7ab530"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7ab9e0"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7abd00"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7fd020"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15b7f7020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15b7f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7f7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b7f76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7f7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7f79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b7f7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7f7d00"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b7f61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b7f6340"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7f64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b7f6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b7f67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b7f6a80"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15b7fad70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b7fad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b7f8180"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b7f8310"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b7f84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b7f8630"/>
        <function-ref name="get" scoped="" ref="0x2ba15b7f87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b7f8950"/>
        <function-ref name="set" scoped="" ref="0x2ba15b7f8ae0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b7f8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2ba15b7df5a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2ba15b7df5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ba15b7df920"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b7dfab0"/>
        <function-ref name="captured" scoped="" ref="0x2ba15b7dfc40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ba15b7dfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2ba15b7e3210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2ba15b7e3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15b7e3590"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b7e3720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ba15b7e38b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ba15b7e3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2ba15b7e3e30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ba15b7e3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15b7e21e0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b7e2370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ba15b7e2500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ba15b7e2690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2ba15b81fda0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2ba15b81fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15b81e180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ba15b81e310"/>
        <function-ref name="captured" scoped="" ref="0x2ba15b81e4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15b81e630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15b81e7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ba15b81e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ba15b820020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ba15b820020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ba15b8203a0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b820530"/>
        <function-ref name="captured" scoped="" ref="0x2ba15b8206c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ba15b820850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ba15b820ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15b820ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15b820e60"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15b81f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15b81f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15b81f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15b81f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15b81f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15b81f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15b81f980"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15b81fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2ba15b81ec20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15b81ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15b81d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15b81d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15b81d340"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15b81d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15b81d660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15b81d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15b81d980"/>
        <function-ref name="get" scoped="" ref="0x2ba15b81db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15b81dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15b81de30"/>
        <function-ref name="set" scoped="" ref="0x2ba15b81c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15b81c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15b81c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15b81c5d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15b81c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ba15b80fc40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ba15b80fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b80e020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b80e1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b80e340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b80e4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b80e660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b80e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ba15b805bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ba15b805bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b803020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8031b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b803340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8034d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b803660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8037f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ba15b80cbc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ba15b80cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b80b020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b80b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b80b340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b80b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b80b660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b80b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ba15b80abc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ba15b80abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b809020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8091b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b809340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8094d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b809660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ba15b815d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ba15b815d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b8100e0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b810270"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b810400"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b810590"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b810720"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8108b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ba15b807bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ba15b807bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b8060a0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b806230"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8063c0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b806550"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8066e0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b806870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ba15b80ebc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ba15b80ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b80d020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b80d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b80d340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b80d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b80d660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b80d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ba15b803bc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ba15b803bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b802020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8021b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b802340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8024d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b802660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8027f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ba15b811e70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ba15b811e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b816220"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8163b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b816540"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8166d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b816860"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8169f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ba15b809bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ba15b809bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b808020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8081b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b808340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8084d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b808660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ba15b810c80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ba15b810c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b80f0a0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b80f230"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b80f3c0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b80f550"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b80f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b80f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ba15b806c40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ba15b806c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b805020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8051b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b805340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8054d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b805660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8057f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ba15b80dbc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ba15b80dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b80c020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b80c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b80c340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b80c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b80c660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b80c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ba15b80bbc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ba15b80bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b80a020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b80a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b80a340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b80a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b80a660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b80a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ba15b816dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ba15b816dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b815180"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b815310"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8154a0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b815630"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8157c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b815950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ba15b808bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ba15b808bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b807020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8071b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b807340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8074d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b807660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ba15b84fa30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ba15b84fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b84fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b84e020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b84e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b84e340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b84e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b84e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ba15b845bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ba15b845bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b844020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8441b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b844340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8444d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b844660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ba15b84ca30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ba15b84ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b84cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b84b020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b84b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b84b340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b84b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b84b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ba15b84aa30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ba15b84aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b84adb0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b849020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8491b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b849340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8494d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b849660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ba15b851a30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ba15b851a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b851db0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b850020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8501b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b850340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8504d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b850660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ba15b847a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ba15b847a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b846020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8461b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b846340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8464d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b846660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ba15b84ea30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ba15b84ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b84edb0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b84d020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b84d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b84d340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b84d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b84d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ba15b844bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ba15b844bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b843020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8431b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b843340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8434d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b843660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ba15b8019d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ba15b8019d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b801d50"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b852020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8521b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b852340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8524d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b852660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ba15b849a30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ba15b849a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b849db0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b848020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8481b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b848340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8484d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b848660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ba15b850a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ba15b850a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b850db0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b84f020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b84f1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b84f340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b84f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b84f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ba15b846bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ba15b846bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b845020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b8451b0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b845340"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b8454d0"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b845660"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b8457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ba15b84da30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ba15b84da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b84ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b84c020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b84c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b84c340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b84c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b84c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ba15b84ba30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ba15b84ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b84bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b84a020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b84a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b84a340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b84a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b84a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ba15b852a30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ba15b852a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b852db0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b851020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8511b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b851340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8514d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b851660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ba15b848a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ba15b848a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b848db0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b847020"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b8471b0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b847340"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b8474d0"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b847660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2ba15b920610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2ba15b920610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b920990"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b920b20"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b920cb0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b920e40"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b913020"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b9131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ba15b921a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2ba15b921a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15b921db0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b920020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ba15b9201b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ba15b920340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2ba15b911610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2ba15b911610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15b911990"/>
        <function-ref name="fired" scoped="" ref="0x2ba15b911b20"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b911cb0"/>
        <function-ref name="edge" scoped="" ref="0x2ba15b911e40"/>
        <function-ref name="enable" scoped="" ref="0x2ba15b910020"/>
        <function-ref name="getValue" scoped="" ref="0x2ba15b9101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ba15b912a70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2ba15b912a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15b912df0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15b911020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ba15b9111b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ba15b911340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ba15bc67e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15bc67e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc66410"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc665a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ba15bc71160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ba15bc71160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc714e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ba15bc6be50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15bc6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc6a210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ba15bc65880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bc65880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc65c00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc65d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ba15bc5d0a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ba15bc5d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5d420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ba15bc640a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ba15bc640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc64420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc645b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ba15bcb9500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bcb9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcb9880"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcb9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ba15bc54500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ba15bc54500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc54880"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc54a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ba15bc70490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bc70490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc70810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ba15bc59880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ba15bc59880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc59c00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc59d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ba15bc55500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bc55500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc55880"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc55a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ba15bc6ae50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ba15bc6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc69210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ba15bc69e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bc69e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc67210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ba15bc5f880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ba15bc5f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5fc00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ba15bc610a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ba15bc610a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc61420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc615b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ba15bc64880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ba15bc64880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc64c00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc64d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ba15bc73a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bc73a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15bc73e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15bc72020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15bc721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ba15bc6fe00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bc6fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ba15bc6d490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ba15bc6d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ba15bc58c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15bc58c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc570a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc57230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ba15bc6dbe0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ba15bc6dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ba15bc55ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bc55ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc540a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc54230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ba15bc6f160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15bc6f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ba15bc590a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ba15bc590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc59420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc595b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ba15bc69670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15bc69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc699f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc69b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ba15bc6a670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bc6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc6a9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ba15bc72ad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ba15bc72ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc72e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ba15bc5b0a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15bc5b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5b420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ba15bc5d880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ba15bc5d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5dc00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ba15bc5b880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15bc5b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5bc00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ba15bcbace0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bcbace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcb90a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcb9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ba15bc54ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ba15bc54ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcba0a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcba230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ba15bc61880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ba15bc61880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc61c00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc61d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ba15bc5c0a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ba15bc5c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5c420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ba15bc56ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ba15bc56ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc550a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc55230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ba15bc63880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ba15bc63880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc63c00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc63d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ba15bcb9ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bcb9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bcb80a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bcb8230"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcb83c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bcb8550"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bcb86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ba15bc72480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ba15bc72480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc72800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ba15bc6b670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ba15bc6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc6b9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ba15bc67670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15bc67670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc679f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc67b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ba15bc5e0a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ba15bc5e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5e420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ba15bc630a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ba15bc630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc63420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc635b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ba15bc5e880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ba15bc5e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5ec00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ba15bc66870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ba15bc66870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc66bf0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc66d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ba15bc717b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ba15bc717b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc71b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ba15bc650a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bc650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc65420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15bc74e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15bc74e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bc731c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15bc73350"/>
        <function-ref name="request" scoped="" ref="0x2ba15bc734e0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bc73670"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bc73800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ba15bc6c2f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bc6c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ba15bc6b020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ba15bc6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ba15bc56500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ba15bc56500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc56880"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc56a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ba15bc57ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ba15bc57ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc560a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc56230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ba15bc6f7b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bc6f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ba15bc57500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15bc57500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc57880"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc57a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ba15bcba500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ba15bcba500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcba880"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcbaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ba15bc5f0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15bc5f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5f420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ba15bc5c880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ba15bc5c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc5cc00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc5cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ba15bc71e00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ba15bc71e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc701c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ba15bc70ae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ba15bc70ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc70e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ba15bc620a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ba15bc620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc62420"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc625b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ba15bc6c940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ba15bc6c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bc6ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ba15bc62880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ba15bc62880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc62c00"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc62d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ba15bc580a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ba15bc580a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc58820"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc589b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ba15bcb89b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bcb89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bcb8d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bcb7020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcb71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bcb7340"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bcb74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ba15b980630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2ba15b980630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15b9809b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15b980b40"/>
        <function-ref name="write" scoped="" ref="0x2ba15b980cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15b980e60"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15b97f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ba15b982680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b982680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15b982a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15b982b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15b982d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ba15b97f8c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2ba15b97f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b97fc40"/>
        <function-ref name="write" scoped="" ref="0x2ba15b97fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ba15b97e6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2ba15b97e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b97ea70"/>
        <function-ref name="write" scoped="" ref="0x2ba15b97ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b985960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b985960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b985ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b985e70"/>
        <function-ref name="request" scoped="" ref="0x2ba15b982030"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b9821c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b982350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ba15b97d510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2ba15b97d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15b97d890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2ba15b967680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ba15b967680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15b967a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15b967b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ba15b977bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2ba15b977bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15b976020"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15b9761b0"/>
        <function-ref name="write" scoped="" ref="0x2ba15b976340"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15b9764d0"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15b976660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ba15b97b930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15b97b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15b97bcb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15b97be40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15b978020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2ba15b970080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ba15b970080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ba15b970400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2ba15b96f020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2ba15b96f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15b96f3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15b96f530"/>
        <function-ref name="isState" scoped="" ref="0x2ba15b96f6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15b96f850"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15b96f9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15b96fb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ba15b972400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ba15b972400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b972780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b972910"/>
        <function-ref name="request" scoped="" ref="0x2ba15b972aa0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b972c30"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b972dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ba15b975020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2ba15b975020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b9753a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15b975530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ba15b975db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2ba15b975db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15b974180"/>
        <function-ref name="write" scoped="" ref="0x2ba15b974310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15b96fdf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15b96fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15b9681c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15b968350"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15b9684e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15b968670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15b968800"/>
        <function-ref name="get" scoped="" ref="0x2ba15b968990"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15b968b20"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15b9661b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15b968cb0"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15b968e40"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15b966020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b978810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b978810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b978b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b978d20"/>
        <function-ref name="request" scoped="" ref="0x2ba15b977020"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b9771b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b977340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2ba15b962120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2ba15b962120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15b9624a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15b962630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ba15b974ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2ba15b974ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15b972020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ba15b9bb770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15b9bb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15b9bbaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15b9bbc80"/>
        <function-ref name="isState" scoped="" ref="0x2ba15b9bbe10"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15b9b8020"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15b9b81b0"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15b9b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ba15b9b7280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15b9b7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15b9b7600"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15b9b7790"/>
        <function-ref name="isState" scoped="" ref="0x2ba15b9b7920"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15b9b7ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15b9b7c40"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15b9b7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15b9b3020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15b9b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15b9b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ba15b9b3b70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15b9b3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15ba0d020"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15ba0d1b0"/>
        <function-ref name="isState" scoped="" ref="0x2ba15ba0d340"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15ba0d4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15ba0d660"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15ba0d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ba15bc35020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ba15bc35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15bc353a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15bc35530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ba15b9f48f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ba15b9f48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ba15b9f4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b9f5c40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b9f5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b9f4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b9f41b0"/>
        <function-ref name="request" scoped="" ref="0x2ba15b9f4340"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b9f44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b9f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15cbb0af0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15cbb0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15cbb0e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15cbaf030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ba15cbad440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ba15cbad440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cbad7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cbad950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ba15cbadbe0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ba15cbadbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ba15cbac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ba15cbaf2c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ba15cbaf2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ba15cbaf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15cbb2e70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15cbb2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15cbb0220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15cbb03b0"/>
        <function-ref name="request" scoped="" ref="0x2ba15cbb0540"/>
        <function-ref name="granted" scoped="" ref="0x2ba15cbb06d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15cbb0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ba15cbaf8d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ba15cbaf8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ba15cbafc50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ba15cbafde0"/>
        <function-ref name="splitRead" scoped="" ref="0x2ba15cbad020"/>
        <function-ref name="write" scoped="" ref="0x2ba15cbad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ba15b9e16b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15b9e16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15b9e1a30"/>
        <function-ref name="configure" scoped="" ref="0x2ba15b9e1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ba15ba3b850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ba15ba3b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ba3bbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ba3bd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ba15ba39a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ba15ba39a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ba15ba39dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ba15b9e0020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ba15b9e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ba15b9e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ba15ba3a690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ba15ba3a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15ba3aa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15ba3aba0"/>
        <function-ref name="request" scoped="" ref="0x2ba15ba3ad30"/>
        <function-ref name="granted" scoped="" ref="0x2ba15ba39020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ba391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15b9e3430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15b9e3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15b9e37b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15b9e3940"/>
        <function-ref name="request" scoped="" ref="0x2ba15b9e3ad0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15b9e3c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15b9e3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ba15b9e06a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ba15b9e06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ba15b9e0a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ba15b9e0bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2ba15b9e0d40"/>
        <function-ref name="write" scoped="" ref="0x2ba15ba3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ba15ba372a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ba372a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15ba37620"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15ba377b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ba15ba98250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15ba98250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15ba985f0"/>
        <function-ref name="configure" scoped="" ref="0x2ba15ba98780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ba15ba97c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ba15ba97c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ba96020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ba961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ba15ba953e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ba15ba953e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ba15ba95780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ba15ba98a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ba15ba98a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ba15ba98d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2ba15ba95a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ba15ba95a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15ba95dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15ba94020"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15ba941b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15ba94340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15ba944d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15ba94660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15ba947f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15ba94980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15ba94b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15ba94ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15ba94e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15ba93020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15ba931b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15ba93440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15ba935d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15ba93760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15ba938f0"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15ba93a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15ba93c10"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15ba93da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15ba92020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15ba921b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15ba92340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15ba924d0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ba92660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15ba929f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15ba92b80"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15ba92d10"/>
        <function-ref name="tx" scoped="" ref="0x2ba15ba91020"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15ba911b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15ba91340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15ba914d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15ba91660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15ba917f0"/>
        <function-ref name="rx" scoped="" ref="0x2ba15ba91980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15ba91b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15ba91ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15ba91e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15ba90020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15ba901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15ba90c20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15ba90c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15ba8f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15ba8f1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15ba8f340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15ba8f4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15ba8f660"/>
        <function-ref name="get" scoped="" ref="0x2ba15ba8f7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15ba8f980"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15ba8e020"/>
        <function-ref name="set" scoped="" ref="0x2ba15ba8fca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15ba8fb10"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15ba8fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ba15ba965b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ba15ba965b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15ba96950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15ba96ae0"/>
        <function-ref name="request" scoped="" ref="0x2ba15ba96c70"/>
        <function-ref name="granted" scoped="" ref="0x2ba15ba96e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ba95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15ba3d470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15ba3d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15ba3d810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15ba3d9a0"/>
        <function-ref name="request" scoped="" ref="0x2ba15ba3db30"/>
        <function-ref name="granted" scoped="" ref="0x2ba15ba3dcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15ba3de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ba15ba97060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ba15ba97060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ba15ba973e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ba15ba97570"/>
        <function-ref name="splitRead" scoped="" ref="0x2ba15ba97700"/>
        <function-ref name="write" scoped="" ref="0x2ba15ba97890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ba15ba90480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ba15ba90480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15ba90800"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15ba90990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2ba15ba8e2f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2ba15ba8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15ba8e670"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15ba8e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2ba15ba815e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ba15ba815e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ba81960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ba15ba82d10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15ba82d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15ba810e0"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15ba81270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ba15ba86020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15ba86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15ba863a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15ba86530"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15ba866c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15ba86850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15ba869e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15ba86b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15ba86d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15ba85020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15ba851b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15ba85340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15ba854d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15ba85660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15ba857f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15ba85a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15ba85c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15ba85da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15ba84020"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15ba841b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15ba84340"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15ba844d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15ba84660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15ba847f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15ba84980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15ba84b10"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ba84ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15ba83220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15ba833b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15ba83540"/>
        <function-ref name="tx" scoped="" ref="0x2ba15ba836d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15ba83860"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15ba839f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15ba83b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15ba83d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15ba82020"/>
        <function-ref name="rx" scoped="" ref="0x2ba15ba821b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15ba82340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15ba824d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15ba82660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15ba827f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15ba82980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ba15baa4b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ba15baa4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15baa3020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15baa31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15baa3340"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15baa34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15baa3660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15baa37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15baa3980"/>
        <function-ref name="get" scoped="" ref="0x2ba15baa3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15baa3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15baa3e30"/>
        <function-ref name="set" scoped="" ref="0x2ba15baa2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15baa21b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15baa2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15baa25d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15baa2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ba15ba78780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ba15ba78780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15ba78b00"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15ba78c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2ba15baa2b20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2ba15baa2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15baa1020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15baa11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15baa1340"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15baa14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15baa1660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15baa17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15baa1980"/>
        <function-ref name="get" scoped="" ref="0x2ba15baa1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15baa1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15baa1e30"/>
        <function-ref name="set" scoped="" ref="0x2ba15baa0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15baa01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15baa0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15baa05d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15baa0760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2ba15baa0b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2ba15baa0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15ba9f020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15ba9f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15ba9f340"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15ba9f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15ba9f660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15ba9f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15ba9f980"/>
        <function-ref name="get" scoped="" ref="0x2ba15ba9fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15ba9fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15ba9fe30"/>
        <function-ref name="set" scoped="" ref="0x2ba15ba9e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15ba9e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15ba9e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15ba9e5d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15ba9e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2ba15ba7fc70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ba15ba7fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15ba7c020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15ba7c1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15ba7c340"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15ba7c4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15ba7c660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15ba7c7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15ba7c980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15ba7cb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15ba7cca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15ba7ce30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15ba7b020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15ba7b1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15ba7b340"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15ba7b5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15ba7b760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15ba7b8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15ba7ba80"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15ba7bc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15ba7bda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15ba7a020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15ba7a1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15ba7a340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15ba7a4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15ba7a660"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ba7a7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15ba7ab80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15ba7ad10"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15ba79020"/>
        <function-ref name="tx" scoped="" ref="0x2ba15ba791b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15ba79340"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15ba794d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15ba79660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15ba797f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15ba79980"/>
        <function-ref name="rx" scoped="" ref="0x2ba15ba79b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15ba79ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15ba79e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15ba78020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15ba781b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15ba78340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2ba15baadd10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2ba15baadd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ba15ba760e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ba15ba76270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ba15ba76400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ba15ba76590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ba15ba76720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ba15ba768b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ba15ba76a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ba15ba76bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ba76d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ba15ba75020"/>
        <function-ref name="getData" scoped="" ref="0x2ba15ba751b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ba15ba75340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ba15ba754d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ba15ba75760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ba15ba758f0"/>
        <function-ref name="getIV" scoped="" ref="0x2ba15ba75a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ba15ba75c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ba15ba75da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ba15baac020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ba15baac1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ba15baac340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ba15baac4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2ba15baac660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ba15baac7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ba15baac980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ba15baacd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ba15baab020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ba15baab1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ba15baab340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ba15baab4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ba15baab660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ba15baab7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ba15baab980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ba15baabb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ba15baabca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ba15baabe30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ba15baaa020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ba15baaa1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ba15baaa340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ba15baaa4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ba15baaa660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ba15baaa7f0"/>
        <function-ref name="setData" scoped="" ref="0x2ba15baaa980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ba15baaab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ba15baaaca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ba15baaae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ba15baa9020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ba15baa91b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ba15baa9340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ba15baa98d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ba15baa9a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ba15baa9bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ba15baa9d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ba15baa8020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ba15baa81b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ba15baa8340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ba15baa84d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ba15baa8660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ba15baa87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2ba15baa6b20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2ba15baa6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15baa5020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15baa51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15baa5340"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15baa54d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15baa5660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15baa57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15baa5980"/>
        <function-ref name="get" scoped="" ref="0x2ba15baa5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15baa5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15baa5e30"/>
        <function-ref name="set" scoped="" ref="0x2ba15baa4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15baa41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15baa4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15baa45d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15baa4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ba15ba77150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15ba77150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15ba774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ba15baa8bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ba15baa8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15baa7020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15baa71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15baa7340"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15baa74d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15baa7660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15baa77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15baa7980"/>
        <function-ref name="get" scoped="" ref="0x2ba15baa7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15baa7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15baa7e30"/>
        <function-ref name="set" scoped="" ref="0x2ba15baa6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15baa61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15baa6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15baa65d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15baa6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15cba55d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15cba55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15cba5950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15cba5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2ba15cc497c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ba15cc497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15cc49b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15cc42a80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15cc42a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15cc42e00"/>
        <function-ref name="configure" scoped="" ref="0x2ba15cc41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2ba15cc49dd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ba15cc49dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ba15cc48180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ba15cc48310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ba15cc484a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ba15cc48630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ba15cc487c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ba15cc48950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ba15cc48ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ba15cc48c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15cc48e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ba15cc47020"/>
        <function-ref name="getData" scoped="" ref="0x2ba15cc471b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ba15cc47340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ba15cc474d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ba15cc47760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ba15cc478f0"/>
        <function-ref name="getIV" scoped="" ref="0x2ba15cc47a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ba15cc47c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ba15cc47da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ba15cc46020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ba15cc461b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ba15cc46340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ba15cc464d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2ba15cc46660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ba15cc467f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ba15cc46980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ba15cc46d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ba15cc45020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ba15cc451b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ba15cc45340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ba15cc454d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ba15cc45660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ba15cc457f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ba15cc45980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ba15cc45b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ba15cc45ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ba15cc45e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ba15cc44020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ba15cc441b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ba15cc44340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ba15cc444d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ba15cc44660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ba15cc447f0"/>
        <function-ref name="setData" scoped="" ref="0x2ba15cc44980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ba15cc44b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ba15cc44ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ba15cc44e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ba15cc43020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ba15cc431b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ba15cc43340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ba15cc438d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ba15cc43a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ba15cc43bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ba15cc43d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ba15cc42020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ba15cc421b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ba15cc42340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ba15cc424d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ba15cc42660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ba15cc427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ba15cc49020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ba15cc49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15cc493a0"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15cc49530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15cba6860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15cba6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15cba6be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15cba6d70"/>
        <function-ref name="request" scoped="" ref="0x2ba15cba5020"/>
        <function-ref name="granted" scoped="" ref="0x2ba15cba51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15cba5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ba15cba45a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ba15cba45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15cba4920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15cba4ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15cba4c40"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15cba4dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15cba3020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15cba31b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15cba3340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15cba34d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15cba3660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15cba37f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15cba3980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15cba3b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15cba3ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15cba2020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15cba21b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15cba2340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15cba24d0"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15cba2660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15cba27f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15cba2980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15cba2b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15cba2ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15cba2e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15cba1020"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15cba11b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15cba1540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15cba16d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15cba1860"/>
        <function-ref name="tx" scoped="" ref="0x2ba15cba19f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15cba1b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15cba1d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15cba0020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15cba01b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15cba0340"/>
        <function-ref name="rx" scoped="" ref="0x2ba15cba04d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15cba0660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15cba07f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15cba0980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15cba0b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15cba0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15cba5d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15cba5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15cba4180"/>
        <function-ref name="userId" scoped="" ref="0x2ba15cba4310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15bb802c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15bb802c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15bb80640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15bb807d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15bb7f8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15bb7f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15bb7fc20"/>
        <function-ref name="configure" scoped="" ref="0x2ba15bb7fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ba15bb834d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ba15bb834d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15bb83850"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15bb839e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15bb81020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15bb81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bb813a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15bb81530"/>
        <function-ref name="request" scoped="" ref="0x2ba15bb816c0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bb81850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bb819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ba15bb823f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15bb823f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15bb82770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15bb80ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb80ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15bb80e50"/>
        <function-ref name="userId" scoped="" ref="0x2ba15bb7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ba15bb7be50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15bb7a210"/>
        <function-ref name="userId" scoped="" ref="0x2ba15bb7a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ba15bb7c060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ba15bb7c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15bb7c400"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15bb7c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2ba15bb7b840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ba15bb7b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15bb7bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ba15bb7c990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ba15bb7c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15bb7cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2ba15bb7b060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2ba15bb7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ba15bb7b3e0"/>
        <function-ref name="txDone" scoped="" ref="0x2ba15bb7b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15bb77850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15bb77850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15bb77bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15bb77d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15bb74570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15bb74570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15bb74910"/>
        <function-ref name="configure" scoped="" ref="0x2ba15bb74aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ba15bb76020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15bb76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bb763a0"/>
        <function-ref name="requested" scoped="" ref="0x2ba15bb76530"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bb766c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bb76850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15bb769e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15bb78a80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15bb78a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bb78e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15bb77020"/>
        <function-ref name="request" scoped="" ref="0x2ba15bb771b0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bb77340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bb774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15bb76c30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15bb76c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15bb74020"/>
        <function-ref name="userId" scoped="" ref="0x2ba15bb741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15cc80a40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15cc80a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15cc80dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ba15cc7f0a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ba15cc7f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ba15cc7f420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ba15cc7f5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ba15cc7f740"/>
        <function-ref name="dequeue" scoped="" ref="0x2ba15cc7f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ba15cc7c020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ba15cc7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ba15cc7c3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15cc7c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ba15cc7bcf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ba15cc7bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ba15cc790e0"/>
        <function-ref name="configure" scoped="" ref="0x2ba15cc79270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ba15cc79500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ba15cc79500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ba15cc79880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ba15cc79a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ba15cc79ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ba15cc79d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ba15cc7c7a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ba15cc7c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15cc7cb20"/>
        <function-ref name="requested" scoped="" ref="0x2ba15cc7ccb0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15cc7ce40"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15cc7b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ba15cc7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15cc78020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15cc78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15cc783a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15cc78530"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15cc786c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15cc78850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15cc789e0"/>
        <function-ref name="get" scoped="" ref="0x2ba15cc78b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15cc78d00"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15cc774d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15cc771b0"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15cc77020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15cc77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15cc7d270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15cc7d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15cc7d610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15cc7d7a0"/>
        <function-ref name="request" scoped="" ref="0x2ba15cc7d930"/>
        <function-ref name="granted" scoped="" ref="0x2ba15cc7dac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15cc7dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ba15cc7b400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ba15cc7b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ba15cc7b780"/>
        <function-ref name="userId" scoped="" ref="0x2ba15cc7b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ba15cc777a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2ba15cc777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15cc77b20"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15cc77cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2ba15bb6d540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ba15bb6d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ba15bb6d8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ba15bb6da50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ba15bb6dbe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ba15bb6dd70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ba15bb6a020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ba15bb6a1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ba15bb6a340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ba15bb6a4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15bb6a660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ba15bb6a7f0"/>
        <function-ref name="getData" scoped="" ref="0x2ba15bb6a980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ba15bb6ab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ba15bb6aca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ba15bb69020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ba15bb691b0"/>
        <function-ref name="getIV" scoped="" ref="0x2ba15bb69340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ba15bb694d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ba15bb69660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ba15bb697f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ba15bb69980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ba15bb69b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ba15bb69ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2ba15bb69e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ba15bb68020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ba15bb681b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ba15bb68540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ba15bb686d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ba15bb68860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ba15bb689f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ba15bb68b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ba15bb68d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ba15bb67020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ba15bb671b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ba15bb67340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ba15bb674d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ba15bb67660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ba15bb677f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ba15bb67980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ba15bb67b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ba15bb67ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ba15bb67e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ba15bb66020"/>
        <function-ref name="setData" scoped="" ref="0x2ba15bb661b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ba15bb66340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ba15bb664d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ba15bb66660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ba15bb667f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ba15bb66980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ba15bb66b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ba15bb65420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ba15bb655b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ba15bb65740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ba15bb658d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ba15bb65a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ba15bb65bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ba15bb65d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ba15bb64020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ba15bb641b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ba15bb64340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2ba15bb59250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2ba15bb59250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ba15bb595d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ba15bb59760"/>
        <function-ref name="setUctl" scoped="" ref="0x2ba15bb598f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ba15bb59a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ba15bb59c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ba15bb59da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ba15bbba020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ba15bbba1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ba15bbba340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ba15bbba4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ba15bbba660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ba15bbba7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ba15bbba980"/>
        <function-ref name="getUbr" scoped="" ref="0x2ba15bbbac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ba15bbbada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ba15bbb9020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ba15bbb91b0"/>
        <function-ref name="isUart" scoped="" ref="0x2ba15bbb9340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ba15bbb94d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2ba15bbb9660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ba15bbb97f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ba15bbb9980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ba15bbb9b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ba15bbb9ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15bbb9e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ba15bbb8220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ba15bbb83b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2ba15bbb8540"/>
        <function-ref name="tx" scoped="" ref="0x2ba15bbb86d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2ba15bbb8860"/>
        <function-ref name="disableUart" scoped="" ref="0x2ba15bbb89f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ba15bbb8b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ba15bbb8d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ba15bbb7020"/>
        <function-ref name="rx" scoped="" ref="0x2ba15bbb71b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ba15bbb7340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ba15bbb74d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ba15bbb7660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ba15bbb77f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ba15bbb7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ba15bbb5cb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ba15bbb5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bbb40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bbb4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15bbb43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bbb4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bbb46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15bbb4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bbb4a00"/>
        <function-ref name="get" scoped="" ref="0x2ba15bbb4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15bbb4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15bbb3020"/>
        <function-ref name="set" scoped="" ref="0x2ba15bbb31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15bbb3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15bbb34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15bbb3760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bbb38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2ba15bb60430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2ba15bb60430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ba15bb607b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ba15bb60940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ba15bb60ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ba15bb60c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ba15bb60df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ba15bb5f020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ba15bb5f1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ba15bb5f340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15bb5f4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ba15bb5f660"/>
        <function-ref name="getData" scoped="" ref="0x2ba15bb5f7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ba15bb5f980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ba15bb5fb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ba15bb5fda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ba15bb5e020"/>
        <function-ref name="getIV" scoped="" ref="0x2ba15bb5e1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ba15bb5e340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ba15bb5e4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ba15bb5e660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ba15bb5e7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ba15bb5e980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ba15bb5eb10"/>
        <function-ref name="isI2C" scoped="" ref="0x2ba15bb5eca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ba15bb5ee30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ba15bb5d020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ba15bb5d3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ba15bb5d540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ba15bb5d6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ba15bb5d860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ba15bb5d9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ba15bb5db80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ba15bb5dd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ba15bb5c020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ba15bb5c1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ba15bb5c340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ba15bb5c4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ba15bb5c660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ba15bb5c7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ba15bb5c980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ba15bb5cb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ba15bb5cca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ba15bb5ce30"/>
        <function-ref name="setData" scoped="" ref="0x2ba15bb5b020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ba15bb5b1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ba15bb5b340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ba15bb5b4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ba15bb5b660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ba15bb5b7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ba15bb5b980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ba15bb5a020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ba15bb5a1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ba15bb5a340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ba15bb5a4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ba15bb5a660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ba15bb5a7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ba15bb5a980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ba15bb5ab10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ba15bb5aca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ba15bb5ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ba15bbb7d40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ba15bbb7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bbb60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bbb6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15bbb6400"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bbb6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bbb6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15bbb68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bbb6a40"/>
        <function-ref name="get" scoped="" ref="0x2ba15bbb6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15bbb6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15bbb5020"/>
        <function-ref name="set" scoped="" ref="0x2ba15bbb51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15bbb5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15bbb54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15bbb5760"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bbb58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ba15bc9fc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15bc9fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9e210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ba15bcaada0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ba15bcaada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ba15bca2b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15bca2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bca1020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bca11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ba15bc9d670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bc9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9d9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ba15bc96e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ba15bc96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc94210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ba15bc9de50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ba15bc9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9b210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ba15bc892f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bc892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc89670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc89800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ba15bc8b2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ba15bc8b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8b670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ba15bca7120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bca7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ba15bc91670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ba15bc91670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc919f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc91b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ba15bc8c2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bc8c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8c670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ba15bca1c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ba15bca1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bca0020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bca01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ba15bca0c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bca0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9f020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ba15bc97670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ba15bc97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc979f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ba15bc99e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ba15bc99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc98210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ba15bc9b670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ba15bc9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9b9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ba15bcab760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bcab760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15bcabae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15bcabc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15bcabe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ba15bca6aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bca6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ba15bca5120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ba15bca5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ba15bc90a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15bc90a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc90df0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ba15bca5870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ba15bca5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ba15bc8cad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bc8cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8ce50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ba15bca7dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15bca7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ba15bc92e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ba15bc92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc91210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ba15bca0480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15bca0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bca0800"/>
        <function-ref name="write" scoped="" ref="0x2ba15bca0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ba15bca1480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bca1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bca1800"/>
        <function-ref name="write" scoped="" ref="0x2ba15bca1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ba15bcaa750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ba15bcaa750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bcaaad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ba15bc93e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15bc93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc92210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ba15bc94670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ba15bc94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc949f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ba15bc92670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15bc92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc929f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ba15bc8aad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bc8aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8ae50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ba15bc8bad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ba15bc8bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8be50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ba15bc98670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ba15bc98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc989f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ba15bc94e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ba15bc94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc93210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ba15bc8dad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ba15bc8dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8de50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ba15bc9a670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ba15bc9a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9a9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ba15bc89ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bc89ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bc89e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bcee020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcee1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bcee340"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bcee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ba15bcaa100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ba15bcaa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bcaa480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ba15bca2370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ba15bca2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bca26f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bca2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ba15bc9f480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15bc9f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9f800"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ba15bc97e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ba15bc97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc96210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ba15bc9be50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ba15bc9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9a210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ba15bc96670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ba15bc96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc969f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc96b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ba15bc9e670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ba15bc9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9e9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ba15bca9450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ba15bca9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ba15bc9ee50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bc9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc9d210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15bcaca80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15bcaca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bcace00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15bcab020"/>
        <function-ref name="request" scoped="" ref="0x2ba15bcab1b0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bcab340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bcab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ba15bca4020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bca4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ba15bca4cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ba15bca4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ba15bc8d2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ba15bc8d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8d670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ba15bc8fad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ba15bc8fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8fe50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ba15bca6450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bca6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ba15bc8f2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15bc8f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8f670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ba15bc8a2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ba15bc8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc8a670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc8a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ba15bc98e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15bc98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc97210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ba15bc93670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ba15bc93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc939f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ba15bca9aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ba15bca9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ba15bca7770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ba15bca7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ba15bc9ae50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ba15bc9ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc99210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ba15bca4670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ba15bca4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bca49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ba15bc99670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ba15bc99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc999f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ba15bc91e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ba15bc91e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bc90610"/>
        <function-ref name="write" scoped="" ref="0x2ba15bc907a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ba15bcee7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bcee7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bceeb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bceecb0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bceee40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bcec020"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bcec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ba15bcd8c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15bcd8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd7210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ba15bce3da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ba15bce3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ba15bcdcb50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15bcdcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcdb020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ba15bcd6670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bcd6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd69f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ba15bccfe50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ba15bccfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcce210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ba15bcd6e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ba15bcd6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd5210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ba15bcc22f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bcc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc2670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ba15bcc52f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ba15bcc52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc5670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ba15bce1120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bce1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ba15bcca670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ba15bcca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcca9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bccab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ba15bcc62f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bcc62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc6670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ba15bcdbc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ba15bcdbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcda020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ba15bcdac60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bcdac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd8020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ba15bcd0670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ba15bcd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd09f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ba15bcd3e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ba15bcd3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd1210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ba15bcd5670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ba15bcd5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd59f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ba15bce4760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bce4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15bce4ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15bce4c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15bce4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ba15bce0aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bce0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ba15bcde120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ba15bcde120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bcde5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ba15bcc9a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15bcc9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc9df0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ba15bcde870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ba15bcde870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bcdebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ba15bcc6ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bcc6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc6e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ba15bce1dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15bce1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ba15bccce50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ba15bccce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcca210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ba15bcda480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15bcda480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcda800"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcda990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ba15bcdb480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bcdb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcdb800"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcdb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ba15bce3750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ba15bce3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ba15bccde50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15bccde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bccc210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bccc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ba15bcce670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ba15bcce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcce9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ba15bccc670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15bccc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bccc9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ba15bcc3ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bcc3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc3e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ba15bcc5ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ba15bcc5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc5e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ba15bcd1670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ba15bcd1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd19f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ba15bccee50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ba15bccee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bccd210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bccd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ba15bcc7ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ba15bcc7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc7e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ba15bcd4670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ba15bcd4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd49f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ba15bcc2ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bcc2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bcc2e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bcc1020"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bcc1340"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bcc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ba15bce3100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ba15bce3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce3480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ba15bcdc370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ba15bcdc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcdc6f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcdc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ba15bcd8480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15bcd8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd8800"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ba15bcd0e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ba15bcd0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bccf210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bccf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ba15bcd5e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ba15bcd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd4210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ba15bccf670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ba15bccf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bccf9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bccfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ba15bcd7670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ba15bcd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd79f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ba15bce2450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ba15bce2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ba15bcd7e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bcd7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd6210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15bce59e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15bce59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bce5d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15bce4020"/>
        <function-ref name="request" scoped="" ref="0x2ba15bce41b0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bce4340"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bce44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ba15bcdd020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bcdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bcdd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ba15bcddcc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ba15bcddcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bcdc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ba15bcc72f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ba15bcc72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc7670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ba15bcc8ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ba15bcc8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc8e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ba15bce0450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bce0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ba15bcc82f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15bcc82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc8670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ba15bcc32f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ba15bcc32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc3670"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ba15bcd1e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15bcd1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd0210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ba15bccd670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ba15bccd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bccd9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bccdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ba15bce2aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ba15bce2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ba15bce1770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ba15bce1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bce1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ba15bcd4e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ba15bcd4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd3210"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ba15bcdd670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ba15bcdd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bcdd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ba15bcd3670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ba15bcd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcd39f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcd3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ba15bccae50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ba15bccae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcc9610"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ba15bcc17a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bcc17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bcc1b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bcc1cb0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcc1e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bcc0020"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bcc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ba15bd20b30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ba15bd20b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ba15bd1d020"/>
        <function-ref name="changed" scoped="" ref="0x2ba15bd1d1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ba15bd1d340"/>
        <function-ref name="setAddress" scoped="" ref="0x2ba15bd1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ba15bd1fd30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ba15bd1fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ba15bd090e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ba15bd05310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ba15bd05310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ba15bd05690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2ba15bd018c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ba15bd018c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bd01c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2ba15bcf7020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ba15bcf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcf73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2ba15bd55cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ba15bd55cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcf00a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bcf0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2ba15bcf05b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2ba15bcf05b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15bcf0930"/>
        <function-ref name="stop" scoped="" ref="0x2ba15bcf0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2ba15bcf1210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ba15bcf1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bcf1590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2ba15bd44020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ba15bd44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bd443a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bd44530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2ba15bd448c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2ba15bd448c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd44c40"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd44dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd43020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd431b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd43340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd434d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd43660"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd437f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2ba15bd3bb40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ba15bd3bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ba15bd3d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2ba15bd42490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ba15bd42490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bd42810"/>
        <function-ref name="write" scoped="" ref="0x2ba15bd429a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2ba15bd42d30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2ba15bd42d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd3f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd3f270"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd3f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd3f590"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd3f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd3f8b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd3fa40"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd3fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ba15bd84020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ba15bd84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ba15bd84e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ba15bd81d20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ba15bd81d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ba15bd80b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15bd71260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15bd71260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bd70090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bd70a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bd70550"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bd6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2ba15bd6e890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ba15bd6e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bd6a6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bd69090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bd6aba0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bd69550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ba15bd64190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15bd64190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15bd64510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15bd646a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15bd64830"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd649c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15bd64b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bd64ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15bd64e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bd63030"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bd631c0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15bd63350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15bd634e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ba15bd67060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15bd67060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab22460"/>
            <typename><typedef-ref name="TMicro" ref="0x2ba15ab227d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bd67e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bd66820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bd66360"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bd66ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2ba15bd455a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2ba15bd455a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd45920"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd45ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd45c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd45dd0"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd5f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd5f1b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd5f340"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd5f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ba15bd5dc50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ba15bd5dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd5c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd5c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ba15bd5c340"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd5c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd5c660"/>
        <function-ref name="getResistor" scoped="" ref="0x2ba15bd5c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd5c980"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd5cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ba15bd5cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ba15bd5ce30"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd5b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ba15bd5b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ba15bd5b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ba15bd5b5d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd5b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ba15bd5e9e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ba15bd5e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd5ed60"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd5d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd5d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd5d340"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd5d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd5d660"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd5d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd5d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15bd60a20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15bd60a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15bd60da0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15bdc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ba15bdb1cb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15bdb1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15bdb00a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15bdb0230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15bdb03c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15bdb0550"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15bdb06e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15bdb0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ba15bdad9f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ba15bdad9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ba15bdadd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2ba15bdb1020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ba15bdb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15bdb13a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15bdb1530"/>
        <function-ref name="modify" scoped="" ref="0x2ba15bdb16c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15bdb1850"/>
        <function-ref name="resend" scoped="" ref="0x2ba15bdb19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15bdb46d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15bdb46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15bdb4a50"/>
        <function-ref name="stop" scoped="" ref="0x2ba15bdb4be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ba15bdaf190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2ba15bdaf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ba15bdaf510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ba15bda6650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15bda6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15bda69d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15bda6b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15bda6cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15bda6e80"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15bda5030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15bda51c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ba15bd9e7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ba15bd9e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15bd9cd50"/>
        <function-ref name="clear" scoped="" ref="0x2ba15bd9b4c0"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15bd9c620"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd9bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ba15bdf4020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bdf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bdf43a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bdf4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ba15bdf4890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ba15bdf4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bdf4c10"/>
        <function-ref name="write" scoped="" ref="0x2ba15bdf4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ba15bda55e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ba15bda55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ba15bda5960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2ba15bdf8530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ba15bdf8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bdf88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2ba15bd99880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2ba15bd99880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ba15bd99c00"/>
        <function-ref name="disable" scoped="" ref="0x2ba15bd99d90"/>
        <function-ref name="captured" scoped="" ref="0x2ba15bd98020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ba15bd981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2ba15bda47f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2ba15bda47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15bda0090"/>
        <function-ref name="fired" scoped="" ref="0x2ba15bda1090"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15bda1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15bda1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15bda0550"/>
        <function-ref name="start" scoped="" ref="0x2ba15bda36a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15bda3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ba15bda0a00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bda0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15bda0d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15bd9f020"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15bd9f1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15bd9f340"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15bd9f4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15bd9f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2ba15bd8c550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15bd8c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bd8c8d0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bd8ca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ba15bd8ce00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ba15bd8ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bdf91c0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bdf9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2ba15bdeed40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ba15bdeed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15bdf10e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ba15bdf1270"/>
        <function-ref name="sfd" scoped="" ref="0x2ba15bdf1400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15bda78c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15bda78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15bda7c40"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15bda7dd0"/>
        <function-ref name="modify" scoped="" ref="0x2ba15bda6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15bda61b0"/>
        <function-ref name="resend" scoped="" ref="0x2ba15bda6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2ba15bd8ed10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15bd8ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15bd8d0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15bd8d270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15bd8d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2ba15bdf8c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15bdf8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bdf6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ba15bd91820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ba15bd91820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd91ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd91d30"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd90020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd901b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd90340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd904d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd90660"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15bda9820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15bda9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15bda9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15bd9f9a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bd9f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15bd9fd20"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15bd9e020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15bd9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2ba15bd93b30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bd93b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bd99020"/>
        <function-ref name="isSet" scoped="" ref="0x2ba15bd991b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15bd99340"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ba15bdf63e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15bdf63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bdf6960"/>
        <function-ref name="write" scoped="" ref="0x2ba15bdf6af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ba15bd8e020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ba15bd8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bd8e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15bd8e530"/>
        <function-ref name="request" scoped="" ref="0x2ba15bd8e6c0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bd8e850"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bd8e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2ba15bd98500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2ba15bd98500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd98980"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd98b10"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd98ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd98e30"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd91020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd911b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd91340"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd914d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ba15bdf3130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ba15bdf3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bdf34b0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bdf3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2ba15bdf39c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ba15bdf39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bdf3d40"/>
        <function-ref name="write" scoped="" ref="0x2ba15bdf2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ba15bdf96d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ba15bdf96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bdf9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2ba15bd90b40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2ba15bd90b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15bd8f020"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15bd8f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15bd8f340"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15bd8f4d0"/>
        <function-ref name="get" scoped="" ref="0x2ba15bd8f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15bd8f7f0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bd8f980"/>
        <function-ref name="clr" scoped="" ref="0x2ba15bd8fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15bdf16c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15bdf16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15bdf1a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15bdf1bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15bdf1d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15bdf0020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15bdf01b0"/>
        <function-ref name="get" scoped="" ref="0x2ba15bdf0340"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15bdf04d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15bdf0b10"/>
        <function-ref name="set" scoped="" ref="0x2ba15bdf0660"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15bdf07f0"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15bdf0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ba15bdf55e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bdf55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bdf5960"/>
        <function-ref name="write" scoped="" ref="0x2ba15bdf5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15bda7020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15bda7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15bda73a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15bda7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2ba15bd8d780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ba15bd8d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bd8db00"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bd8dc90"/>
        <function-ref name="write" scoped="" ref="0x2ba15bd8de20"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bd8c020"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bd8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2ba15bdf9de0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ba15bdf9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bdf8180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2ba15bdf6e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ba15bdf6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bdf5220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ba15bda5d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2ba15bda5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ba15bda4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ba15be98c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15be98c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be96210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ba15be34020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ba15be34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ba15be9bc70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15be9bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be9a020"/>
        <function-ref name="write" scoped="" ref="0x2ba15be9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ba15be95670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15be95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be959f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ba15be8ee50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ba15be8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8d210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ba15be95e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ba15be95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be94210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ba15be812f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ba15be812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be81670"/>
        <function-ref name="write" scoped="" ref="0x2ba15be81800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ba15be842f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ba15be842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be84670"/>
        <function-ref name="write" scoped="" ref="0x2ba15be84800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ba15be33370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ba15be33370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be336f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ba15be89670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ba15be89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be899f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be89b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ba15be852f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15be852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be85670"/>
        <function-ref name="write" scoped="" ref="0x2ba15be85800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ba15be9ac60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ba15be9ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be99020"/>
        <function-ref name="write" scoped="" ref="0x2ba15be991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ba15be99c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ba15be99c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be98020"/>
        <function-ref name="write" scoped="" ref="0x2ba15be981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ba15be8f670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ba15be8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8f9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ba15be92e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ba15be92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be90210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ba15be94670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ba15be94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be949f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ba15be368f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15be368f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15be36c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15be36e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15be35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ba15be32d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15be32d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be300a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ba15be30370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ba15be30370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ba15be88a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15be88a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be88df0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ba15be30ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ba15be30ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be30e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ba15be85ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15be85ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be85e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15be84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ba15be32060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15be32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be323e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ba15be8be50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ba15be8be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be89210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ba15be99480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15be99480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be99800"/>
        <function-ref name="write" scoped="" ref="0x2ba15be99990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ba15be9a480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15be9a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be9a800"/>
        <function-ref name="write" scoped="" ref="0x2ba15be9a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ba15be35940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ba15be35940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be35cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ba15be8ce50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15be8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8b210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ba15be8d670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ba15be8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8d9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ba15be8b670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15be8b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8b9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ba15be82ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ba15be82ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be82e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15be81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ba15be84ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ba15be84ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be84e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15be82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ba15be90670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ba15be90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be909f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be90b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ba15be8de50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ba15be8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8c210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ba15be86ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ba15be86ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be86e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15be85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ba15be93670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ba15be93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be939f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ba15be81ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ba15be81ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15be81e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15be80020"/>
        <function-ref name="write" scoped="" ref="0x2ba15be801b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15be80340"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15be804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ba15be352f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ba15be352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be35670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ba15be9b490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ba15be9b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be9b810"/>
        <function-ref name="write" scoped="" ref="0x2ba15be9b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ba15be98480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15be98480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be98800"/>
        <function-ref name="write" scoped="" ref="0x2ba15be98990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ba15be8fe50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ba15be8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8e210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ba15be94e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ba15be94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be93210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ba15be8e670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ba15be8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8e9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ba15be96670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ba15be96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be969f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be96b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ba15be34670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ba15be34670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be349f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ba15be96e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15be96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be95210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15be38c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15be38c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15be36020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15be361b0"/>
        <function-ref name="request" scoped="" ref="0x2ba15be36340"/>
        <function-ref name="granted" scoped="" ref="0x2ba15be364d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15be36660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ba15be9c160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ba15be9c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be9c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ba15be9ce00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ba15be9ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be9b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ba15be862f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ba15be862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be86670"/>
        <function-ref name="write" scoped="" ref="0x2ba15be86800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ba15be87ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ba15be87ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be87e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15be86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ba15be326b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15be326b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be32a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ba15be872f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15be872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be87670"/>
        <function-ref name="write" scoped="" ref="0x2ba15be87800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ba15be822f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ba15be822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be82670"/>
        <function-ref name="write" scoped="" ref="0x2ba15be82800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ba15be90e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15be90e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8f210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ba15be8c670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ba15be8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be8c9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ba15be34cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ba15be34cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be330a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ba15be339c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ba15be339c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be33d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ba15be93e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ba15be93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be92210"/>
        <function-ref name="write" scoped="" ref="0x2ba15be923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ba15be9c7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ba15be9c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15be9cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ba15be92670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ba15be92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be929f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ba15be89e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ba15be89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15be88610"/>
        <function-ref name="write" scoped="" ref="0x2ba15be887a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ba15be807a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ba15be807a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15be80b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15be80cb0"/>
        <function-ref name="write" scoped="" ref="0x2ba15be80e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15be7f020"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15be7f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ba15be74df0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ba15be74df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15be711c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ba15be71350"/>
        <function-ref name="sfd" scoped="" ref="0x2ba15be714e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15be717c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15be717c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15be71b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ba15be70020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2ba15be70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ba15be703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15be745c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15be745c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15be74940"/>
        <function-ref name="stop" scoped="" ref="0x2ba15be74ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2ba15be69380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2ba15be69380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15be69700"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15be69890"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15be69a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15be69bb0"/>
        <function-ref name="get" scoped="" ref="0x2ba15be69d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15be67020"/>
        <function-ref name="set" scoped="" ref="0x2ba15be671b0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15be67340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ba15becfb90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ba15becfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ba15bece020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ba15bece1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ba15bece340"/>
        <function-ref name="syncDone" scoped="" ref="0x2ba15bece4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ba15bece660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ba15bece7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ba15bece980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ba15beceb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ba15bececa0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ba15becee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ba15becd020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ba15becd1b0"/>
        <function-ref name="sync" scoped="" ref="0x2ba15becd340"/>
        <function-ref name="getChannel" scoped="" ref="0x2ba15becd5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ba15becd760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2ba15beb89d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2ba15beb89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15beb8d50"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15beb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ba15becdd70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ba15becdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15becb330"/>
        <function-ref name="clear" scoped="" ref="0x2ba15becba60"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15beccba0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bec9210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2ba15be676b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2ba15be676b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15be67a30"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15be67bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15be67d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15be66020"/>
        <function-ref name="get" scoped="" ref="0x2ba15be661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15be66340"/>
        <function-ref name="set" scoped="" ref="0x2ba15be664d0"/>
        <function-ref name="clr" scoped="" ref="0x2ba15be66660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ba15bec8cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15bec8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bec70a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bec7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ba15bec7590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ba15bec7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bec7910"/>
        <function-ref name="write" scoped="" ref="0x2ba15bec7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2ba15bec66d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ba15bec66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bec6a50"/>
        <function-ref name="write" scoped="" ref="0x2ba15bec6be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ba15bed0330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bed0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15bed06b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15bed0840"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15bed09d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15bed0b60"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15bed0cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15bed0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ba15be6c550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ba15be6c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15be6c8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ba15be6ca60"/>
        <function-ref name="sfd" scoped="" ref="0x2ba15be6cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2ba15bed13a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ba15bed13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bed1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ba15be6a020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ba15be6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ba15be6a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ba15be6a530"/>
        <function-ref name="toggle" scoped="" ref="0x2ba15be6a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ba15be6a850"/>
        <function-ref name="get" scoped="" ref="0x2ba15be6a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ba15be6ab70"/>
        <function-ref name="set" scoped="" ref="0x2ba15be6ad00"/>
        <function-ref name="clr" scoped="" ref="0x2ba15be69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2ba15bec5020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15bec5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bec53a0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bec5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15be6d620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15be6d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15be6d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15becf1e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15becf1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15becf560"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15becf6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15becf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15be6b020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15be6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15be6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ba15bed36e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ba15bed36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15bed3a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15bed3bf0"/>
        <function-ref name="request" scoped="" ref="0x2ba15bed3d80"/>
        <function-ref name="granted" scoped="" ref="0x2ba15bed2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15bed21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ba15bec7e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ba15bec7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bec61c0"/>
        <function-ref name="write" scoped="" ref="0x2ba15bec6350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2ba15bed2530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ba15bed2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15bed28b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15bed2a40"/>
        <function-ref name="write" scoped="" ref="0x2ba15bed2bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15bed2d60"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15bed1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ba15bec58b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ba15bec58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bec5e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ba15be6b7c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2ba15be6b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ba15be6bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15bec4150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15bec4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15bec44d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15bec4660"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15bec47f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15bec4980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15bec4b10"/>
        <function-ref name="get" scoped="" ref="0x2ba15bec4ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15bec4e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15bec34d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bec3020"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15bec31b0"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15bec3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ba15bec83e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15bec83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15bec8760"/>
        <function-ref name="write" scoped="" ref="0x2ba15bec88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2ba15bec9b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ba15bec9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bec8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2ba15be66a50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ba15be66a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ba15be66dd0"/>
        <function-ref name="disable" scoped="" ref="0x2ba15bed3020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ba15bed31b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ba15bed3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2ba15bed1ad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15bed1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15bed0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ba15be6dca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ba15be6dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ba15be6c0a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15be6c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ba15bf36a70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15bf36a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ba15bf36df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ba15bf3a670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf3a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15bf3a9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15bf3ab80"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15bf3ad10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15bf37020"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15bf371b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15bf37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ba15bf35550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf35550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15bf34b00"/>
        <function-ref name="clear" scoped="" ref="0x2ba15bf332a0"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15bf343d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bf339d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ba15bf360c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf360c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15bf36440"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15bf365d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15bf36760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ba15bf2d480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bf2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bf2d800"/>
        <function-ref name="isSet" scoped="" ref="0x2ba15bf2d990"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15bf2db20"/>
        <function-ref name="set" scoped="" ref="0x2ba15bf2dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ba15bf31660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15bf31660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15bf30ce0"/>
        <function-ref name="clear" scoped="" ref="0x2ba15bf2f460"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15bf305b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bf2fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15bf376e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15bf376e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15bf37a60"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15bf37bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15bf37d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ba15bf27020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ba15bf27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ba15bf273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ba15bf2cd20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15bf2cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15bf290e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15bf29270"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15bf29400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15bf29590"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15bf29720"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15bf298b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ba15bf1e4a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15bf1e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15bf1e820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15bf1e9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15bf1eb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15bf1ecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15bf1ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ba15bf27a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15bf27a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15bf25020"/>
        <function-ref name="clear" scoped="" ref="0x2ba15bf25750"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15bf268d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15bf25e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ba15bf28640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15bf28640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15bf289c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15bf28b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15bf28ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ba15bf1f8b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15bf1f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bf1fc30"/>
        <function-ref name="isSet" scoped="" ref="0x2ba15bf1fdc0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15bf1e020"/>
        <function-ref name="set" scoped="" ref="0x2ba15bf1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ba15bf1a820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ba15bf1a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bf1c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ba15bf1cb80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ba15bf1cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bf197d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ba15bf23af0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15bf23af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15bf210d0"/>
        <function-ref name="clear" scoped="" ref="0x2ba15bf21800"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15bf22970"/>
        <function-ref name="set" scoped="" ref="0x2ba15bf1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15bf29c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15bf29c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15bf28020"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15bf281b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15bf28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ba15bfaa4e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ba15bfaa4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bfa1150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15bfa17c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15bfa17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bfa0620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bf9e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bfa0ae0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bf9e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ba15bf99020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2ba15bf99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15bf95630"/>
        <function-ref name="fired" scoped="" ref="0x2ba15bf98a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15bf97920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15bf974a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15bf94020"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15bf95ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15bf97020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15bf99c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15bf95020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15bf98110"/>
        <function-ref name="stop" scoped="" ref="0x2ba15bf985e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ba15bf94610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ba15bf94610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bf933d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15bf9a130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15bf9a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15bf9a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15bfd7870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15bfd7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15bfd4090"/>
        <function-ref name="fired" scoped="" ref="0x2ba15bfd5090"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15bfd5a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15bfd5550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15bfd4550"/>
        <function-ref name="start" scoped="" ref="0x2ba15bfd66a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15bfd6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15bfd7020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15bfd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15bfd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cd94260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cd94260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cd92b30"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cd93a60"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cd924e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cd92020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cd91020"/>
        <function-ref name="start" scoped="" ref="0x2ba15cd93090"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cd935a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15cd959d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15cd959d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15cd95d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ba15cd7ca80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cd7ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15cd7ce00"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15cd7b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15cd7b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15cd7b340"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cd7b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ba15cd7e020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cd7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cd7e3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15cd7e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cd7e6c0"/>
        <function-ref name="get" scoped="" ref="0x2ba15cd7e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cd7e9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cd7eb70"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15cd7ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cd7d020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cd7d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15cd7d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15cd7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ba15cd7d760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cd7d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15cd7dae0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15cd7dc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cd7de00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15cd7c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15cd7c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cd7c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15cd7c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15cd7c660"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15cd7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ba15cd72760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cd72760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15cd72ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15cd72c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15cd72e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15cd71020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cd711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ba15cd75dd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cd75dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cd74180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15cd74310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cd744a0"/>
        <function-ref name="get" scoped="" ref="0x2ba15cd74630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cd747c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cd74950"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15cd74ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cd74c70"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cd74e00"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15cd73020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15cd731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cd79bf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cd79bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cd754e0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cd774e0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cd77e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cd779a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cd759a0"/>
        <function-ref name="start" scoped="" ref="0x2ba15cd78a80"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cd77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15cd79360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15cd79360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15cd796e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ba15cd73440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cd73440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15cd737c0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15cd73950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cd73ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15cd73c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15cd73e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cd72020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15cd721b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15cd72340"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15cd724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ba15bf84b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15bf84b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bf819b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bf80360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bf81e70"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bf80820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ba15bfecb90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2ba15bfecb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bfea9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bfe94e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bfe9020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bfe99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ba15bf7c610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15bf7c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15bfed5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15bfec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15bfeda70"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15bfec4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cd8f5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cd8f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cd8ce50"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cd8de00"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cd8c800"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cd8c340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cd8b340"/>
        <function-ref name="start" scoped="" ref="0x2ba15cd8d430"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cd8d940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ba15cd89d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ba15cd89d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cd85670"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cd86550"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cd85020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cd86a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cd85b30"/>
        <function-ref name="start" scoped="" ref="0x2ba15cd87b60"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cd86090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15cd8b9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15cd8b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15cd8a7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cd891b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cd8aca0"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cd89670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ba15c0159c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2ba15c0159c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c015d40"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c014020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ba15c019850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15c019850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c015090"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c016090"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15c016a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c016550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15c015550"/>
        <function-ref name="start" scoped="" ref="0x2ba15c0186a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c018bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15c01e2f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15c01e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c01a870"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c01de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c01bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c01b780"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c0191e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c01acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c01b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c01d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c01a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c01d4f0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c01d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ba15c038a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2ba15c038a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c038d80"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c037020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ba15c03d640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2ba15c03d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c039c40"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c03a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c039020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c03aae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c038590"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c038110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c03a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c03c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c039630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c03c860"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c03cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15c043150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15c043150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c03f700"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c042c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c040a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c0405b0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c03d090"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c03fba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c040110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c043d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c03f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c0422a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c042790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ba15c0342b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ba15c0342b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c033020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15c033690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15c033690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c0325b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15c031020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15c032a70"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15c0314e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15c02a8c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15c02a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c08ccf0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c08d320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c08c0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c08dc20"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c08a660"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c08a1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c08d7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c08e4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c08c6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c08e9b0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c08ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ba15c0962c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2ba15c0962c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c093870"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c095e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c094c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c094780"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c0911e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c093cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c094300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c095020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c093260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c0954f0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c0959c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ba15c07ac60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ba15c07ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c079210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ba15c084020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ba15c084020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c0843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ba15c07ec70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ba15c07ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c07c020"/>
        <function-ref name="write" scoped="" ref="0x2ba15c07c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ba15c078670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ba15c078670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0789f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c078b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ba15c071e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ba15c071e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06f210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ba15c078e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ba15c078e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c076210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ba15c0642f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ba15c0642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c064670"/>
        <function-ref name="write" scoped="" ref="0x2ba15c064800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ba15c0662f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ba15c0662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c066670"/>
        <function-ref name="write" scoped="" ref="0x2ba15c066800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ba15c082370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ba15c082370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c0826f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ba15c06c670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ba15c06c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06c9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ba15c0672f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ba15c0672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c067670"/>
        <function-ref name="write" scoped="" ref="0x2ba15c067800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ba15c07cc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ba15c07cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c07b020"/>
        <function-ref name="write" scoped="" ref="0x2ba15c07b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ba15c07bc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ba15c07bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c07a020"/>
        <function-ref name="write" scoped="" ref="0x2ba15c07a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ba15c072670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ba15c072670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0729f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c072b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ba15c074e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ba15c074e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c073210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ba15c076670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ba15c076670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0769f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c076b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ba15c086970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ba15c086970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ba15c086cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ba15c086e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ba15c085030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ba15c081d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ba15c081d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c0800a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ba15c080370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ba15c080370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c0807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ba15c06ba70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ba15c06ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06bdf0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ba15c080ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ba15c080ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c080e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ba15c067ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ba15c067ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c067e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15c066020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ba15c081060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ba15c081060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c0813e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ba15c06de50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ba15c06de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06c210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ba15c07b480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ba15c07b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c07b800"/>
        <function-ref name="write" scoped="" ref="0x2ba15c07b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ba15c07c480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ba15c07c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c07c800"/>
        <function-ref name="write" scoped="" ref="0x2ba15c07c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ba15c085950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ba15c085950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c085cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ba15c06ee50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ba15c06ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06d210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ba15c06f670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ba15c06f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06f9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ba15c06d670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ba15c06d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06d9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ba15c065ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ba15c065ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c065e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15c064020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ba15c066ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ba15c066ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c066e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15c065020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ba15c073670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ba15c073670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0739f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c073b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ba15c06fe50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ba15c06fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06e210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ba15c068ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ba15c068ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c068e50"/>
        <function-ref name="write" scoped="" ref="0x2ba15c067020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ba15c075670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ba15c075670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0759f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c075b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ba15c064ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ba15c064ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15c064e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15c063020"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0631b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15c063340"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15c0634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ba15c085300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ba15c085300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c085680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ba15c07e490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ba15c07e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c07e810"/>
        <function-ref name="write" scoped="" ref="0x2ba15c07e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ba15c07a480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ba15c07a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c07a800"/>
        <function-ref name="write" scoped="" ref="0x2ba15c07a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ba15c072e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ba15c072e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c071210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ba15c076e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ba15c076e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c075210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ba15c071670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ba15c071670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0719f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c071b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ba15c079670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ba15c079670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0799f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c079b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ba15c084670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ba15c084670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c0849f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ba15c079e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ba15c079e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c078210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15c087d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15c087d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15c0860a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15c086230"/>
        <function-ref name="request" scoped="" ref="0x2ba15c0863c0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15c086550"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15c0866e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ba15c07f160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ba15c07f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c07f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ba15c07fe00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ba15c07fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c07e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ba15c0682f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ba15c0682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c068670"/>
        <function-ref name="write" scoped="" ref="0x2ba15c068800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ba15c06aad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ba15c06aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06ae50"/>
        <function-ref name="write" scoped="" ref="0x2ba15c068020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ba15c0816b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ba15c0816b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c081a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ba15c06a2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ba15c06a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06a670"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ba15c0652f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ba15c0652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c065670"/>
        <function-ref name="write" scoped="" ref="0x2ba15c065800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ba15c073e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ba15c073e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c072210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ba15c06e670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ba15c06e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06e9f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ba15c084cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ba15c084cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c0820a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ba15c0829c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ba15c0829c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c082d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ba15c075e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ba15c075e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c074210"/>
        <function-ref name="write" scoped="" ref="0x2ba15c0743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ba15c07f7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ba15c07f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ba15c07fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ba15c074670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ba15c074670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c0749f0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c074b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ba15c06ce50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ba15c06ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ba15c06b610"/>
        <function-ref name="write" scoped="" ref="0x2ba15c06b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ba15c0637a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ba15c0637a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ba15c063b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2ba15c063cb0"/>
        <function-ref name="write" scoped="" ref="0x2ba15c063e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2ba15c062020"/>
        <function-ref name="readDone" scoped="" ref="0x2ba15c0621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ba15c0afa20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ba15c0afa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ba15c0afda0"/>
        <function-ref name="rand32" scoped="" ref="0x2ba15c0ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ba15c0ac920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2ba15c0ac920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c0af560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15c0b39a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15c0b39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c0b3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ba15c0a7a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ba15c0a7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ba15c0a7da0"/>
        <function-ref name="rand32" scoped="" ref="0x2ba15c0a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ba15c0a8940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2ba15c0a8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c0a7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15c0a8080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15c0a8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c0a8400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ba15c0b1aa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15c0b1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15c0b1e20"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15c0a9020"/>
        <function-ref name="isState" scoped="" ref="0x2ba15c0a91b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15c0a9340"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15c0a94d0"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15c0a9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c10b020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c10b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c10b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c10b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c10b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c10b850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c10b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c10c220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c10c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c10c5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c10c730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c10c8c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c10ca50"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c10cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c107e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c107e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c106210"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1063a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c106530"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1066c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c106850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c10aa20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c10aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c10ada0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c107020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1071b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c107340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1074d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ba15c1058f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ba15c1058f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ba15c105c70"/>
        <function-ref name="rand32" scoped="" ref="0x2ba15c105e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15c107750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15c107750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c107ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15c103170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c103170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1034f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15c103680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15c103810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2ba15c106ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15c106ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15c106e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15c105020"/>
        <function-ref name="isState" scoped="" ref="0x2ba15c1051b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15c105340"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15c1054d0"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15c105660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ba15c0f3690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15c0f3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15c0f3a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15c0f3ba0"/>
        <function-ref name="isState" scoped="" ref="0x2ba15c0f3d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15c0f2020"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15c0f21b0"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15c0f2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15c0ec950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15c0ec950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c0eccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c0efaa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c0efaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c0efe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ba15c0ec200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ba15c0ec200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c0ec580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15c0e73f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15c0e73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c0e7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15c0e8b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15c0e8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c0e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c0ebe30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c0ebe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c0e81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15c0e7a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c0e7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c0e7df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15c0e6020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15c0e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ba15c0e8570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ba15c0e8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c0e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15c130020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15c130020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c1303a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c1306b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c1306b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c130a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c130bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c130d50"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c12f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c12f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c135960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c135960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c135ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c135e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c134030"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1341c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c134350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ba15c134ca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ba15c134ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1330a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c133230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1333c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c133550"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1336e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c1345f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c1345f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c134970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15c136cb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15c136cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15c1350a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15c135230"/>
        <function-ref name="request" scoped="" ref="0x2ba15c1353c0"/>
        <function-ref name="granted" scoped="" ref="0x2ba15c135550"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15c1356e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ba15c133a50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15c133a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c133dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ba15c131170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ba15c131170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c1314f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c131680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c131810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1319a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c131b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c127d70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c127d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c126180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c126310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1264a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c126630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1267c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15c126b10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15c126b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c125020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2ba15c170db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2ba15c170db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c16f180"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c16f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ba15c1252f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15c1252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15c125670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15c125800"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15c125990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15c125b20"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15c125cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15c125e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ba15c129a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ba15c129a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c129da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c128020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1281b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c128340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ba15c123b70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ba15c123b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ba15c122020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ba15c1221b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ba15c122340"/>
        <function-ref name="dequeue" scoped="" ref="0x2ba15c1224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15c123170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c123170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1234f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15c123680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15c123810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ba15c129370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2ba15c129370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c1296f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ba15c12b7b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ba15c12b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15c12bb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15c12bcc0"/>
        <function-ref name="request" scoped="" ref="0x2ba15c12be50"/>
        <function-ref name="granted" scoped="" ref="0x2ba15c12a020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15c12a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ba15c12a4d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2ba15c12a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c12a850"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c12a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c12ab70"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c12ad00"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c129020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ba15c128840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ba15c128840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c128bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ba15c127020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ba15c127020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c1273a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c127530"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1276c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c127850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c1279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15c1cadd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15c1cadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c1c9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ba15c1c9410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ba15c1c9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ba15c1c9790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ba15c1c9920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ba15c1c9ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ba15c1c9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15c1beb80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15c1beb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15c1bd020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15c1bd1b0"/>
        <function-ref name="start" scoped="" ref="0x2ba15c1bd340"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c1bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c1bc860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c1bc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1bcbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1bcd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1bb020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1bb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1bb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15c1bb690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15c1bb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c1bba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c1c2cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c1c2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1bf0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1bf230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1bf3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1bf550"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1bf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ba15c1be080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15c1be080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ba15c1be400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ba15c1be590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ba15c1be720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ba15c1be8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2ba15c1bd800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2ba15c1bd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15c1bdb80"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15c1bdd10"/>
        <function-ref name="isState" scoped="" ref="0x2ba15c1bc020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15c1bc1b0"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15c1bc340"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15c1bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ba15c1bbd90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2ba15c1bbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15c1b9180"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15c1b9310"/>
        <function-ref name="start" scoped="" ref="0x2ba15c1b94a0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c1b9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c1bf980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c1bf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c1bfd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ba15c1b62d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15c1b62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ba15c1b6650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ba15c1b67e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ba15c1b6970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ba15c1b6b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ba15c1b8580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15c1b8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15c1b8900"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15c1b8a90"/>
        <function-ref name="isState" scoped="" ref="0x2ba15c1b8c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15c1b8db0"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15c1b7020"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15c1b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c1a9d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c1a9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1a8180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1a8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1a84a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1a8630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1a87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c1aa2a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c1aa2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1aa620"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1aa7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1aa940"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1aaad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1aac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ba15c1a9020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ba15c1a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ba15c1a93a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2ba15c1a9530"/>
        <function-ref name="getRetries" scoped="" ref="0x2ba15c1a96c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ba15c1a9850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ba15c1a99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c1a4dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c1a4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1a3180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1a3310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1a34a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1a3630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1a37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2ba15c1982a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2ba15c1982a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c198620"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c1987b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2ba15c1a1650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2ba15c1a1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c19dc40"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c19e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c19d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c19eae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c19c590"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c19c110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c19e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c1a0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c19d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c1a0860"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c1a0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c1a73b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c1a73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1a7730"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1a78c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1a7a50"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1a7be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1a7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2ba15c1a3af0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2ba15c1a3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15c1a3e70"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15c1a2030"/>
        <function-ref name="isState" scoped="" ref="0x2ba15c1a21c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15c1a2350"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15c1a24e0"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15c1a2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15c19ca30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c19ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c19cdb0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15c19b020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15c19b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ba15c1a29a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15c1a29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15c1a2d20"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15c1a1020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15c1a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ba15c1a4080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ba15c1a4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ba15c1a4400"/>
        <function-ref name="setRetries" scoped="" ref="0x2ba15c1a4590"/>
        <function-ref name="getRetries" scoped="" ref="0x2ba15c1a4720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ba15c1a48b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ba15c1a4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ba15c1e9350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ba15c1e9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ba15c1e96d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ba15c1e9860"/>
        <function-ref name="isState" scoped="" ref="0x2ba15c1e99f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ba15c1e9b80"/>
        <function-ref name="requestState" scoped="" ref="0x2ba15c1e9d10"/>
        <function-ref name="forceState" scoped="" ref="0x2ba15c1e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15c1e7750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15c1e7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c1e3c40"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c1e41e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c1e3020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c1e4ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c1e2590"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c1e2110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c1e4660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c1e6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c1e3630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c1e6860"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c1e6d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15c243690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15c243690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c243a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c244860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c244860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c244be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c244d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c243020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c2431b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c243340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ba15c241610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ba15c241610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ba15c241990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ba15c241b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ba15c241cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2ba15c241e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ba15c240020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ba15c2401b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ba15c240340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ba15c2404d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ba15c240660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ba15c2407f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ba15c240980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ba15c240b10"/>
        <function-ref name="sync" scoped="" ref="0x2ba15c240ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ba15c23f020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ba15c23f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ba15c246830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ba15c246830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15c246bb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15c246d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15c244020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15c2441b0"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15c244340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15c2444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ba15c247b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2ba15c247b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ba15c246020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ba15c23e1f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2ba15c23e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ba15c23e570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ba15c23e700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ba15c23e890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ba15c23ea20"/>
        <function-ref name="setCca" scoped="" ref="0x2ba15c23ebb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ba15c23ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c2488f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c2488f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c248c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c248e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c247020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c2471b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c247340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15c1d0da0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15c1d0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c1cf180"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c1cf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c1cf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c1cf630"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c1cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ba15c1cec00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ba15c1cec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c249020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ba15c243ce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ba15c243ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ba15c2420a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ba15c242230"/>
        <function-ref name="getRssi" scoped="" ref="0x2ba15c2423c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ba15c242550"/>
        <function-ref name="getPower" scoped="" ref="0x2ba15c2426e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2ba15c242870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ba15c23f4d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ba15c23f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ba15c23f950"/>
        <function-ref name="changed" scoped="" ref="0x2ba15c23fae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ba15c23fc70"/>
        <function-ref name="setAddress" scoped="" ref="0x2ba15c23fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ba15c242b70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ba15c242b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c241020"/>
        <function-ref name="getHeader" scoped="" ref="0x2ba15c2411b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ba15c241340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c1ce020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c1ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c1ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15c23dd30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15c23dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15c23c0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15c23c270"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15c23c400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15c23c590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15c23c720"/>
        <function-ref name="get" scoped="" ref="0x2ba15c23c8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15c23ca40"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15c23b1b0"/>
        <function-ref name="set" scoped="" ref="0x2ba15c23cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15c23cd60"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15c23b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c2492d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c2492d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c249650"/>
        <function-ref name="source" scoped="" ref="0x2ba15c2497e0"/>
        <function-ref name="address" scoped="" ref="0x2ba15c249970"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c249b00"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c249c90"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c249e20"/>
        <function-ref name="type" scoped="" ref="0x2ba15c248020"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c2481b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c248340"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c2484d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c248660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2ba15c23d0f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2ba15c23d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ba15c23d470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ba15c23d600"/>
        <function-ref name="request" scoped="" ref="0x2ba15c23d790"/>
        <function-ref name="granted" scoped="" ref="0x2ba15c23d920"/>
        <function-ref name="isOwner" scoped="" ref="0x2ba15c23dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ba15c2ab580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ba15c2ab580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ba15c2ab900"/>
        <function-ref name="stopDone" scoped="" ref="0x2ba15c2aba90"/>
        <function-ref name="start" scoped="" ref="0x2ba15c2abc20"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c2abdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2ba15c296060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ba15c296060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ba15c296e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2ba15c295380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c2a77e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c2a77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c2a7b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c2a7cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c2a7e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c2a6030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c2a61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ba15c2a71d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ba15c2a71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c2a7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ba15c2a4640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ba15c2a4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ba15c2a49c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ba15c2a4b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ba15c2a4ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ba15c2a4e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2ba15c29ce50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ba15c29ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c29ac60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c298590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c298110"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c299580"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c299a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c2a85c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c2a85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c2a8940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ba15c2a5b20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ba15c2a5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15c2a4020"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15c2a41b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15c2a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2ba15c2a3aa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ba15c2a3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c2a1890"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c29f1e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c2a0d10"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c2a01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c2a06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c2a6470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c2a6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c2a67f0"/>
        <function-ref name="source" scoped="" ref="0x2ba15c2a6980"/>
        <function-ref name="address" scoped="" ref="0x2ba15c2a6b10"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c2a6ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c2a6e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c2a5020"/>
        <function-ref name="type" scoped="" ref="0x2ba15c2a51b0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c2a5340"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c2a54d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c2a5660"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c2a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2ba15c29fc50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ba15c29fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ba15c29da40"/>
        <function-ref name="eventTime" scoped="" ref="0x2ba15c29c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ba15c2fce60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ba15c2fce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c2fb210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ba15c2ffa00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ba15c2ffa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c2ffd80"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c2fe020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c2fe1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c2fe340"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c2fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2ba15c303910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2ba15c303910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ba15c302740"/>
        <function-ref name="eventTime" scoped="" ref="0x2ba15c302c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2ba15c28c4d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2ba15c28c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c28b390"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c28ac80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c28a800"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c28bc60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c28a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c288340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c288340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c2886c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c288850"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c2889e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c288b70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c288d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ba15c2ff2c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ba15c2ff2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c2ff640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ba15c2fe800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2ba15c2fe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c2feb80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c2fed10"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c2fd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c2fd1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c2fd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2ba15c2fa130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ba15c2fa130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15c2f9750"/>
        <function-ref name="clear" scoped="" ref="0x2ba15c2f9e80"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15c2f9020"/>
        <function-ref name="set" scoped="" ref="0x2ba15c2f75d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2ba15c2fd6a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2ba15c2fd6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c2fda20"/>
        <function-ref name="source" scoped="" ref="0x2ba15c2fdbb0"/>
        <function-ref name="address" scoped="" ref="0x2ba15c2fdd40"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c2fc020"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c2fc1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c2fc340"/>
        <function-ref name="type" scoped="" ref="0x2ba15c2fc4d0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c2fc660"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c2fc7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c2fc980"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c2fcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c3016b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c3016b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c301a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2ba15c2f2020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ba15c2f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c2f23a0"/>
        <function-ref name="isSet" scoped="" ref="0x2ba15c2f2530"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c2f26c0"/>
        <function-ref name="set" scoped="" ref="0x2ba15c2f2850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ba15c2f2d30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ba15c2f2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c2f1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ba15c2ef0f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ba15c2ef0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ba15c2ef470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ba15c2ef600"/>
        <function-ref name="led1On" scoped="" ref="0x2ba15c2ef790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ba15c2ef920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ba15c2efab0"/>
        <function-ref name="get" scoped="" ref="0x2ba15c2efc40"/>
        <function-ref name="led1Off" scoped="" ref="0x2ba15c2efdd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ba15c2ee4d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15c2ee020"/>
        <function-ref name="led0On" scoped="" ref="0x2ba15c2ee1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2ba15c2ee340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ba15c2f0060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ba15c2f0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c2f0c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2ba15c292c10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2ba15c292c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c290a40"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c28e4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c28e020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c28f350"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c28f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c307020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c307020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c3073a0"/>
        <function-ref name="source" scoped="" ref="0x2ba15c307530"/>
        <function-ref name="address" scoped="" ref="0x2ba15c3076c0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c307850"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c3079e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c307b70"/>
        <function-ref name="type" scoped="" ref="0x2ba15c307d00"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c306020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c3061b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c306340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c3064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2ba15c306b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2ba15c306b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2ba15c305990"/>
        <function-ref name="eventTime" scoped="" ref="0x2ba15c303020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2ba15c2fb550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2ba15c2fb550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c2fb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2ba15c2f6270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ba15c2f6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ba15c2f5800"/>
        <function-ref name="clear" scoped="" ref="0x2ba15c2f3020"/>
        <function-ref name="isValid" scoped="" ref="0x2ba15c2f50d0"/>
        <function-ref name="set" scoped="" ref="0x2ba15c2f3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15c403020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15c403020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c4033a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c403530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c4036c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c403850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c4039e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c403c30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c403c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c402020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c4021b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c402340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c4024d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c402660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c4028b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c4028b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c402c30"/>
        <function-ref name="source" scoped="" ref="0x2ba15c402dc0"/>
        <function-ref name="address" scoped="" ref="0x2ba15c401020"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c4011b0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c401340"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c4014d0"/>
        <function-ref name="type" scoped="" ref="0x2ba15c401660"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c4017f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c401980"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c401b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c401ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15c400020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15c400020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15c4003a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15c400530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15c4006c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15ceb4cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15ceb4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15ceb20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ceb2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ceb23c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15ceb2550"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15ceb26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15ceb2930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15ceb2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ceb2cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15ceb2e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15ceb1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15ceb11b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15ceb1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15ceb1590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15ceb1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15ceb1910"/>
        <function-ref name="source" scoped="" ref="0x2ba15ceb1aa0"/>
        <function-ref name="address" scoped="" ref="0x2ba15ceb1c30"/>
        <function-ref name="destination" scoped="" ref="0x2ba15ceb1dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15ceb0020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15ceb01b0"/>
        <function-ref name="type" scoped="" ref="0x2ba15ceb0340"/>
        <function-ref name="setType" scoped="" ref="0x2ba15ceb04d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15ceb0660"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15ceb07f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15ceb0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15ceb0c10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15ceb0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15ceaf020"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15ceaf1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15ceaf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15cea6660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15cea6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cea69e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cea6b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cea6d00"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cea5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cea51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ba15cea5460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15cea5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cea57e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cea5970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cea5b00"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cea5c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cea5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ba15cea40e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15cea40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15cea4460"/>
        <function-ref name="source" scoped="" ref="0x2ba15cea45f0"/>
        <function-ref name="address" scoped="" ref="0x2ba15cea4780"/>
        <function-ref name="destination" scoped="" ref="0x2ba15cea4910"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15cea4aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15cea4c30"/>
        <function-ref name="type" scoped="" ref="0x2ba15cea4dc0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15cea3020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15cea31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15cea3340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15cea34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c362940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c362940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c362cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c362e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c35f020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c35f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c35f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ba15c396400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15c396400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c3967a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c396930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c396ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c396c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c396de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ba15c3974b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15c3974b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c397850"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c3979e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c397b70"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c397d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c396020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ba15c394720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c394720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c394aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c394c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c394dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c392020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c3921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ba15c392480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2ba15c392480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c392800"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c392990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ba15c392c60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2ba15c392c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c391020"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c3911b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ba15c395060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c395060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c3953e0"/>
        <function-ref name="source" scoped="" ref="0x2ba15c395570"/>
        <function-ref name="address" scoped="" ref="0x2ba15c395700"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c395890"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c395a20"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c395bb0"/>
        <function-ref name="type" scoped="" ref="0x2ba15c395d40"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c394020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c3941b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c394340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c3944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ba15c3fc830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ba15c3fc830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c3fa4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15c3fab30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15c3fab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c3f9970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15c3f8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15c3f9e30"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15c3f8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ba15c3f7e60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ba15c3f7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15aaf8bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ba15ab23020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15c3f4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ba15c3e3680" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.JoinReqDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3e3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c42fc40"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c4311e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c42f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c431ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c42e590"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c42e110"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c431660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c432390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c42f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c432860"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c432d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ba15c3d9020" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c3d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c3d6630"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c3d8a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c3d7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c3d74a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c3d5020"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c3d6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c3d7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c3d9c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c3d6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c3d8110"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c3d85e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15c3d3a00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15c3d3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c3cf2a0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c3d12a0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15c3d1c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c3d1760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15c3cf760"/>
        <function-ref name="start" scoped="" ref="0x2ba15c3d2890"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c3d2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15c3d31b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15c3d31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15c3d3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cf054f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cf054f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cf03db0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cf04da0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cf03760"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cf032a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cf022a0"/>
        <function-ref name="start" scoped="" ref="0x2ba15cf043d0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cf048e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15cf07b10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15cf07b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15cf05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ba15ceedda0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15ceedda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15ceec180"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15ceec310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15ceec4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15ceec630"/>
        <function-ref name="fired" scoped="" ref="0x2ba15ceec7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ba15ceef450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15ceef450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15ceef7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15ceef960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ceefaf0"/>
        <function-ref name="get" scoped="" ref="0x2ba15ceefc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ceefe10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15ceee020"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15ceee1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15ceee340"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15ceee4d0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15ceee660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15ceee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ba15ceeea80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15ceeea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15ceeee00"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15ceed020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15ceed1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15ceed340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15ceed4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15ceed660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15ceed7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15ceed980"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15ceedb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ba15cee3a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ba15cee3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ba15cee3e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2ba15cee2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ba15cee21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ba15cee2340"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cee24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ba15cee5190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ba15cee5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cee5510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ba15cee56a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cee5830"/>
        <function-ref name="get" scoped="" ref="0x2ba15cee59c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cee5b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cee5ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2ba15cee5e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cee4030"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cee41c0"/>
        <function-ref name="setMode" scoped="" ref="0x2ba15cee4350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ba15cee44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cee9020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cee9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cee6870"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cee8840"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cee6220"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cee8d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cee6d30"/>
        <function-ref name="start" scoped="" ref="0x2ba15cee9e30"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cee8380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ba15ceea660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ba15ceea660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ba15ceea9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ba15cee4770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ba15cee4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ba15cee4af0"/>
        <function-ref name="getControl" scoped="" ref="0x2ba15cee4c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ba15cee4e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ba15cee3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ba15cee31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ba15cee3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ba15cee34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ba15cee3660"/>
        <function-ref name="setControl" scoped="" ref="0x2ba15cee37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ba15cf00890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15cf00890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cefc0d0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cefd0d0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cefda50"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cefd590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cefc590"/>
        <function-ref name="start" scoped="" ref="0x2ba15ceff6e0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15ceffbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ba15cef90a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ba15cef90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cef6b30"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cef89f0"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15cef64e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cef6020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15cef5020"/>
        <function-ref name="start" scoped="" ref="0x2ba15cef8020"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cef8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ba15cefcc00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ba15cefcc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ba15cefba80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ba15cefa4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ba15cefa020"/>
        <function-ref name="overflow" scoped="" ref="0x2ba15cefa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ba15c447cc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2ba15c447cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c4460a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c446230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ba15c44bb10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ba15c44bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c447390"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c449360"/>
        <function-ref name="startAt" scoped="" ref="0x2ba15c449ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c449820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ba15c447850"/>
        <function-ref name="start" scoped="" ref="0x2ba15c44a970"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c44ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15c3cd470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15c3cd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c3c9a20"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c3cb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c3cbda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c3cb920"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c44b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c44b020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c3cb4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c3cc090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c3c9410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c3cc560"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c3cca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ba15c437650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2ba15c437650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ba15c4379d0"/>
        <function-ref name="runTask" scoped="" ref="0x2ba15c437b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ba15c43d3b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2ba15c43d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c439870"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c43be40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c43ac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c43a780"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c4371e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c439cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c43a300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c43b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c439260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c43b4f0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c43b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ba15c444d70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ba15c444d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c43e470"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c4419b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c4407c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c440320"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c43edb0"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c43e910"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c441e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c4439a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c440df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c441020"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c441510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15c42cb30" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15c42cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c42b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c42b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c42b340"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c42b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c42b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c42b8b0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c42b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c42bc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c42bdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c42a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c42a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c42a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c42a590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c42a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c42a910"/>
        <function-ref name="source" scoped="" ref="0x2ba15c42aaa0"/>
        <function-ref name="address" scoped="" ref="0x2ba15c42ac30"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c42adc0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c429020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c4291b0"/>
        <function-ref name="type" scoped="" ref="0x2ba15c429340"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c4294d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c429660"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c4297f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c429980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15c429c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15c429c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15c428020"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15c4281b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15c428340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15cf303b0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15cf303b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cf30730"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cf308c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cf30a50"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cf30be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cf30d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15cf2f020" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15cf2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cf2f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15cf2f530"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cf2f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cf2f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15cf2f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15cf2fc30" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15cf2fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15cf2e020"/>
        <function-ref name="source" scoped="" ref="0x2ba15cf2e1b0"/>
        <function-ref name="address" scoped="" ref="0x2ba15cf2e340"/>
        <function-ref name="destination" scoped="" ref="0x2ba15cf2e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15cf2e660"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15cf2e7f0"/>
        <function-ref name="type" scoped="" ref="0x2ba15cf2e980"/>
        <function-ref name="setType" scoped="" ref="0x2ba15cf2eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15cf2eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15cf2ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15cf2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15cf2d2b0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15cf2d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15cf2d630"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15cf2d7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15cf2d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15cfd3640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15cfd3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cfd39c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cfd3b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cfd3ce0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cfd3e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cfd2030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ba15cfd22e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15cfd22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cfd2660"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cfd27f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cfd2980"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cfd2b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cfd2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ba15cfd1020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15cfd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15cfd13a0"/>
        <function-ref name="source" scoped="" ref="0x2ba15cfd1530"/>
        <function-ref name="address" scoped="" ref="0x2ba15cfd16c0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15cfd1850"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15cfd19e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15cfd1b70"/>
        <function-ref name="type" scoped="" ref="0x2ba15cfd1d00"/>
        <function-ref name="setType" scoped="" ref="0x2ba15cfd0020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15cfd01b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15cfd0340"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15cfd04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c41fdd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c41fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c41e180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c41e310"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c41e4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c41e630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c41e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c41f800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c41f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c41fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c41ea10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c41ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c41ed90"/>
        <function-ref name="source" scoped="" ref="0x2ba15c41d020"/>
        <function-ref name="address" scoped="" ref="0x2ba15c41d1b0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c41d340"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c41d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c41d660"/>
        <function-ref name="type" scoped="" ref="0x2ba15c41d7f0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c41d980"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c41db10"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c41dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c41de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15c41a530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15c41a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c41a8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c41aa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c41abd0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c41ad60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c419020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c419270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c419270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c4195f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c419780"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c419910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c419aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c419c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c419e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c419e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c418220"/>
        <function-ref name="source" scoped="" ref="0x2ba15c4183b0"/>
        <function-ref name="address" scoped="" ref="0x2ba15c418540"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c4186d0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c418860"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c4189f0"/>
        <function-ref name="type" scoped="" ref="0x2ba15c418b80"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c418d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c416020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c4161b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c416340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15c4165d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15c4165d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15c416950"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15c416ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15c416c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15cfb6920" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15cfb6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cfb6ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cfb6e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cfb5020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cfb51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cfb5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15cfb5590" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15cfb5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cfb5910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15cfb5aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cfb5c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cfb5dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15cfb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15cfb4270" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15cfb4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15cfb45f0"/>
        <function-ref name="source" scoped="" ref="0x2ba15cfb4780"/>
        <function-ref name="address" scoped="" ref="0x2ba15cfb4910"/>
        <function-ref name="destination" scoped="" ref="0x2ba15cfb4aa0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15cfb4c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15cfb4dc0"/>
        <function-ref name="type" scoped="" ref="0x2ba15cfb3020"/>
        <function-ref name="setType" scoped="" ref="0x2ba15cfb31b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15cfb3340"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15cfb34d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15cfb3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15cfb38f0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15cfb38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15cfb3c70"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15cfb3e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15cfb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15cfa9b20" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15cfa9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cfa8020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cfa81b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cfa8340"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cfa84d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cfa8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ba15cfa8910" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15cfa8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cfa8c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cfa8e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cfa6020"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cfa61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cfa6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ba15cfa6590" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15cfa6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15cfa6910"/>
        <function-ref name="source" scoped="" ref="0x2ba15cfa6aa0"/>
        <function-ref name="address" scoped="" ref="0x2ba15cfa6c30"/>
        <function-ref name="destination" scoped="" ref="0x2ba15cfa6dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15cfa5020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15cfa51b0"/>
        <function-ref name="type" scoped="" ref="0x2ba15cfa5340"/>
        <function-ref name="setType" scoped="" ref="0x2ba15cfa54d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15cfa5660"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15cfa57f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15cfa5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c413710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c413710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c413a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c413c20"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c413db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c412020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c4121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c413140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c413140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c4134c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c412400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c412400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c412780"/>
        <function-ref name="source" scoped="" ref="0x2ba15c412910"/>
        <function-ref name="address" scoped="" ref="0x2ba15c412aa0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c412c30"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c412dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c411020"/>
        <function-ref name="type" scoped="" ref="0x2ba15c4111b0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c411340"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c4114d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c411660"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c4117f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15c40e020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15c40e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15c40e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c40e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c40e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15c40e850"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15c40e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c40ec30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c40ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c40d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c40d1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c40d340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c40d4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c40d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c40d8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c40d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c40dc30"/>
        <function-ref name="source" scoped="" ref="0x2ba15c40ddc0"/>
        <function-ref name="address" scoped="" ref="0x2ba15c40c020"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c40c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c40c340"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c40c4d0"/>
        <function-ref name="type" scoped="" ref="0x2ba15c40c660"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c40c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c40c980"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c40cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c40cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15c40b020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15c40b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15c40b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15c40b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15c40b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15cf8a140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15cf8a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15cf8a4c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cf8a650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cf8a7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15cf8a970"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15cf8ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15cf8ad50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15cf8ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15cf89100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15cf89290"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15cf89420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15cf895b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15cf89740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15cf89990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15cf89990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15cf89d10"/>
        <function-ref name="source" scoped="" ref="0x2ba15cf88020"/>
        <function-ref name="address" scoped="" ref="0x2ba15cf881b0"/>
        <function-ref name="destination" scoped="" ref="0x2ba15cf88340"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15cf884d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15cf88660"/>
        <function-ref name="type" scoped="" ref="0x2ba15cf887f0"/>
        <function-ref name="setType" scoped="" ref="0x2ba15cf88980"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15cf88b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15cf88ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15cf88e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ba15cf87120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ba15cf87120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ba15cf874a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ba15cf87630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ba15cf877c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ba15d030390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ba15d030390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15d030710"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15d0308a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15d030a30"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15d030bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15d030d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ba15d02f060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ba15d02f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ba15d02f3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15d02f570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15d02f700"/>
        <function-ref name="cancel" scoped="" ref="0x2ba15d02f890"/>
        <function-ref name="sendDone" scoped="" ref="0x2ba15d02fa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ba15d02fc70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15d02fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15d02e020"/>
        <function-ref name="source" scoped="" ref="0x2ba15d02e1b0"/>
        <function-ref name="address" scoped="" ref="0x2ba15d02e340"/>
        <function-ref name="destination" scoped="" ref="0x2ba15d02e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15d02e660"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15d02e7f0"/>
        <function-ref name="type" scoped="" ref="0x2ba15d02e980"/>
        <function-ref name="setType" scoped="" ref="0x2ba15d02eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15d02eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15d02ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15d02d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2ba15c4b7900" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2ba15c4b7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2ba15c4b67f0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2ba15c4b7e10"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2ba15c4b6020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c4b61b0"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2ba15c4b6340"/>
        <function-ref name="start" scoped="" ref="0x2ba15c4b64d0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2ba15c4b6660"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c4b7c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2ba15d0109f0" loc="9:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2ba15d0109f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15d00b020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15d00d510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15d00c300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15d00de10"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15d00b920"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15d00b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15d00d990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15d00e670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15d00c910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15d00eb40"/>
        <function-ref name="stop" scoped="" ref="0x2ba15d00d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2ba15d015570" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2ba15d015570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15d011a20"/>
        <function-ref name="fired" scoped="" ref="0x2ba15d012020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15d012da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15d012920"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15d0104a0"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15d010020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15d0124a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15d0131b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15d011410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15d013680"/>
        <function-ref name="stop" scoped="" ref="0x2ba15d013b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2ba15d01a0a0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2ba15d01a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15d016630"/>
        <function-ref name="fired" scoped="" ref="0x2ba15d018b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15d017920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15d0174a0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15d015020"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15d016ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15d017020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15d01ac90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15d016020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15d0181b0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15d018680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2ba15d01cde0" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2ba15d01cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2ba15d01bc70"/>
        <function-ref name="slotStarted" scoped="" ref="0x2ba15d01b310"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2ba15d01b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15d01b630"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2ba15d01b7c0"/>
        <function-ref name="start" scoped="" ref="0x2ba15d01b950"/>
        <function-ref name="slotEnded" scoped="" ref="0x2ba15d01bae0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2ba15d01b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ba15d007310" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ba15d007310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15d004870"/>
        <function-ref name="fired" scoped="" ref="0x2ba15d006e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15d005c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15d005780"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15d0021e0"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15d004cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15d005300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15d006020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15d004260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15d0064f0"/>
        <function-ref name="stop" scoped="" ref="0x2ba15d0069c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ba15d001a70" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ba15d001a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cffd020"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cfff510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15cffe300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15cfffe10"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15cffd920"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15cffd4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cfff990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15d0006b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15cffe910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15d000b80"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cfff090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ba15cffa240" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ba15cffa240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15cff76e0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15cff9c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15cff8a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15cff85f0"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15cff5020"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15cff7b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15cff8170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15cffae30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15cff70d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15cff9340"/>
        <function-ref name="stop" scoped="" ref="0x2ba15cff9810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ba15c4b4c20" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ba15c4b4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ba15c4b3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ba15c4b31b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ba15c4b3340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ba15c4b34d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ba15c4b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ba15c4b4650" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ba15c4b4650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ba15c4b49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ba15c4b38b0" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ba15c4b38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ba15c4b3c30"/>
        <function-ref name="source" scoped="" ref="0x2ba15c4b3dc0"/>
        <function-ref name="address" scoped="" ref="0x2ba15c4b2020"/>
        <function-ref name="destination" scoped="" ref="0x2ba15c4b21b0"/>
        <function-ref name="setSource" scoped="" ref="0x2ba15c4b2340"/>
        <function-ref name="setDestination" scoped="" ref="0x2ba15c4b24d0"/>
        <function-ref name="type" scoped="" ref="0x2ba15c4b2660"/>
        <function-ref name="setType" scoped="" ref="0x2ba15c4b27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ba15c4b2980"/>
        <function-ref name="setGroup" scoped="" ref="0x2ba15c4b2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2ba15c4b2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2ba15c4a78b0" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2ba15c4a78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ba15ab23460"/>
            <typename><typedef-ref name="T32khz" ref="0x2ba15ab22020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ba15c4a4cf0"/>
        <function-ref name="fired" scoped="" ref="0x2ba15c4a5310"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ba15c4a40d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ba15c4a5c10"/>
        <function-ref name="getdt" scoped="" ref="0x2ba15c4a2660"/>
        <function-ref name="gett0" scoped="" ref="0x2ba15c4a21e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ba15c4a5790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ba15c4a64c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ba15c4a46e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ba15c4a6990"/>
        <function-ref name="stop" scoped="" ref="0x2ba15c4a6e60"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ba15aaec5d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15ab22dd0" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15ab22dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ba15ab1bc10" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ba15ab1e420" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ba15ab1c2b0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ba15ab1dbd0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ba15ab1c020" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ba15ab1d420" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ba15ab1ac60" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ba15ab1a3e0" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ba15ab1ec00" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ba15ab21970" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ba15ab216f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ba15ab1b2b0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ba15ab1cc50" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ba15ab1b020" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ba15ab204d0" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ba15ab20250" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ba15ab20cd0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ba15aae5970" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ba15aae5020" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ba15aae53a0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15aae56d0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ba15aafd160" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15aaffae0" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15aaffe10" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ba15aaff270" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ba15ab01cd0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ab01a50" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ba15ab003a0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ab02d70" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ba15ab00110" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMALinkControl" loc="1:TDMALinkControl.nc">
      <function command="" provided="0" name="isMaster" ref="0x2ba15aae8020" loc="5:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startDone" ref="0x2ba15aae8960" loc="6:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ba15aae86e0" loc="6:TDMALinkControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startSlave" ref="0x2ba15aaea0e0" loc="3:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ba15aae72e0" loc="7:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ba15aae7060" loc="7:TDMALinkControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMaster" ref="0x2ba15aaee950" loc="2:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ba15aaea7d0" loc="4:TDMALinkControl.nc">
        <interfacedef-ref qname="TDMALinkControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ba15aaf9300" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
              <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15aaeb870" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ba15aaebbc0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15aaf9020" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ba15ab0a040" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ba15aae2590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab0cd90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ba15ab13bc0" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab13940" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ba15aaf6020" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ba15aaf6ae0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15aaf6860" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ba15ab11600" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab11020" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ba15ab11370" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ba15ab14020" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab129e0" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ba15ab12d30" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ba15ab0dae0" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab0d860" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ba15ab0be60" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab0b8b0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ba15ab0bbd0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ba15aae21b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ba15ab0e890" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab0e610" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ba15ab08600" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ba15aae2590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ba15ab08020" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ba15ab08370" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ba15aae2590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ba15ab07490" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ba15aae2590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ba15ab3fd00" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2ba15ab73b40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2ba15ab75de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2ba15ab73420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2ba15ab75700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2ba15ab745a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2ba15ab56900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2ba15ab75020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2ba15ab74cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ba15a703b70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ba15a6bbc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2ba15abc9020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2ba15abcacc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2ba15abab390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ba15ab6a910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ba15ab69390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2ba15abc9890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2ba15abc87b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2ba15abca560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2ba15abc8020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2ba15ababb30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2ba15abcb350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ba15abcbda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ba15ab6a910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ba15ab69390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ba15abcbb20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ba15ab6a910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ba15ab69390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2ba15abbb0e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2ba15abdc630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2ba15abdc3b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ba15abdb2a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ba15abdb020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ba15abddbe0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ba15abdd3e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2ba15abbba90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2ba15abbb810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2ba15abc23e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2ba15abc2d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ba15abc2ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2ba15abc1790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2ba15abc1510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2ba15abc02a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2ba15abc0020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ba15abc0990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ba15abb2810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2ba15abaf2a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2ba15abaf020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2ba15abb0020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ba15abb7ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2ba15abb0760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ba15abb49b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ba15abb2120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ba15abb4270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ba15abb30e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2ba15abb39f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ba15abb3770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2ba15abafcb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2ba15abafa30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ba15ac009f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ba15aa4d2b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ba15a841420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ba15a5fd020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ba15a5fc020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ba15a5fd790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ba15a60f020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ba15a60f870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ba15ad10ab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ba15ad10830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ba15ad36020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ba15ad0fd30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ba15ad13d70" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ba15ad0f350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15ad11bb0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15ad11bb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ba15ad11df0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15ad11df0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2ba15ad2b430" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15ad11df0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ba15ad2c710" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ba15ad2ca90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15ad2cdc0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2ba15ad2b180" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15ad11df0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ba15ad27ab0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad274b0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15ad277e0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ba15ad28bf0" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ba15ad292a0" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad29020" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ba15ad282b0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad29c40" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ba15ad28020" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ba15ad42870" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ba15ad42070" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15ad23b90" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15ad23b90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ba15ad23dd0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15ad23dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2ba15ad48980" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad48700" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2ba15ad475f0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15ad23dd0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad47370" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2ba15ad2f040" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad31d90" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2ba15ad33020" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad128b0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2ba15ad12c40" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2ba15ad31020" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad32c40" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2ba15ad32410" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad33dd0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2ba15ad32180" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2ba15ad2e020" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15ad2fd70" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2ba15ad5d020" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2ba15ad5c110" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2ba15ad5de60" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2ba15ad5d790" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ba15ad5f720" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2ba15ad5e820" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2ba15ad5e5a0" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ba15ad5f020" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2ba15ad3a980" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2ba15ad3acf0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2ba15ad5caa0" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2ba15ad5c820" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ba15ad5fe10" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ba15adcf830" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ba15adce070" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2ba15adf0a00" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2ba15adf0780" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ba15adcca40" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ba15adcc7c0" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ba15adc98c0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ba15adc92d0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2ba15adc9630" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ba15ade35f0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ba15ade3020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15ade3360" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2ba15adde390" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ba15adde110" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ba15ae082b0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ba15addeb90" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15ae08020" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2ba15addf020" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2ba15ae07bb0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ba15ae07280" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15ae075c0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ba15ae07910" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2ba15addf910" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ba15ade0020" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ba15ade2570" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15ade28b0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ba15ade2c00" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ba15ae5e7f0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ba15ae5d190" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2ba15ae59230" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ba15ae28920"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ba15ae28d40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ba15ae60020" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ba15ae61020" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ba15ae62540" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ba15ae61810" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ba15ae60a80" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ba15ae53840" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ba15ae53020" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2ba15ae782e0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15ae78060" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2ba15ae4d8a0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2ba15ae81af0" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2ba15ae8d790" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2ba15ae6b390" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15ae00960"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2ba15adff230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ba15ae6b110" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15ae00960"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2ba15adff230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2ba15ae8f7b0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2ba15ae69880" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15adfb950"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2ba15adfa230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ba15ae69600" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15adfb950"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2ba15adfa230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2ba15ae86e70" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2ba15ae82480" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2ba15ae6ae00" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15adfe880"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2ba15adfd090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2ba15ae670e0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15adfb950"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2ba15adfa230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2ba15ae65dc0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2ba15ae65b40" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2ba15ae65420" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2ba15ae86740" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2ba15ae6a610" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15adfe880"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2ba15adfd090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ba15ae6a390" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15adfe880"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2ba15adfd090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2ba15ae66270" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2ba15ae855d0" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2ba15ae66c50" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2ba15ae669d0" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2ba15ae90730" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2ba15ae8f020" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2ba15ae87840" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2ba15ae8a790" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2ba15ae8e7e0" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2ba15ae86020" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2ba15ae8b020" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2ba15ae85cf0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ba15ae645f0" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2ba15ade4790"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2ba15ae01020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2ba15ae844c0" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2ba15ae81350" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2ba15ae67a80" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2ba15ae67800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2ba15ae804d0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15ae80250" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2ba15ae6bb70" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ba15ae00960"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2ba15adff230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2ba15ae8e020" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2ba15ae8b770" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2ba15ae87020" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ba15ae28920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ba15ae28d40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ba15ae89cf0" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ba15ae28920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ba15ae28d40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2ba15ae892a0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ba15ae108d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ba15ae10cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ba15ae89020" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ba15ae108d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ba15ae10cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2ba15ae80d90" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2ba15ae84cb0" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2ba15ae64e00" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2ba15ae82be0" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2ba15ae8a020" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2ba15ae8d020" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15aea5410" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15aea5410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ba15aea5650" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15aea5650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ba15aea4020" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15aea5650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ba15aea3120" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ba15aea48a0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ba15aea3880" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ba15ae9b020" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ba15ae9b7d0" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ba15ae9a020" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ba15ae98020" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ba15ae977d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ba15ae96020" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ba15ae9a7b0" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ba15ae96b90" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ba15ae96910" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ba15ae9c850" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ba15ae98800" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ba15ae97020" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ba15af18390" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ba15af18be0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ba15af357c0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ba15af34020" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2ba15af30b10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ba15af30890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ba15af06020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ba15af32020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2ba15af2f490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ba15af34760" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ba15af35020" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2ba15af31770" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2ba15af067c0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ba15af070e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2ba15af327a0" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2ba15af30020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2ba15af31020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ba15af07810" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ba15b1d7020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ba15b1d7750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ba15b1d90e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ba15b1d65e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ba15b1d97e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ba15b1d7e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ba15b1da2b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ba15b1da980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ba15b232460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ba15b232cc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ba15b25ba40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ba15b27be00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2ba15b279020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ba15b27b570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ba15b27a6d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ba15b279950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ba15b26e020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ba15b274090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ba15b26fd20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ba15b274090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ba15b270020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ba15b270b20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ba15b274090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ba15b2708a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ba15b274090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ba15b26f470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ba15b274090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2ba15b2fb770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ba15b3247a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b324520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ba15b322840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b3225c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ba15b31fd30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b31f730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15b31fa60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ba15b321da0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ba15b320ce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b320720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15b320a50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ba15b359ad0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b359850" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ba15b356cd0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b356a50" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ba15b355020" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b357ce0" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ba15b349460" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b34ce70" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15b3491d0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ba15b346a40" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b346440" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15b346770" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ba15b344b80" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ba15b347790" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b347510" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ba15b345c70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b345690" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ba15b3459e0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2ba15b3a9670" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b3a9060" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2ba15b3a93e0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2ba15b3ab820" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2ba15b3aa6d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b3aa0d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2ba15b3aa440" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2ba15b3cd960" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2ba15b3cd1f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2ba15b3dfc30" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2ba15b3d40e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2ba15b3d2d00" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b3d2a80" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2ba15b3d4960" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2ba15b3d57e0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b3d5560" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2ba15b3d15b0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2ba15b3d2270" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2ba15b3dd780" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2ba15b3dc0e0" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2ba15b3e0d90" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2ba15b3e0b10" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2ba15b3dcc60" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ba15b3dc9e0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2ba15b3d98f0" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2ba15b3d85b0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b3d8330" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2ba15b3d70b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ba15b3d8e00" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15b5237a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15b5237a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ba15b5239e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5239e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ba15b51e840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5239e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b51e5c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ba15b51c9d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b51c750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ba15b51f5f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b51f370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ba15b562d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5239e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b562710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ba15b562a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5239e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ba15b557e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b557810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ba15b557ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ba15b555020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b556d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ba15b557020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ba15b559560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ba15b5592e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2ba15b578430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b5781b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2ba15b57a720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b57a4a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2ba15b57ddc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ba15b57db40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2ba15b57d2a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ba15b57d020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2ba15b57c880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2ba15b57c600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2ba15b5795e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b579360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2ba15b572630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ba15b572020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ba15b5723a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2ba15b5870c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b53faa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2ba15b53fdf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2ba15b5836d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b5830d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2ba15b583440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2ba15b587ba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2ba159f1f110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b587920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2ba15b584600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b584380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2ba15b53f2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b53f020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2ba15b585720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b5854a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2ba15b57f0b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b540de0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ba15b598360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b5a1d40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2ba15b5980d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ba15b5966a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2ba15b594e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ba15b594060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ba15b5948a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15b594bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ba15b595840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ba15b595260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ba15b5955b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2ba15b598df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2ba15b598b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2ba15b58cde0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b58cb20" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2ba15b58c320" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2ba15aaa6ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2ba15aaa3c70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b58c020" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2ba15b589130" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2ba15aaa27c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2ba15aaa0660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15b58bde0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2ba15b59e070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2ba15b59b0e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2ba15b59c8f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2ba15b5a0730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2ba15b59f7e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2ba15b59e8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2ba15b59c120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2ba15b59f020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2ba15b5ce7f0" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2ba15b5d1ce0" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2ba15b5ce020" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2ba15b5d0c40" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2ba15b5d04a0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2ba15b58f9f0" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ba15b58f770" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2ba15b5d1500" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ba15b5d1280" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2ba15b60a020" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2ba15b60b9f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2ba15b60bd40" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2ba15b60d960" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2ba15b60d020" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2ba15b60e820" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2ba15b60ec00" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2ba15b6132a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ba15b613020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2ba15b60b270" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2ba15b610d70" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ba15b610af0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ba15b6123e0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ba15b612160" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2ba15b609270" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2ba15b60e020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ba15b60fc50" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2ba15b60aa20" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2ba15b612b60" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ba15b553360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ba15b553ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2ba15b610390" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2ba15b614850" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ba15b6139f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2ba15b60f530" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2ba15b608c60" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ba15b608c60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ba15b605560" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ba15b6042f0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ba15b608c60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ba15b605ce0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2ba15b604060" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ba15b608c60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ba15b625520" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ba15aaa7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b6252a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ba15b624030" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ba15aaa7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b625d80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2ba15b643640" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ba15b553360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ba15b553ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15b5f98b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15b5f98b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ba15b5f9af0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ba15b63d800" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ba15b6407e0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ba15b63fe10" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ba15b63f840" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ba15b63fb80" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ba15b63f020" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ba15b63c020" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ba15b641680" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ba15b641400" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15b5f9af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ba15b640020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ba15b62e0e0" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ba15b62d070" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ba15b62e8c0" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ba15aae2590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ba15b62f860" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ba15aae2590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ba15b62f280" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ba15aae2590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ba15b62f5d0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ba15aae2970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2ba15b61e760" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ba15aaa7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ba15b62a840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ba15aaa7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ba15b6349b0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ba15b62a250" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ba15b62a5a0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ba15b627020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ba15aaa7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ba15b628150" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ba15b6289c0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ba15b628d10" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ba15b6327e0" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ba15b632020" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2ba15b633720" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2ba15b636dc0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2ba15b7e0030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ba15b7df1f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ba15b7e09d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ba15b7e0750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2ba15b7e17a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ba15b813020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ba15b811ac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ba15b8147c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2ba15b8112a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2ba15b811020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ba15b814020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2ba15b813820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2ba15b9042b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2ba15b904b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2ba15b902390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2ba15b933b60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b933580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ba15b9338d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2ba15b92edd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b92e490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ba15b92e7e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ba15b92eb30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ba15b9306b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ba15aaa7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b9300d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ba15b930420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2ba15b935730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ba15aaa7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b935150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ba15b9354a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ba15b9312c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b932930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ba15b932c80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ba15b931020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ba15b96dcf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ba15b96d380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ba15b96d710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15b96da50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ba15b96b3c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ba15b9696a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ba15b969a30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15b969d70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ba15b96b110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2ba15b971c90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2ba15b971a10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2ba15b9e5120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ba15ae108d0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ba15ae10cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2ba15b9edd70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b9edaf0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2ba15b9e82a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b9e8020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2ba15b9e9610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ba15b9e8d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15b9e8ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2ba15bab69d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2ba15ba6a420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2ba15babd620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ba15babd3a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2ba15ba73af0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2ba15babac50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2ba15bac25e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2ba15ba6b540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2ba15bac72d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2ba15ba6d500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2ba15ba6d280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2ba15ba6fa10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2ba15bac4070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2ba15babb550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2ba15bab6270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2ba15babec30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2ba15bab1350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2ba15baad9d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2ba15ba72980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2ba15bac58b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2ba15bac31f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2ba15ba6ddc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2ba15ba748c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2ba15babe460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ba15babe1e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2ba15ba74190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2ba15baba4d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2ba15bab5190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2ba15bab0b00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2ba15baad270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2ba15bab9b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2ba15bab58c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2ba15babddb0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2ba15bab2390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2ba15ba700e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2ba15bac07e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2ba15bab47b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2ba15bab7ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2ba15bac3de0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2ba15bac3b60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2ba15baaf2d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2ba15babfa60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2ba15bab9420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2ba15ba73390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ba15ae418d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2ba15ae41cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ba15ba73110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ba15ae418d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2ba15ae41cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2ba15bac5190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2ba15ba6f2a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ba15ba6f020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2ba15bac49d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ba15bac4750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2ba15bab2b60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2ba15ba6eb50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2ba15ba70850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2ba15babf2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2ba15babf020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ba159f20520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2ba15ba72270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2ba15bab4020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2ba15bab7350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2ba15babbcc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2ba15bac0020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2ba15bac2d30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2ba15bac79f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2ba15ba6bc80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2ba15baafa40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2ba15ba6e3c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ba15ba6e140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2ba15bab1b10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2ba15ba6ab50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2ba15bab0350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ba15bd01620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ba15bd013a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ba15bd56bc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2ba15bd56280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ba15bd565f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15bd56920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ba15bd55960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ba15bd553a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ba15bd556d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15bd3e730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15bd3e730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ba15bd3e970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15bd3e970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2ba15bd3b4d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15bd3e970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ba15bd3b250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ba15bd3e970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2ba15bdad5e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ba15bdee9e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ba15bdee020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2ba15bdee750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2ba15bdef7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2ba15bdef020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ba15bdf2d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2ba15bd952a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ba159f20160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15bd95020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ba15bd962a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ba15a5f5090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15bd96020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ba15bd932a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15bd93020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ba15bd942a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ba15bd94020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ba15aaf43c0"/>
                <typename><typedef-ref name="message_t" ref="0x2ba15aaf3a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ba15bf1d910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ba15bf1d910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ba15bf1a270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ba159f20920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ba15c0b0600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ba15c0b0600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ba15c0ac2a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ba15a604980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ba15c0b0600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ba15c0ac020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ba15c0b0600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
