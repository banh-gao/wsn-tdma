<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b468ed6c9a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b468edc2020"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b468edc2020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b468ef68590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="LinkCtrl" scoped="" ref="0x2b468ed67470"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468edc3570"/></to>
    </wire>
    <wire loc="61:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2b468edc3570"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef9b480"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="LinkSnd" scoped="" ref="0x2b468ed8a650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b468efa2710"/></to>
    </wire>
    <wire loc="58:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b468efa2710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b468ef9a020"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="LinkRcv" scoped="" ref="0x2b468ed94020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468efa20c0"/></to>
    </wire>
    <wire loc="55:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b468efa20c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b46907c2650"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2b468ed9ae40"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46907b5680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b46907b5680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46906e7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b468ed75370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7d1020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b469045edd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46903f6b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4690415750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46903b7080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46902a8130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b469017b620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46900b9820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f95c7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4690f91a40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468fc40020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f893d60"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f5ffe60"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f588780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4690cc3ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f0592a0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b468ef68c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b468e87c3a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b468e87c3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b468ecd2140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b468ef866c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468edc13d0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b468edc13d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468edbb5d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b468ef86dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b468edbbce0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b468edbc910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b468edbc910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468eddd850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b468edba400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468edbd6d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b468edbaae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f47fc40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b468eddd850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468ede67e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b468edf6de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b468ee07020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b468ea29080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b468ee06360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b468ee4a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468eef26d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b468ee5b020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef10b30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b468ee41700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468eef7160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b468ee6ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef1dcb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b468ee48aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468eef8480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b468ee4f020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef1d020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b468ee69a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef2bcb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b468ee565a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef16220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b468ee4bb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468eeb49d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b468ee6ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef062f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b468ee513e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef07610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b468ee5a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef08220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b468ee40700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468eef07a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b468ee6ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef3a2f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b468ee59be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef266d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b468ee47890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468eef1ac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b468ee3a060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee9fc80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b468ee4fda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef15610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b468ee2f0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468eef9020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b468ee55a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef356d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b468ee3b690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef00a90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b468ee6da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef247a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b468ee44cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef01de0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b468ee501f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef25ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b468ee6aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef337a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b468ee570c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef1fb30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b468ee4eb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef34ac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b468ee6fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468ef0ecb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b468ee4da20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef2b020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b468ee52570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b468ef0e020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b468ee53020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b468ef2db30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b468ee9dc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee9d5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b468ee9c2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b468ef4caa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b468ee9c940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b468ef49260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468eefe930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee9fc80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468eefc020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee9d5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468eef6020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee9fc80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468eef57a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee9d5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468eeef610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee9fc80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef13c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee9d5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b468ee96c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b468ee952f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b468ef499f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b468ee95940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b468ef48240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468ef0db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef0b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468ef05160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef037a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468ef23610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef22c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468ef1cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef1a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468ef39160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef387a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468ef32610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef31c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b468ef2ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b468ef282f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468ecd0040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b468eccd5d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b468e8ec2d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b46907c2650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f7b4210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b468ef993b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b468ef98b60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f7b6020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b468f7b6020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f7d6680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b468ef96020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b46904b7020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b46904b7020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b46904b2080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2b468efa6a90"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b46905adc50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b46905adc50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b4690594b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2b468efaedf0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b46905b0aa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2b468efacc70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b46905b65c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRandom" scoped="" ref="0x2b468efca8d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b46903bda20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b46903bda20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b46903b6a20"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2b468efa4310"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46906f1680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b46906f1680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46906e7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2b468efc66c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b469073ab30"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b469073ab30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b46912403b0"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2b468efc5500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b469072d800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b469072d800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f7b4210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b468efc5cc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4690728530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4690728530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b46912c6920"/></to>
    </wire>
    <wire loc="43:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b468efc4a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4690721140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4690721140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f7b4210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2b468efc3110"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b469071c020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b469071c020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b469129a140"/></to>
    </wire>
    <wire loc="51:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b468efbb9d0"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b46907c5900"/></to>
    </wire>
    <wire loc="13:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b46907c5900"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b469132cde0"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b468f05b440"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b468f053a30"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2b468f0345a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b468f05ae30"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b468f05ae30"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b468f5997a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b468f0531e0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b468f0727c0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b468f0727c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b468f59b060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b468f589430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b468f052960"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b468f59b060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b468f0de560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b468f066660"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b468f59c0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b468f59c0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b468f0e1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f59b800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f596080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f5966f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f55ec00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f55ec00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f0b74d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f59d8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690965c70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690965c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f4b22c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f0db6c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f59b800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b469095fd70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f0e21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b468f0dd3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690965020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4690965020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f4b4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468f0d7c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b469095f5d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b469095f5d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b468f4b51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f0e21d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f15ddc0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b468f0de560"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b468f15b890"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b468f0e1020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b468f15c6d0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f0b74d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f15d020"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f159020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f0db6c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b468f15a230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b468f0dd3f0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468f184290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468f0d7c20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b468f159690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468f1778b0"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468f1778b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b468f19c020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b468f184c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468f4189a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b468f4189a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b468f4139d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468f181dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f4302a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b468f1713b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b468f198dc0"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f177080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f170710"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b468f18c860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2b468f2913f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b468f2913f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f38a100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b468f195800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2b468f28f3f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b468f28f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f386d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b468f189800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2b468f28d3f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b468f28d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f381740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b468f187800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2b468f2883f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b468f2883f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f34c740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b468f1b5800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2b468f28a3f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b468f28a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f351d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b468f231cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2cfd10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b468f21ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f30b740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b468f26b3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f333740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b468f2ae3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3bdd10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b468f2693f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f32d100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b468f24acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f338d10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b468f235020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f33d740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b468f253020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f37c100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b468f277020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f38e740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b468f2973f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f324740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b468f2863e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3a2d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b468f2a63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3b8740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b468f22bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2f7d10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b468f2953f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f31f100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b468f227cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2ed100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b468f244cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f329d10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b468f262020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f366740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b468f24d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3a6100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b468f271020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3b8740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b468f203cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2d8740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b468f221cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f314260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b468f23ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f351d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b468f26d3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f333740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b468f2803e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f393d10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b468f2a83e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3b8740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b468f23acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3473f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b468f258020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f386d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b468f27b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f397100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b468f2b23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f38e740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b468f2933e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f358740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b468f22fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f300740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b468f21acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f306100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b468f24b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3a2d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b468f248cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f333740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b468f233020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f36f100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b468f251020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f378d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b468f275020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3c1100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b468f209e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2e23f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b468f225cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2e8d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b468f242cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f324740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b468f260020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f361100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b468f2843e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f39c740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b468f2ac3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3b8740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b468f25c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f358740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b468f201cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2d3100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b468f21fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f310d10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b468f23ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f34c740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b468f2b03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3c1100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b468f237020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f342e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b468f256020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f381740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b468f279020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f393d10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b468f22dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2fb100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b468f27d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f39c740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b468f229cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2f2740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b468f246cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f32d100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b468f264020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f36bd10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b468f24f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f373740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b468f273020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3bdd10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b468f205cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f2dee00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b468f223cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f319740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b468f240cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f31f100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b468f25e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f35dd10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b468f2653d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f329d10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b468f2823e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f397100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b468f2673f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f329d10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b468f25a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f38a100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b468f2aa3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3bdd10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b468f2a43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f3a6100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b468f26f060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b468f338d10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b468f4139d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468f448b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f43ac50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b468f47fc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f433c40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b468f463910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b468f482360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b468f482360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468f47c710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b468f469b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b468f4816a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b468f4816a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468f4a31d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b468f468e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b468f4809c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b468f4809c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468f49fd70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468f46b930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2b468f253020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468f4a2480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2b468f251020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468f49c020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2b468f24f020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b4690964be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468f1778b0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690964440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f4b2ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f4b2ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f552400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f4b18a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b469095fd70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f4b22c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f553020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f553020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690cbf3a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b468f4b51d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b468f4afb60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f4b4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f554210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f554210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690cc0540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f552400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690cbd8b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b468f4d8c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b468f1713b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f552cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f4b18a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f4d7a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f552400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468f5769d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468f5537a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468f5537a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b4690cbfb20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f54db20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f177080"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4690cbc210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f552cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b4690cbc9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b4690cc2330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b4690cbac50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b4690d393a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f54db20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b4690d39b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b468f576400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b4690d370f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468f5769d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690d37d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f575720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b468f588de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b468f589430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b468f5bd020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b468edc2020"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b468f5bd740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f5b6320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b468f5b6320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f63e4e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b468f63e4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f62d2f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b468f5b5370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b468f59fb40"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b468f5b3020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f603720"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b468f5b4530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f6059e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f5a7080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f602400"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b468f5b3c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f604020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b468f5ffe60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f62ec30"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468f63a940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f5a7a00"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b468f602d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b468f63b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b468f601a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f63c4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b468f63a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b468f7816c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b468f63b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b468f766830"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b468f63c4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f766110"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b468f765760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b468f63a020"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468f6258e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f63a940"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468f762590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f63a940"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468f75ac80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f63a940"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b468f7640e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b468f6225c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b468f7649d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b468f626130"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b468f65e8e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b468f75eb70"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b468f65d060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b468f05ae30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b468f75bca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b468f066660"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b468f690e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b468f683d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b468f692400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b468f68b0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b468f761c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b468f760480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b468f7d6680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f7fb340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b468f7b5050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b468f7d57f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b468f7d57f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b46904deda0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b468f7b4df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b468f7d2880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b468f7d2880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b46904dcc00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7d0760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b468f7d0760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b46904da8f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b468f7a69e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690243550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690243550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690235a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7e28a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7c4bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7c4bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7f4700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b468f7b4210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f7d3b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b468f7d3b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b46904dc020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7b0800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7ce810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7ce810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7f5670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b468f7d1020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b46904db2d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b468f7a5af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b469023f660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b469023f660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4690231af0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b468f7fb340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b46904ccb80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b468f805d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b46904d7830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b468f802500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b46904d9b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b468f7c7970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b468f7f6740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b468f7f6740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7f4700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b46904cc080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7f5670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b46901d56e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b468f7c2790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b468f7f22e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b468f7f22e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b46904b7020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b468f7c3a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b468f7f4080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b468f7f4080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4690244a70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b46904cf0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f7fa430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b46904d6860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b468f7f7350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b468f7f7350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b4690441ca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b46904d5690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b468f7f60f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b468f7f60f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b4690440a50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b46904d14d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b468ff47b30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b46904d5ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b469023ad20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46904d4b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b4690236640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b46904d3610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b468f896550"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b468f896550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b468f88c1a0"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b46904d01f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b468f7ed990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b468f7ed990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b468f7e7020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b46904cfd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b46904ccb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b46904c8d90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4690244a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4690235020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b4690441ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b4690437a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b46904cc080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b46904c42d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b468f7f9e70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b46904415f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b46904415f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b4690437370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b46901d56e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b4690237c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f7fa430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690444cb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4690444cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b46904397b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b468f7f9160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4690443960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4690443960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b46904384d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b468f7f8560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b469043f170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b469043f170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b4690434020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b4690440a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b4690436840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b46904c8d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f7f19f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b468f7f19f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f7e9690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b469043e6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b469039f220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b469039f220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4690418a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b469039e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b46904b82a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b46904b82a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b46904b53b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b46904b7d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4690456cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4690456cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b46904c9860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b46904c9860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b468f7ee600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b468f7ee600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b468f7e82e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b469043e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b46904cd980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b46904cd980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b46904c8690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b46904c8690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b46903fdaa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b46903fdaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b46903f9e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b46903fa950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f7ed300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b468f7ed300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b469017f7c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b469017f7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4690178020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f7e7e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f858020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468f858020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468f88d470"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b468f8283f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b468f8564b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b468f8564b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b468f88a020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b468f7e56f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b468ffd76d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b468f7e56f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b46901825c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b46901825c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b469017bca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b468ffd76d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b46900b8020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b468f81f2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b46900c0020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b46900c0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b46900b88c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b468f827060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b46900c0cb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b46900c0cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b46900b7650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b468f81ee20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b468f816430"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b468f827e80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b46903bda20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b468f811bc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b46903bfaa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b46903bfaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b468fc44280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468f826670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b468f80d5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b468f80e660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b468f80f730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b468f890890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b468f889500"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b468f87d790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b468f959220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b468f959220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b468f9532e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b468f87b9d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b468fa07370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b468fa07370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa4c1b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b468f87ace0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b468fa04ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b468fa04ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa3d710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b468f878020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b468fa53380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b468fa53380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa33d70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b468f8bec00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b468fa70210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b468fa70210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b468fb56a30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b468f8acb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468ff02e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468ff02e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fbb9960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b468f8abbb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b468feff7b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b468feff7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b468f8ad3b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b468fefeae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b468fefeae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b468f8ac440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b468ff00ad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b468ff00ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468f8adae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468fefd160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468fefd160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b468f8b0420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b468fef4870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b468fef4870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b468f8b0cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b468fef2880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b468fef2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b468f8b95d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b468fef10a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b468fef10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468f8b4020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468fef9e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468fef9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468f8b48f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468fef8670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468fef8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b468f8b5e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b468fee4500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b468fee4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b468f8b54a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b468fee5ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b468fee5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b468f8af1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b468fef5e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b468fef5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b468f8afa80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b468fef8e50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b468fef8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b468f8ae3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b468fef7e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b468fef7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b468f8a9880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468ff3aa80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468ff3aa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fbb9960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b468f8aaa10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468ff0d9e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468ff0d9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fbb9960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b468f8ba390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b468ff47b30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b468f884970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b468ff46d30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b468ff46d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b468ff91310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b468f8e92f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b468f89e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b468f95c7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b468f954a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b468f954a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4690ddd8e0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b468f9532e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4690ddc180"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4690ddd8e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4690dd6a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4690ddc180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4690dcf5f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4690dd6a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4690db9510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b4690dc9d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4690dd52a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4690dd52a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4690db9da0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4690dcb9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468f9d3020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b468f9d3020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468f9cd5f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b4690db4020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b4690dbe1b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b4690dbe1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b4690db3760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b4690dbd8f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b4690dbd8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b4690db2a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b4690dbcc10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b4690dbcc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b468ee5b020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b468ee52570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b468ee59be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b468ee501f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b468ee570c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b468ee4f020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b468ee565a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b468ee4fda0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b468ee55a50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b468ee4eb80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b468ee53020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b468ee4da20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b468fa01950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b468f4139d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b468fa066a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa47d70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b468fa059d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa42b70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b468fa080e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa51710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b468fa02020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa381b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa50930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b468f231cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa4a480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2b468f235020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa45020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b468f201cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa41de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b468f209e10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa3c930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2b468f260020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa37480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b468f237020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa31020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2b468f262020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b468fa6c5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b468fa57020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b468fa70e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b468fb9fa70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468fa57ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2b468ee5a5a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2b468fa56da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2b468ee6ea20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa55c20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b468f237020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b468fb55610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b468fa9cc40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b468fa9cc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b468fa88a30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b468fb9e610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b468fa9ee30"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b468fa9ee30"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b468fa8e9d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b468fa91bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2b468fad2bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b468fa99bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2b468fa85a30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b468fa97bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b468fa83a30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b468faa2d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2b468fa8aa30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b468fa93bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b468fa80a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b468fa9bbc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2b468fa87a30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b468fa90bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2b468fad1bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b468fa96bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2b468fa82a30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b468fa9dc80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b468fa89a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b468fa92c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2b468fad3bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b468fa9abc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2b468fa86a30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b468fa98bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2b468fa84a30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b468faa3d80"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2b468fa8ba30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b468fa95bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2b468fa81a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b468feff160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b468fef3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b468feeb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b468fef20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b468fedf500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b468fee1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b468fefe490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b468fee7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b468fee3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b468feed880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b468feee0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468ff01a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb6680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb6680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb0930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b468fefde00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b468fefb490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b468fee6c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b468fefbbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b468fee3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b468fee70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b468fef7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b468fee90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b468feeb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b468fee9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b468fee0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b468fee1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b468feee880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b468feea0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b468fee4ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b468fef1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b468fedfce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b468ff00480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b468fef9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b468fef5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b468feec0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b468feec880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b468fef30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b468fefa2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b468fef9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b468fefd7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b468fee5500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b468fee0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b468feed0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b468feea880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b468feffe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b468fef00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b468fefa940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b468fef0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b468fee60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b468fede9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fc04bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fc02020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fc02db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468fbb9960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fc05810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fc00ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b468fbfc020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b468fc48770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b468fc48770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b468fc44280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b468fbff400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fc82c40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468fc82c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690ec0e70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b468fbfd080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b468fc818f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b468fc818f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b4690ebd2c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b468fbf4680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b468fec3020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b468fec3020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b4690ebb440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468fbfcdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b468fbef120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b468fc44280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b468fc40b70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b4690ebb440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b468fc6c850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b4690ebd2c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b468fc6d020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4690ec0e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fc6f430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690ebeaf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690eb35d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690eb35d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b468fdaa2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b468fc6d020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b468fcc8a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b4690ebd8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b468fc6d6a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b468fc6d6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b468fcc7060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b468fc6aa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b4690ebbbe0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4690ea6a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fc6e6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b468fc6b690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690eb4860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4690eb4860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fdab020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468fc682a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b4690ead020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b4690ead020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b468fdad4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fc6e6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fcc8250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b468fc6c850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b468fcc7c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468fc6f430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fcc9470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b468fcc53e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b468fc6aa40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b468fcc65b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b468fc6b690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468fcc0480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468fc682a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b468fcc5a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468fd12020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468fd12020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b468fd0cc70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b468fcc0c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2b468fcbe2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b468fd0d5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468fd04150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b468fd0ed10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b468fd05780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b468fd35bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b468f26d3f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b468fd33b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2b468f2693f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b468fd31b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b468f2673f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b468fd2fb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2b468f2953f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b468fd2db20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2b468f2973f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2b468fd3ad10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b468fdee430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b4690ead7c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468fdac3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b4690eaddd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b468fdfa540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b468fdfa540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b468fdee430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b4690eb25a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468fd12020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690eb3d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fdaaad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fdaaad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fe02c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fda88a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4690ea6a80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b468fdaa2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b468fe03850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b468fe03850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690f8d020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b468fdad4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b468fe09060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468fdab020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fe05a80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b468fe05a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690f8e270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468fdac3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468fe09990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fe02c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690f8b400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fe01570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fda88a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fe08e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fe02c30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b468fe08060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b468fd0ed10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b468fe08840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b468fd0d5e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468fe02020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b4690f8d7a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4690f8bcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fe01570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b4690f8a500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b4690f900a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b4690f887a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2b468fde7250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b468fd0cc70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b468fde3d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b468f26d3f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b468fde1cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b468f2673f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b468ff2dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b468ff38da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468ff30b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b468ff2a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b468ff23e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b468ff2ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b468ff172f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b468ff192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b468ff35120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b468ff1f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b468ff1a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b468ff2fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b468ff2ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b468ff25670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b468ff27e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b468ff29670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468ff39760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb6680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b468ff34aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b468ff33120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b468ff1ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b468ff33870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b468ff1aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468ff35dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b468ff20e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b468ff2e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468ff2f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b468ff38750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b468ff21e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b468ff22670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b468ff20670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b468ff18ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b468ff19ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b468ff26670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b468ff22e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b468ff1bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b468ff28670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b468ff17ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b468ff38100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b468ff30370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b468ff2d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b468ff25e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b468ff29e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b468ff23670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b468ff2c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b468ff36450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b468ff2ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b468ff32020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b468ff32cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b468ff1b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b468ff1cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b468ff34450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b468ff1c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b468ff182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b468ff26e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b468ff21670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b468ff36aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b468ff35770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b468ff28e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b468ff32670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b468ff27670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b468ff1fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b468ff157a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b468ff66c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b468ff0bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468ff6ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b468ff64670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b468ff5de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b468ff64e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b468ff502f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b468ff522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b468ff09120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b468ff58670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b468ff542f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b468ff69c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b468ff67c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b468ff5e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b468ff60e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b468ff63670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468ff0c760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb6680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b468ff6daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b468ff6c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b468ff57a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b468ff6c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b468ff54ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468ff09dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b468ff59e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b468ff67480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468ff69480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b468ff0b750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b468ff5be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b468ff5c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b468ff59670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b468ff51ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b468ff52ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b468ff5f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b468ff5ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b468ff55ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b468ff62670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b468ff50ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b468ff0b100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b468ff6a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b468ff66480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b468ff5ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b468ff63e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b468ff5d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b468ff65670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b468ff0a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b468ff65e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b468ff6b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b468ff6bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b468ff552f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b468ff56ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b468ff6d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b468ff562f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b468ff512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b468ff5fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b468ff5b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b468ff0aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b468ff09770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b468ff62e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b468ff6b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b468ff60670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b468ff58e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b468ff4f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b468ff8e8c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b468ff84020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b468ff84020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b468ff7e210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b468ff7acb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b468ffd1020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b468ffd1020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b468ffcf490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2b468ff7d5b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b468ffeda20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b468ffd18c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2b468ffd25a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2b468ffd25a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b468ffeb9e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b468ffc8b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b468ffa8020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b468ffa8020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b468ffa5d20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b468ffcfd30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b468ffd18c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b468fffe260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b468fffa890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b468fffa890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468fff4060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b468fff1190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2b468ee3a060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468ffeac50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b468f221cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b46900bc9f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b46900b65e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b46900be190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b46900b6d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b46900b57f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b468f959220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b46900a7500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b468fa080e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b46900a1820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b468fa07370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b46900a0b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b468fa02020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b46900a9880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b468fa6c5a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b469009e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690145c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4690145c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fbb9960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b469009ed10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b46901448f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b46901448f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb6680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b469009a6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b46901432f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b46901432f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b469009ade0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b4690142cc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b4690142cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b4690099530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b4690141370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b4690141370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b4690099c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b4690140d00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b4690140d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b469009ce00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b469013ac60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b469013ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b469009d780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b469018e7a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b469018e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b469009c550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b46901932f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b46901932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b46900983e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b469013b480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b469013b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b46900975e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b4690137e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b4690137e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690096020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690136670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690136670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b4690098e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b469013d7b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b469013d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b46900959c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b4690190ad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b4690190ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b4690096890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b46901922f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b46901922f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b4690095130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b4690192ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b4690192ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b4690090d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b4690182df0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b4690182df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b469017a550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b46900b1a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46900b09a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b46900ae7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690243550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b46900a2b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b469023b480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b469023b480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b469022d8b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b46900936c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b4690138c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b4690142020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b469013cc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b469019ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b4690136e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b469018f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b4690197670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b469013bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b469019d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b4690133e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b4690135670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b469013e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b4690196a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b469013eac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b4690193ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b4690140060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b4690198e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b469013a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b4690143940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b469019ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b469019b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b4690198670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b4690131670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b469019be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b4690194ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b4690134670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b469018fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b469013c490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b4690138480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b469019de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b4690135e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b469019c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b4690137670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b4690142670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b469013d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b469013de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b46901942f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b4690195ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b46901406b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b46901952f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b46901902f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b4690131e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b469019a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b46901419c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b4690134e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b4690133670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b4690197e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b469017e020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b46901787c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b46901d2150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b4690177020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b468fa07370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b4690176380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b468fa066a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b46901756b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b468fa059d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b4690174a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b468fa70e30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b46901736e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4690395d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4690395d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b468fbb9960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b4690172530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b4690372ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b4690372ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b4690171ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b469038f6b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b469038f6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b46901713a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b469038e370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b469038e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b4690170330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b469016f1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b469016dd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690243550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b469016fb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b468f896550"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b46901683e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b4690387e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b4690387e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690168cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690386670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690386670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b4690169b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b469038d160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b469038d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b46901d46d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b46903722f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b46903722f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b4690167590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b46903742f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b46903742f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b4690167e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b4690374ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b4690374ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b46901d3020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b4690375ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b4690375ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b46901d38b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b4690393300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b4690393300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b46901c69d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b46902af7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468f9d3020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b4690228820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b46902474e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b469022ab80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b46902a2610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b46902a2610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b46903422b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b46902a7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4690351150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b46902a8130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46902e5020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b46902e5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46910a79d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b469034b640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b46902b92f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4690327850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b46902e5870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b46902e5870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b46910a05f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4690341690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4690292b70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4690292b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b469028a610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b46910a79d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b469108b360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b469109ad20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b46910a6260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b46910a6260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b469108bbf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b469109d9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4690292b70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b4691087dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b4691090020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b4691090020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b4691085440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b469108f760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b469108f760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b4691084760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b469108ea80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b469108ea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b4690288b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b468f4139d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b46903239c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b4690346a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b46903388c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b469032f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b469032f2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b46902a7020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b4690388c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b4690392020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b469038bc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b469037ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b4690386e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b4690390370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b469037a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b46903752f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b469038ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b4690389c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b4690380670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b4690382e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b4690384670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b4690394970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb6680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b469038fd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b4690379a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b469038eac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b469038f060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b469037be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b4690389480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b469038a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b4690393950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b469037ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b469037d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b469037b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b4690373ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b4690381670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b469037de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b4690376ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b4690383670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b469038b490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b4690388480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b4690380e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b4690384e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b469037e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b4690387670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b4690392670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b469038de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b46903762f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b4690378ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b46903782f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b46903732f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b4690381e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b469037c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b4690392cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b46903909c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b4690383e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b469038d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b4690382670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b469037ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b46903707a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b46903bb920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b46903b7940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b46903c19a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46903b7080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4690415e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b469039e020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b4690413ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b4690416690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b4690416690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b468fc44280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b46904128f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b46903bda20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b4690411170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b46903fa200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b46903f6570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b46903f53f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b46903fa950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46903f5a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4690434d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b469043e6b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4690433b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b469043e020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b46904322f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b4690431170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b4690431b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b469045d410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b469047edb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b46904cb800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b46904c6580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b46904c6580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b468fc44280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b46904b2dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b46904b7d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b46904b1af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b46904f7350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b46904f7350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b468fc44280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2b46904af650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b46904f5750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b46904f5750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b469032f2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b46904b09a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b46901d56e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46904aaa30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2b46904a62a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b46905b9580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b468f7d6680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b46905a4060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b4690591910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b46905b57e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4690596340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b46905b51d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b469058d2c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b46905b2640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7c4bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b46905aae50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b469059a4d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b46905b65c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b469058e6b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b46905b3b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7ce810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b46905b0aa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b469059fc10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b46905b4470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4690595020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b469058da00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b469068f020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b469068f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b46911c3cb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b469058b6a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b469068e8b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b469068e8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b46911c1590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b469058c800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b469068fc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b469068fc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b46911c2930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690608130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690243550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4690604270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b469023f660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4690600020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b469023b480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4690708b30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468f9d3020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b4690600d30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b469070a830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b46905fe060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4690705e60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4690705e60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b46902a2610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b46905fc0f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b469058ae60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b468f7b4210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2b4690589550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b468f7b4df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b46911c3cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b46911b6660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b46911c2930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b46911c1590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b469068c020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b46911c0c10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b46911c0c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7b0800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b46911b5460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4690670940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b46911b40e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4690670940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b46906a54b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b46906a4400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b468f7b5050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b46906a3060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b46906a1720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b46906a0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b46906a0c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b46906e7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b46906cfd70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b469074a3b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b46906db470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b46906d6b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b46906e1a00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b46906e1a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4691210890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b46906e11b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4691216b10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4691216b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b46911fa660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b46912080a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b46912154f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b46912154f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b46911f9020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b469120cc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b468f9d3020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b46911f5190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b46911ff450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b46911ff450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b46911f4770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b46911fea80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b46911fea80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b46911f3a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b46911fdda0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b46911fdda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b46906d2cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b4690745650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b46912403b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4691232640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b46907398b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b469123f020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b469123f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4690738590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b469123fc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b469123fc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b4690737c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b469123c2b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b469123c2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7b0800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b46912312e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4690670940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4691230020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b469072ddd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b469072ca10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b46912c6920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b46912b9b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4690727270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b46912c5590"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b46912c5590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4690727e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b46912c4270"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b46912c4270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b46907245d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b46912c38f0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b46912c38f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7b0800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b46912b7910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4690670940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b46912b6590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4690721710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4690720400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b469129a140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b469128d390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b469071cc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b469129ad50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b469129ad50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b469071b8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4691299990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4691299990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b4690719020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b4691297120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b4691297120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7b0800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b469128c060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4690670940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b469128cc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
    <wire loc="9:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2b46913290a0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b4691317220"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b4691317220"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46906e7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2b4691325570"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46913118b0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b46913118b0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46906e7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2b46913209f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b469130a020"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b469130a020"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b46906e7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b46907c2c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b46907c18b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="4:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="14:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqDelayTimer" loc="2(TDMALinkC.JoinReqDelayTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:3276">
            <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.StartSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EndSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="4">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b468ee64230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b468ee645d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b468ee64980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b468ee64d00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b468ee630d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b468ee63440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b468ee637d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b468ee63b60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b468ee62020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b468eeb6960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b468eeb6d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b468f29f890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b468f29fc40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b468f29e020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b468f29e3d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b468f29e740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b468f449ad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b468f449ad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b468f4d25b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b468f4c45b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b468f4e8d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b468f9649d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b468f9649d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b468f9cfbb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b468f9cfbb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b468f9cc3b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b468f9cc3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b468f9cc7a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b468f9cc7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b468f9ca020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b468f9ca020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b468f9ca3f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b468f9cabf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b468f9cabf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b468f9d4dd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b468f9d4dd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b468f9fa600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b468f9fa600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b468f9fa9f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b468f9fa9f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b468f9f9210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b468f9f9210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b468f9f95e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b468ffa3400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468ffa3400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b468ffa3b90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468ffa3b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4690249a60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4690249a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b46902e0cd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b46902e0cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b469031e230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b469031e230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b469031e560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b4690615a00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b469060e6b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b4690684320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b469066cc80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b4690731060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2b4690717840" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2b4690717bb0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2b469070f020" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2b469070f390" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="LinkSnd" ref="0x2b468ed8a650" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkSnd" scoped="" ref="0x2b468ed8a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468ed8a9d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468ed8ab60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468ed8acf0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468ed8ae80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468ed66030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b468ed6c9a0" loc="5:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b468ed6c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b468ed6cd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkCtrl" ref="0x2b468ed67470" loc="6:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkCtrl" scoped="" ref="0x2b468ed67470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468ed677f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468ed67980"/>
        <function-ref name="start" scoped="" ref="0x2b468ed67b10"/>
        <function-ref name="stop" scoped="" ref="0x2b468ed67ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2b468ed9ae40" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2b468ed9ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b468ed97390"/>
        <function-ref name="fired" scoped="" ref="0x2b468ed99970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b468ed98720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b468ed982a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b468ed97c90"/>
        <function-ref name="gett0" scoped="" ref="0x2b468ed97810"/>
        <function-ref name="isRunning" scoped="" ref="0x2b468ed99df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b468ed88a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b468ed98d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b468ed99020"/>
        <function-ref name="stop" scoped="" ref="0x2b468ed994f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkRcv" ref="0x2b468ed94020" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkRcv" scoped="" ref="0x2b468ed94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468ed943a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b468ed75370" loc="7:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b468ed75370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b468ed756f0"/>
        <function-ref name="source" scoped="" ref="0x2b468ed75880"/>
        <function-ref name="address" scoped="" ref="0x2b468ed75a10"/>
        <function-ref name="destination" scoped="" ref="0x2b468ed75ba0"/>
        <function-ref name="setSource" scoped="" ref="0x2b468ed75d30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b468ed6b020"/>
        <function-ref name="type" scoped="" ref="0x2b468ed6b1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b468ed6b340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b468ed6b4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b468ed6b660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b468ed6b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b468edbf4e0" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b468edbf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edbf860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b468edc2020" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b468edc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b468edc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468edc13d0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468edc13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edc1750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b468edba400" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b468edba400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edba780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468edbb5d0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468edbb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edbb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b468edbbce0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b468edbbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edba0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b468edbaae0" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b468edbaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edbae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468edbd6d0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468edbd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edbda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b468edbc910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b468edbc910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edbcc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b468edf6de0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b468edf6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b468edd9c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b468edd9310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b468edd94a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b468edd9630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b468edd9180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b468edd97c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b468edd9950"/>
        <function-ref name="initClocks" scoped="" ref="0x2b468edd9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468eddd850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468eddd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468edddbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b468ee07020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b468ee07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b468ee06020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b468ee07530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b468ee076c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b468ee07850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b468ee073a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b468ee079e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b468ee07b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2b468ee07d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b468ee06360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b468ee06360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b468ee066e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468ede67e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468ede67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468ede6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b468ee4a5a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b468ee4a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee4a920"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee4aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee4ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee4add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee49020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee491b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee49340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee494d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b468ee5b020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b468ee5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee5b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee5b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee5b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee5b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee5b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee5bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee5bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee5a020"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b468ee41700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b468ee41700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee41a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee41c10"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee41da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee40020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee401b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee40340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b468ee6ca20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b468ee6ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee6cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee6b020"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee6b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee6b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee6b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b468ee48aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b468ee48aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee48e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee47020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee471b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee47340"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b468ee4f020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b468ee4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee4f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee4f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee4f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee4f850"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee4f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b468ee69a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b468ee69a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee69da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee68020"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee681b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee68340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee684d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee68660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b468ee565a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b468ee565a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee56920"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee56ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee56c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee56dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee55020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee551b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee55340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee554d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b468ee4bb10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b468ee4bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee30020"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee301b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee30340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee304d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee30660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee307f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee30980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee30b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee30ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b468ee6ea20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b468ee6ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee6eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee6d020"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee6d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee6d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee6d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee6d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b468ee513e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b468ee513e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee51760"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee518f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee51a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee51c10"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee51da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b468ee5a5a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b468ee5a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee5aa20"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee5abb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee5ad40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee59020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee591b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee59340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee594d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee59660"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b468ee40700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b468ee40700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee40a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee40c10"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee40da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee5d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee5d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee5d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b468ee6ba20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b468ee6ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee6bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee6a020"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee6a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee6a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee6a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b468ee59be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b468ee59be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee58020"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee581b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee58340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee584d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee58660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee587f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee58980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee58b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee58ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b468ee47890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b468ee47890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee47c10"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee47da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee42020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee421b0"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee42340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b468ee3a060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b468ee3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ee3a3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ee3a570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee3a700"/>
        <function-ref name="get" scoped="" ref="0x2b468ee3a890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee3aa20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee3abb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ee3ad40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee38020"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ee381b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ee38340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ee384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b468ee4fda0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b468ee4fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee4e180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee4e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee4e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee4e630"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee4e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b468ee2f0c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b468ee2f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee2f440"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee2f5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee2f760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee2f8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee2fa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee2fc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee2fda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee4a020"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b468ee55a50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b468ee55a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee55dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee54020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee541b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee54340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee544d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee54660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee547f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee54980"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee54b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b468ee3b690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b468ee3b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee3ba10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee3bba0"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee3bd30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee41020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee411b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee41340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b468ee6da20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b468ee6da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee6dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee6c020"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee6c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee6c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee6c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee6c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b468ee44cf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b468ee44cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee480a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee48230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee483c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee48550"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee486e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b468ee501f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b468ee501f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee50570"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee50700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee50890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee50a20"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee50bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b468ee6aa20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b468ee6aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee6ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee69020"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee691b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee69340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee694d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b468ee570c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b468ee570c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee57440"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee575d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee57760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee578f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee57a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee57c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee57da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee56020"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b468ee5d6c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b468ee5d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ee5da40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ee5dbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee5dd60"/>
        <function-ref name="get" scoped="" ref="0x2b468ee5c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee5c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee5c340"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ee5c4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee5c660"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ee5c7f0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ee5c980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ee5cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b468ee4eb80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b468ee4eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee4d020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee4d1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee4d340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee4d4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b468ee6fa20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b468ee6fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee6fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ee6e020"/>
        <function-ref name="captured" scoped="" ref="0x2b468ee6e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee6e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee6e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ee6e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b468ee4da20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b468ee4da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee6f020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee6f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee6f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee6f4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee6f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b468ee52570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b468ee52570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ee528f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ee52a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ee52c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ee52da0"/>
        <function-ref name="fired" scoped="" ref="0x2b468ee51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b468ee53020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b468ee53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ee533a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ee53530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee536c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ee53850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ee539e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee53b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ee53d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ee52020"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ee521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b468ee9c2f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b468ee9c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee9c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b468ee9dc20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b468ee9dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b468ee9c940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b468ee9c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee9ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b468ee9d5b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ee9d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee9d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b468ee9fc80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ee9fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ee9e0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ee9e230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee9e3c0"/>
        <function-ref name="get" scoped="" ref="0x2b468ee9e550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee9e6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee9e870"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ee9ea00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee9eb90"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ee9ed20"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ee9d020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ee9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b468ee952f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b468ee952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee95670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b468ee96c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b468ee96c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b468ee95940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b468ee95940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee95cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b468ee965b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ee965b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ee96950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b468ee98c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ee98c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ee970a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ee97230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ee973c0"/>
        <function-ref name="get" scoped="" ref="0x2b468ee97550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ee976e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ee97870"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ee97a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ee97b90"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ee97d20"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ee96020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ee961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef00a90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef00a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef00e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468eefe020"/>
        <function-ref name="captured" scoped="" ref="0x2b468eefe1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468eefe340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468eefe4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468eefe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468eeb49d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468eeb49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468eeb4d50"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef01020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef011b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef01340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef014d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef01660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef017f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef01980"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef01b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468eefc020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468eefc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468eefc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef01de0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef01de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef00180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef00310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef004a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef00630"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef007c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468eefe930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468eefe930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468eefecb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468eefee40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468eefd020"/>
        <function-ref name="get" scoped="" ref="0x2b468eefd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468eefd340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468eefd4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468eefd660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468eefd7f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468eefd980"/>
        <function-ref name="setMode" scoped="" ref="0x2b468eefdb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468eefdca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468eef7160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468eef7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468eef74e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468eef7670"/>
        <function-ref name="captured" scoped="" ref="0x2b468eef7800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468eef7990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468eef7b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468eef7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468eef9020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468eef9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468eef93a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b468eef9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468eef96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468eef9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468eef99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468eef9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468eef9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468eef8020"/>
        <function-ref name="setControl" scoped="" ref="0x2b468eef81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468eef57a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468eef57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468eef5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468eef8480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468eef8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468eef8800"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468eef8990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468eef8b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468eef8cb0"/>
        <function-ref name="fired" scoped="" ref="0x2b468eef8e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468eef6020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468eef6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468eef63a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468eef6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468eef66c0"/>
        <function-ref name="get" scoped="" ref="0x2b468eef6850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468eef69e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468eef6b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b468eef6d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468eef5020"/>
        <function-ref name="overflow" scoped="" ref="0x2b468eef51b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468eef5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468eef54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468eef07a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468eef07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468eef0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468eef0cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b468eef0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468eeef020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468eeef1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468eeef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468eef26d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468eef26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468eef2a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b468eef2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468eef2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468eef1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468eef11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468eef1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468eef14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468eef1660"/>
        <function-ref name="setControl" scoped="" ref="0x2b468eef17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef13c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef13c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468eef1ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468eef1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468eef1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468eef0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468eef01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468eef0340"/>
        <function-ref name="fired" scoped="" ref="0x2b468eef04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468eeef610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468eeef610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468eeef990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468eeefb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468eeefcb0"/>
        <function-ref name="get" scoped="" ref="0x2b468eeefe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef13020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef131b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef13340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef134d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef13660"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef137f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef0ecb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef0ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef0d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ef0d230"/>
        <function-ref name="captured" scoped="" ref="0x2b468ef0d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef0d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef0d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ef0d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef10b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef10b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ef0f020"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef0f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef0f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef0f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef0f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef0f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef0f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef0fb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef0fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef0b2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef0b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef0b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef0e020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef0e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef0e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef0e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef0e850"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef0e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468ef0db40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ef0db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ef0c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ef0c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef0c340"/>
        <function-ref name="get" scoped="" ref="0x2b468ef0c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef0c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef0c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef0c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef0cb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef0cca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef0ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef062f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef06670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ef06800"/>
        <function-ref name="captured" scoped="" ref="0x2b468ef06990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef06b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef06cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ef06e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef08220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef08220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ef085a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef08730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef088c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef08a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef08be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef08d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef07020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef071b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef07340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef037a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef037a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef03b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef07610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef07610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef07990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef07b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef07cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef07e40"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468ef05160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ef05160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ef054e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ef05670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef05800"/>
        <function-ref name="get" scoped="" ref="0x2b468ef05990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef05b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef05cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef05e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef03020"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef031b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef03340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef247a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef247a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef24b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ef24cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b468ef24e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef23020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef231b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ef23340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef266d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef266d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ef26a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef26be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef26d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef25020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef251b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef25340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef254d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef25660"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef257f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef22c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef22c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef25ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef25ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef25e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef24020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef241b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef24340"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef244d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468ef23610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ef23610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ef23990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ef23b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef23cb0"/>
        <function-ref name="get" scoped="" ref="0x2b468ef23e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef22020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef221b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef22340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef224d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef22660"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef227f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef22980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef1dcb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef1dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef1c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ef1c230"/>
        <function-ref name="captured" scoped="" ref="0x2b468ef1c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef1c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef1c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ef1c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef1fb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef1fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ef1e020"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef1e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef1e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef1e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef1e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef1e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef1e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef1eb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef1eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef1a2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef1a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef1a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef1d020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef1d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef1d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef1d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef1d850"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef1d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468ef1cb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ef1cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ef1b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ef1b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef1b340"/>
        <function-ref name="get" scoped="" ref="0x2b468ef1b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef1b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef1b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef1b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef1bb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef1bca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef1be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef3a2f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef3a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef3a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ef3a800"/>
        <function-ref name="captured" scoped="" ref="0x2b468ef3a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef3ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef3acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ef3ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef16220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef16220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ef165a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef16730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef168c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef16a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef16be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef16d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef15020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef151b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef15340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef387a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef38b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef15610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef15610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef15990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef15b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef15cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef15e40"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef3a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468ef39160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ef39160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ef394e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ef39670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef39800"/>
        <function-ref name="get" scoped="" ref="0x2b468ef39990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef39b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef39cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef39e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef38020"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef381b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef38340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef337a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef33b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ef33cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b468ef33e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef32020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef321b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ef32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef356d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ef35a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef35be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef35d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef34020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef341b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef34340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef344d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef34660"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef31c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef31c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef34ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef34ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef34e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef33020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef331b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef33340"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef334d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468ef32610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ef32610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ef32990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ef32b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef32cb0"/>
        <function-ref name="get" scoped="" ref="0x2b468ef32e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef31020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef311b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef31340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef314d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef31660"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef317f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef31980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468ef2bcb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468ef2bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef2a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468ef2a230"/>
        <function-ref name="captured" scoped="" ref="0x2b468ef2a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef2a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef2a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468ef2a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef2db30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef2db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468ef2c020"/>
        <function-ref name="getControl" scoped="" ref="0x2b468ef2c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef2c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468ef2c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468ef2c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef2c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468ef2c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468ef2cb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b468ef2cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b468ef282f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b468ef282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef28670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b468ef2b020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b468ef2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468ef2b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468ef2b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468ef2b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468ef2b850"/>
        <function-ref name="fired" scoped="" ref="0x2b468ef2b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b468ef2ab40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b468ef2ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468ef29020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468ef291b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468ef29340"/>
        <function-ref name="get" scoped="" ref="0x2b468ef294d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468ef29660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468ef297f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468ef29980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468ef29b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b468ef29ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468ef29e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468ef28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b468ef48240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b468ef48240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef485c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b468ef4caa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b468ef4caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef4ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b468ef49260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b468ef49260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef495e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b468ef499f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b468ef499f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468ef49d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b468ea29080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b468ea29080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b468ea29400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b468e8ec2d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b468e8ec2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b468e8ec650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b468eac17d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b468eac17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b468eac1b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b468eddbb50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b468eddbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b468ef67b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b468ef671b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b468ef67340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b468ef674d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b468ef67020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b468ef67660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b468ef677f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b468ef67980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b468ef86dc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b468ef86dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468ef85180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b468ef68590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b468ef68590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b468ef68910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b468ef866c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b468ef866c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468ef86a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b468ef68c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b468ef68c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468ef86020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b468ef861b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b468ef86340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b468e8121d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b468e8121d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468e812550"/>
        <function-ref name="runTask" scoped="" ref="0x2b468e8126e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b468e87c3a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b468e87c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468e87c720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b468e87c8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b468e87ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b468ecd0040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b468ecd0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468ecd03c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b468ecd0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b468eccd5d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b468eccd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b468eccd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b468ecd2140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b468ecd2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468ecd24c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b468ecd2650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b468ecd27e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b468efa2710" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b468efa2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468efa2a90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468efa2c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468efa2db0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468efa1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468efa11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468efa20c0" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468efa20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468efa2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468edc3570" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468edc3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468edc38f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468edc3a80"/>
        <function-ref name="start" scoped="" ref="0x2b468edc3c10"/>
        <function-ref name="stop" scoped="" ref="0x2b468edc3da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b468ef98b60" loc="21:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2b468ef98b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468ef97020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468ef971b0"/>
        <function-ref name="start" scoped="" ref="0x2b468ef97340"/>
        <function-ref name="stop" scoped="" ref="0x2b468ef974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2b468efc4a30" loc="35:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b468efc4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468efc4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b468ef9a020" loc="16:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b468ef9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468ef9a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468ef9a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468ef9a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468ef9a850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468ef9a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2b468efaedf0" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2b468efaedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468ef95c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468efac590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468efac110"/>
        <function-ref name="cancel" scoped="" ref="0x2b468efad580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468efada90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRandom" ref="0x2b468efca8d0" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRandom" scoped="" ref="0x2b468efca8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b468efcac50"/>
        <function-ref name="rand32" scoped="" ref="0x2b468efcade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2b468efc66c0" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2b468efc66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468efc6a40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468efc6bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468efc6d60"/>
        <function-ref name="cancel" scoped="" ref="0x2b468efc5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468efc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqDelayTimer" ref="0x2b468efa4310" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2b468efa4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b468efc7870"/>
        <function-ref name="fired" scoped="" ref="0x2b468efa3e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b468efc9c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b468efc9780"/>
        <function-ref name="getdt" scoped="" ref="0x2b468efc61e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b468efc7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b468efc9300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b468efa3020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b468efc7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b468efa34f0"/>
        <function-ref name="stop" scoped="" ref="0x2b468efa39c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2b468efc3110" loc="37:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2b468efc3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468efc3490"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468efc3620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468efc37b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468efc3940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468efc3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468ef9acc0" loc="17:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468ef9acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468ef990a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2b468efacc70" loc="25:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2b468efacc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468efab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b468ef9b480" loc="15:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b468ef9b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468ef9b800"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468ef9b990"/>
        <function-ref name="start" scoped="" ref="0x2b468ef9bb20"/>
        <function-ref name="stop" scoped="" ref="0x2b468ef9bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2b468efa6a90" loc="26:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2b468efa6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b468efaa890"/>
        <function-ref name="eventTime" scoped="" ref="0x2b468efaada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2b468efc5500" loc="32:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2b468efc5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468efc5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2b468efc5cc0" loc="34:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b468efc5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468efc40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468efc4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468efc43c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468efc4550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468efc46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2b468ef96020" loc="22:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b468ef96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b468ef963a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b468ef96530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b468ef966c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b468ef96850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b468ef969e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b468ef993b0" loc="20:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b468ef993b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b468ef99730"/>
        <function-ref name="source" scoped="" ref="0x2b468ef998c0"/>
        <function-ref name="address" scoped="" ref="0x2b468ef99a50"/>
        <function-ref name="destination" scoped="" ref="0x2b468ef99be0"/>
        <function-ref name="setSource" scoped="" ref="0x2b468ef99d70"/>
        <function-ref name="setDestination" scoped="" ref="0x2b468ef98020"/>
        <function-ref name="type" scoped="" ref="0x2b468ef981b0"/>
        <function-ref name="setType" scoped="" ref="0x2b468ef98340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b468ef984d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b468ef98660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b468ef987f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2b468efbb9d0" loc="39:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b468efbb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b468efc1980"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b468efc1020"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b468efc11b0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b468efc1340"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b468efc14d0"/>
        <function-ref name="start" scoped="" ref="0x2b468efc1660"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b468efc17f0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b468efbbd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b468f05b440" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b468f05b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f05b7c0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f05b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b468f052960" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b468f052960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b468f052ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2b468f0531e0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b468f0531e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f053560"/>
        <function-ref name="receive" scoped="" ref="0x2b468f0536f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f0592a0" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f0592a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f059620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2b468f0345a0" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2b468f0345a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f034920"/>
        <function-ref name="stop" scoped="" ref="0x2b468f034ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b468f053a30" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b468f053a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f053db0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f059020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b468f0727c0" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b468f0727c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f072b40"/>
        <function-ref name="receive" scoped="" ref="0x2b468f072cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b468f066660" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b468f066660"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f0669e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b468f066b70"/>
        <function-ref name="receive" scoped="" ref="0x2b468f066d00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b468f072020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b468f0721b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b468f072340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f0724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b468f05ae30" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b468f05ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f0731e0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f073370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b468f59d8f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f59d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b468f59dc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468f59de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b468f59b060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b468f59b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f59b3e0"/>
        <function-ref name="receive" scoped="" ref="0x2b468f59b570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b468f59b800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f59b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b468f59bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b468f59c0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b468f59c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f59c440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b468f59c5d0"/>
        <function-ref name="receive" scoped="" ref="0x2b468f59c760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b468f59c8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b468f59ca80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b468f59cc10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f59cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f55ec00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f55ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f59d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f59d1b0"/>
        <function-ref name="request" scoped="" ref="0x2b468f59d340"/>
        <function-ref name="granted" scoped="" ref="0x2b468f59d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f59d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b468f0e21d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f0e21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468f0e2550"/>
        <function-ref name="configure" scoped="" ref="0x2b468f0e26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b468f0de560" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b468f0de560"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f0de8e0"/>
        <function-ref name="receive" scoped="" ref="0x2b468f0dea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b468f0db6c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f0db6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b468f0dba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b468f0e1020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b468f0e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f0e13a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b468f0e1530"/>
        <function-ref name="receive" scoped="" ref="0x2b468f0e16c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b468f0e1850"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b468f0e19e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b468f0e1b70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f0e1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b468f0dd3f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b468f0dd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f0dd770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f0dd900"/>
        <function-ref name="request" scoped="" ref="0x2b468f0dda90"/>
        <function-ref name="granted" scoped="" ref="0x2b468f0ddc20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f0dddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f0b74d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f0b74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f0b7850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f0b79e0"/>
        <function-ref name="request" scoped="" ref="0x2b468f0b7b70"/>
        <function-ref name="granted" scoped="" ref="0x2b468f0b7d00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f0b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b468f0d7c20" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468f0d7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468f0d9020"/>
        <function-ref name="txDone" scoped="" ref="0x2b468f0d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b468f15ddc0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f15ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468f15c180"/>
        <function-ref name="configure" scoped="" ref="0x2b468f15c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b468f15b890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b468f15b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f15bc30"/>
        <function-ref name="receive" scoped="" ref="0x2b468f15bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b468f159020" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f159020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b468f1593c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b468f159690" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b468f159690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b468f159a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b468f159ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b468f159d30"/>
        <function-ref name="enableUart" scoped="" ref="0x2b468f158020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b468f1581b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b468f158340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b468f1584d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b468f158660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b468f1587f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b468f158980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b468f158b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b468f158ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b468f158e30"/>
        <function-ref name="getUbr" scoped="" ref="0x2b468f157120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b468f1572b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b468f157440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b468f1575d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b468f157760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b468f1578f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b468f157a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b468f157c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b468f157da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b468f156020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b468f1561b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468f156340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b468f1566d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b468f156860"/>
        <function-ref name="setUbr" scoped="" ref="0x2b468f1569f0"/>
        <function-ref name="tx" scoped="" ref="0x2b468f156b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2b468f156d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2b468f185020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b468f1851b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b468f185340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b468f1854d0"/>
        <function-ref name="rx" scoped="" ref="0x2b468f185660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b468f1857f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b468f185980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b468f185b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b468f185ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b468f185e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b468f15c6d0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b468f15c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f15ca70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b468f15cc00"/>
        <function-ref name="receive" scoped="" ref="0x2b468f15cd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b468f15b020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b468f15b1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b468f15b340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f15b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b468f184c90" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b468f184c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468f182ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f1814e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f181020"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f1819a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b468f15a230" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b468f15a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f15a5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f15a760"/>
        <function-ref name="request" scoped="" ref="0x2b468f15a8f0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f15aa80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f15ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f15d020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f15d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f15d3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f15d550"/>
        <function-ref name="request" scoped="" ref="0x2b468f15d6e0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f15d870"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f15da00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b468f184290" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468f184290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468f184630"/>
        <function-ref name="txDone" scoped="" ref="0x2b468f1847c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f181dd0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f181dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f180180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f180310"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f1804a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f180630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f1807c0"/>
        <function-ref name="get" scoped="" ref="0x2b468f180950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f180ae0"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f17f1b0"/>
        <function-ref name="set" scoped="" ref="0x2b468f180e00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f180c70"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f17f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b468f1713b0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b468f1713b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468f171730"/>
        <function-ref name="txDone" scoped="" ref="0x2b468f1718c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b468f177080" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f177080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f177400"/>
        <function-ref name="stop" scoped="" ref="0x2b468f177590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b468f1778b0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468f1778b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b468f177c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b468f177dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b468f176020"/>
        <function-ref name="enableUart" scoped="" ref="0x2b468f1761b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b468f176340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b468f1764d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b468f176660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b468f1767f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b468f176980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b468f176b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b468f176ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b468f176e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b468f174020"/>
        <function-ref name="getUbr" scoped="" ref="0x2b468f1742b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b468f174440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b468f1745d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b468f174760"/>
        <function-ref name="isUart" scoped="" ref="0x2b468f1748f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b468f174a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2b468f174c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b468f174da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b468f173020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b468f1731b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b468f173340"/>
        <function-ref name="getMode" scoped="" ref="0x2b468f1734d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b468f173860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b468f1739f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b468f173b80"/>
        <function-ref name="tx" scoped="" ref="0x2b468f173d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2b468f172020"/>
        <function-ref name="disableUart" scoped="" ref="0x2b468f1721b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b468f172340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b468f1724d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b468f172660"/>
        <function-ref name="rx" scoped="" ref="0x2b468f1727f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b468f172980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b468f172b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b468f172ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b468f172e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b468f171020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b468f189800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b468f189800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f189b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f189d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f188020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f1881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f188340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f1884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f188660"/>
        <function-ref name="get" scoped="" ref="0x2b468f1887f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f188980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f188b10"/>
        <function-ref name="set" scoped="" ref="0x2b468f188ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f188e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f187020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f1872b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f187440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b468f198dc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b468f198dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468f197180"/>
        <function-ref name="txDone" scoped="" ref="0x2b468f197310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b468f187800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b468f187800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f187b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f187d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f186020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f1861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f186340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f1864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f186660"/>
        <function-ref name="get" scoped="" ref="0x2b468f1867f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f186980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f186b10"/>
        <function-ref name="set" scoped="" ref="0x2b468f186ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f186e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f1b5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f1b52b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f1b5440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b468f1b5800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b468f1b5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f1b5b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f1b5d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f1b4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f1b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f1b4340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f1b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f1b4660"/>
        <function-ref name="get" scoped="" ref="0x2b468f1b47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f1b4980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f1b4b10"/>
        <function-ref name="set" scoped="" ref="0x2b468f1b4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f1b4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f1b3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f1b32b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f1b3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b468f19c020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b468f19c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b468f19c3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b468f19c530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b468f19c6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b468f19c850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b468f19c9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b468f19cb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b468f19cd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b468f19b020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b468f19b1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b468f19b340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b468f19b4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b468f19b660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b468f19b7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b468f19ba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b468f19bc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b468f19bda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b468f19a020"/>
        <function-ref name="isUart" scoped="" ref="0x2b468f19a1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b468f19a340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b468f19a4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b468f19a660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b468f19a7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b468f19a980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b468f19ab10"/>
        <function-ref name="getMode" scoped="" ref="0x2b468f19aca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b468f199220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b468f1993b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b468f199540"/>
        <function-ref name="tx" scoped="" ref="0x2b468f1996d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b468f199860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b468f1999f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b468f199b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b468f199d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b468f198020"/>
        <function-ref name="rx" scoped="" ref="0x2b468f1981b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b468f198340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b468f1984d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b468f198660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b468f1987f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b468f198980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b468f170710" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f170710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f170a90"/>
        <function-ref name="stop" scoped="" ref="0x2b468f170c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b468f195800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b468f195800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f195b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f195d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f18a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f18a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f18a340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f18a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f18a660"/>
        <function-ref name="get" scoped="" ref="0x2b468f18a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f18a980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f18ab10"/>
        <function-ref name="set" scoped="" ref="0x2b468f18aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f18ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f189020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f1892b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f189440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b468f18c860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b468f18c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f18cbe0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f18cd70"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f196020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f1961b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f196340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f1964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f196660"/>
        <function-ref name="get" scoped="" ref="0x2b468f1967f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f196980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f196b10"/>
        <function-ref name="set" scoped="" ref="0x2b468f196ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f196e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f195020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f1952b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f195440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b468f231cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b468f231cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2300a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f230230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2303c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f230550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2306e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f230870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f230a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f230b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f230d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f22f020"/>
        <function-ref name="set" scoped="" ref="0x2b468f22f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f22f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f22f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f22f760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f22f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b468f21ccc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b468f21ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f21b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f21b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f21b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f21b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f21b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f21b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f21ba00"/>
        <function-ref name="get" scoped="" ref="0x2b468f21bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f21bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f21a020"/>
        <function-ref name="set" scoped="" ref="0x2b468f21a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f21a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f21a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f21a760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f21a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b468f26b3d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b468f26b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f26b750"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f26b8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f26ba70"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f26bc00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f26bd90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f26a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f26a1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f26a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f26a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f26a660"/>
        <function-ref name="set" scoped="" ref="0x2b468f26a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f26a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f26ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f26ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f269020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b468f2ae3e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b468f2ae3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2ae760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2ae8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2aea80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2aec10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2aeda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2ad1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2ad340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2ad4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2ad660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2ad7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2ad980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2adb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2adda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b468f2693f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b468f2693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f269770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f269900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f269a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f269c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f269db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f268020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2681b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f268340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2684d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f268660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2687f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f268980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f268b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f268da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f267020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b468f24acc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b468f24acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2490a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f249230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2493c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f249550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2496e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f249870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f249a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f249b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f249d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f248020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f248340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f248760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b468f235020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b468f235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2353a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f235530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2356c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f235850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f235b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f235d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f234020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f234340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f234660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f234a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f234c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b468f253020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b468f253020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2533a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f253530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2536c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f253850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f253b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f253d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f252020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f252340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f252660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f252a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f252c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b468f277020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b468f277020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2773a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f277530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2776c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f277850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2779e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f277b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f277d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f276020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f276340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f276660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f276a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f276c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b468f2973f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b468f2973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f297770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f297900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f297a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f297c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f297db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f296020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2961b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f296340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2964d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f296660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2967f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f296980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f296b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f296da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f295020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b468f2863e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b468f2863e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f286760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2868f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f286a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f286c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f286da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f285020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2851b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f285340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2854d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f285660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2857f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f285980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f285b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f285da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f284020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b468f2a63f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b468f2a63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2a6770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2a6900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2a6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2a6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2a6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2a51b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2a5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2a54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2a5660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2a57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2a5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2a5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2a5da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b468f22bcc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b468f22bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f22a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f22a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f22a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f22a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f22a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f22a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f22aa00"/>
        <function-ref name="get" scoped="" ref="0x2b468f22ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f22ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f229020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2291b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f229340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2294d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f229760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b468f2953f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b468f2953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f295770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f295900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f295a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f295c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f295db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f294020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2941b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f294340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2944d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f294660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2947f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f294980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f294b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f294da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f293020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b468f227cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b468f227cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2260a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f226230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2263c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f226550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2266e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f226870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f226a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f226b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f226d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f225020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f225340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f225760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b468f244cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b468f244cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2430a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f243230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2433c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f243550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2436e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f243870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f243a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f243b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f243d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f242020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f242340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f242760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b468f262020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b468f262020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2623a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f262530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2626c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f262850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2629e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f262b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f262d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f261020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f261340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f261660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f261a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f261c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b468f24d020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b468f24d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f24d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f24d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f24d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f24d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f24d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f24db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f24dd00"/>
        <function-ref name="get" scoped="" ref="0x2b468f24c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f24c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f24c340"/>
        <function-ref name="set" scoped="" ref="0x2b468f24c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f24c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f24c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f24ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f24cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b468f271020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b468f271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2713a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f271530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2716c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f271850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2719e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f271b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f271d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f270020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f270340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f270660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f270a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f270c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b468f203cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b468f203cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2020a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f202230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2023c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f202550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2026e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f202870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f202a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f202b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f202d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f201020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f201340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f201760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b468f221cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b468f221cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f220180"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f220310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2204a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f220630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2207c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f220950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f220ae0"/>
        <function-ref name="get" scoped="" ref="0x2b468f220c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f220e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f21f020"/>
        <function-ref name="set" scoped="" ref="0x2b468f21f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f21f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f21f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f21f760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f21f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b468f23ecc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b468f23ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f23d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f23d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f23d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f23d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f23d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f23d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f23da00"/>
        <function-ref name="get" scoped="" ref="0x2b468f23db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f23dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f23c020"/>
        <function-ref name="set" scoped="" ref="0x2b468f23c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f23c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f23c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f23c760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f23c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b468f26d3f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b468f26d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f26d770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f26d900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f26da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f26dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f26ddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f26c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f26c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f26c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f26c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f26c660"/>
        <function-ref name="set" scoped="" ref="0x2b468f26c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f26c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f26cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f26cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f26b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b468f2803e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b468f2803e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f280760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2808f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f280a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f280c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f280da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f27f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f27f1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f27f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f27f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f27f660"/>
        <function-ref name="set" scoped="" ref="0x2b468f27f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f27f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f27fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f27fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b468f2a83e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b468f2a83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2a8760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2a88f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2a8a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2a8c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2a8da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2a71b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2a7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2a74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2a7660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2a77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2a7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2a7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2a7da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b468f28d3f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b468f28d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f28d770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f28d900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f28da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f28dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f28ddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f28b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f28b1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f28b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f28b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f28b660"/>
        <function-ref name="set" scoped="" ref="0x2b468f28b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f28b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f28bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f28bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f28a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b468f23acc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b468f23acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f239410"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2395a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f239730"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2398c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f239a50"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f239be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f239d70"/>
        <function-ref name="get" scoped="" ref="0x2b468f238020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f238340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f238660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f238a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f238c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b468f258020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b468f258020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2583a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f258530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2586c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f258850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2589e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f258b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f258d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f257020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f257340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f257660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f257a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f257c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b468f27b020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b468f27b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f27b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f27b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f27b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f27b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f27b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f27bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f27bd00"/>
        <function-ref name="get" scoped="" ref="0x2b468f27a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f27a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f27a340"/>
        <function-ref name="set" scoped="" ref="0x2b468f27a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f27a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f27a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f27aa80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f27ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b468f2b23e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b468f2b23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2b2760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2b28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2b2a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2b2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2b2da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2b1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2b11b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2b1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2b14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2b1660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2b17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2b1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2b1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2b1da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b468f2933e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b468f2933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f293760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2938f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f293a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f293c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f293da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f292020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2921b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f292340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2924d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f292660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2927f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f292980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f292b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f292da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f291020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b468f22fcc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b468f22fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f22e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f22e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f22e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f22e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f22e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f22e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f22ea00"/>
        <function-ref name="get" scoped="" ref="0x2b468f22eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f22ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f22d020"/>
        <function-ref name="set" scoped="" ref="0x2b468f22d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f22d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f22d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f22d760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f22d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b468f21acc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b468f21acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2190a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f219230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2193c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f219550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f219870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f219a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f219b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f219d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f24a020"/>
        <function-ref name="set" scoped="" ref="0x2b468f24a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f24a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f24a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f24a760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f24a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b468f24b020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b468f24b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f24b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f24b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f24b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f24b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f24b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f24bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f24bd00"/>
        <function-ref name="get" scoped="" ref="0x2b468f27e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f27e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f27e340"/>
        <function-ref name="set" scoped="" ref="0x2b468f27e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f27e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f27e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f27ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f27ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b468f248cc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b468f248cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2470a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f247230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2473c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f247550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2476e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f247870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f247a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f247b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f247d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f246020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f246340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f246760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b468f233020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b468f233020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2333a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f233530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2336c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f233850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f233b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f233d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f232020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f232340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f232660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f232a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f232c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b468f251020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b468f251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2513a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f251530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2516c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f251850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f251b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f251d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f250020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f250340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f250660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f250a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f250c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b468f275020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b468f275020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2753a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f275530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2756c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f275850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2759e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f275b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f275d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f274020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f274340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f274660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f274a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f274c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b468f28f3f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b468f28f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f28f770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f28f900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f28fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f28fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f28fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f28e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f28e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f28e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f28e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f28e660"/>
        <function-ref name="set" scoped="" ref="0x2b468f28e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f28e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f28eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f28eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f28d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b468f209e10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b468f209e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2061c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f206350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2064e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f206670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f206800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f206990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f206b20"/>
        <function-ref name="get" scoped="" ref="0x2b468f206cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f206e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f205020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2051b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f205340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2054d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f205760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2058f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b468f225cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b468f225cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2240a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f224230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2243c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f224550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2246e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f224870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f224a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f224b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f224d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f223020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f223340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f223760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2238f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b468f242cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b468f242cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2410a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f241230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2413c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f241550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2416e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f241870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f241a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f241b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f241d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f240020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f240340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f240760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b468f260020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b468f260020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2603a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f260530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2606c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f260850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2609e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f260b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f260d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f25f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f25f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f25f340"/>
        <function-ref name="set" scoped="" ref="0x2b468f25f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f25f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f25f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f25fa80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f25fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b468f28a3f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b468f28a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f28a770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f28a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f28aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f28ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f28adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f289020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2891b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f289340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f289660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2897f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f289980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f289b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f289da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f288020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b468f2843e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b468f2843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f284760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2848f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f284a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f284c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f284da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f283020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2831b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f283340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2834d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f283660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2837f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f283980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f283b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f283da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f282020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b468f2ac3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b468f2ac3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2ac760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2ac8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2aca80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2acc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2acda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2ab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2ab1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2ab340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2ab4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2ab660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2ab7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2ab980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2abb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2abda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b468f25c020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b468f25c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f25c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f25c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f25c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f25c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f25c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f25cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f25cd00"/>
        <function-ref name="get" scoped="" ref="0x2b468f25b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f25b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f25b340"/>
        <function-ref name="set" scoped="" ref="0x2b468f25b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f25b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f25b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f25ba80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f25bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b468f2883f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b468f2883f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f288770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f288900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f288a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f288c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f288db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f287020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2871b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f287340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2874d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f287660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2877f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f287980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f287b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f287da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b468f201cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b468f201cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2000a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f200230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2003c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f200550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2006e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f200870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f200a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f200b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f200d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f231020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f231340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f231760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b468f21fcc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b468f21fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f21d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f21d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f21d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f21d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f21d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f21d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f21da00"/>
        <function-ref name="get" scoped="" ref="0x2b468f21db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f21dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f21c020"/>
        <function-ref name="set" scoped="" ref="0x2b468f21c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f21c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f21c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f21c760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f21c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b468f23ccc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b468f23ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f23b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f23b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f23b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f23b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f23b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f23b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f23ba00"/>
        <function-ref name="get" scoped="" ref="0x2b468f23bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f23bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f23a020"/>
        <function-ref name="set" scoped="" ref="0x2b468f23a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f23a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f23a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f23a760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f23a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b468f2913f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b468f2913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f291770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f291900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f291a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f291c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f291db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f290020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2901b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f290340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f290660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2907f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f290980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f290b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f290da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f28f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b468f2b03e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b468f2b03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2b0760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2b08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2b0a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2b0c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2b0da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2af1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2af340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2af4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2af660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2af7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2af980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2afb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2afda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b468f237020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b468f237020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2373a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f237530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2376c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f237850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f237b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f237d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f236020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f236340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f236660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f236a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f236c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b468f256020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b468f256020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2563a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f256530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2566c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f256850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f256b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f256d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f255020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f255340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f255660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f255a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f255c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b468f279020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b468f279020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2793a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f279530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2796c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f279850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2799e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f279b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f279d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f278020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f278340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f278660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f278a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f278c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b468f22dcc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b468f22dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f22c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f22c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f22c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f22c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f22c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f22c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f22ca00"/>
        <function-ref name="get" scoped="" ref="0x2b468f22cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f22cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f22b020"/>
        <function-ref name="set" scoped="" ref="0x2b468f22b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f22b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f22b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f22b760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f22b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b468f27d020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b468f27d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f27d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f27d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f27d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f27d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f27d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f27db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f27dd00"/>
        <function-ref name="get" scoped="" ref="0x2b468f27c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f27c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f27c340"/>
        <function-ref name="set" scoped="" ref="0x2b468f27c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f27c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f27c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f27ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f27cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b468f229cc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b468f229cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2280a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f228230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2283c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f228550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2286e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f228870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f228a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f228b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f228d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f227020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2271b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f227340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2274d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f227760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2278f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b468f246cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b468f246cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2450a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f245230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2453c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f245550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2456e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f245870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f245a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f245b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f245d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f244020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f244340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f244760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b468f264020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b468f264020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2643a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f264530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2646c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f264850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2649e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f264b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f264d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f263020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2631b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f263340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2634d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f263660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2637f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f263a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f263c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b468f24f020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b468f24f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f24f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f24f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f24f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f24f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f24f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f24fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f24fd00"/>
        <function-ref name="get" scoped="" ref="0x2b468f24e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f24e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f24e340"/>
        <function-ref name="set" scoped="" ref="0x2b468f24e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f24e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f24e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f24ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f24ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b468f273020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b468f273020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2733a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f273530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2736c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f273850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f273b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f273d00"/>
        <function-ref name="get" scoped="" ref="0x2b468f272020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f272340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f272660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f272a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f272c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b468f205cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b468f205cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2040a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f204230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2043c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f204550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2046e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f204870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f204a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f204b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f204d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f203020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f203340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f203760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b468f223cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b468f223cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2220a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f222230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2223c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f222550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2226e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f222870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f222a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f222b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f222d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f221020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f221340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f221760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b468f240cc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b468f240cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f23f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f23f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f23f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f23f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f23f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f23f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f23fa00"/>
        <function-ref name="get" scoped="" ref="0x2b468f23fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f23fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f23e020"/>
        <function-ref name="set" scoped="" ref="0x2b468f23e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f23e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f23e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f23e760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f23e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b468f25e020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b468f25e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f25e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f25e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f25e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f25e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f25e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f25eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f25ed00"/>
        <function-ref name="get" scoped="" ref="0x2b468f25d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f25d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f25d340"/>
        <function-ref name="set" scoped="" ref="0x2b468f25d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f25d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f25d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f25da80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f25dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b468f2653d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b468f2653d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f265750"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2658e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f265a70"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f265c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f265d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f298020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2981b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f298340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2984d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f298660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2987f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f298980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f298b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f298da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f297020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b468f2823e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b468f2823e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f282760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2828f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f282a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f282c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f282da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f281020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2811b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f281340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2814d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f281660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2817f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f281980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f281b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f281da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f280020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b468f2673f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b468f2673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f267770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f267900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f267a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f267c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f267db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f266020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2661b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f266340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2664d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f266660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2667f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f266980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f266b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f266da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f265020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b468f25a020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b468f25a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f25a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f25a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f25a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f25a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f25a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f25ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f25ad00"/>
        <function-ref name="get" scoped="" ref="0x2b468f259020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f259340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f259660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f259a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f259c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b468f2aa3e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b468f2aa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2aa760"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2aa8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2aaa80"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2aac10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2aada0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2a91b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2a9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2a94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2a9660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2a97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2a9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2a9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2a9da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b468f2a43f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b468f2a43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2a4770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2a4900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2a4a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2a4c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2a4db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2a31b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2a3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2a34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2a3660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2a37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2a3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2a3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2a3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b468f26f060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b468f26f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f26f7e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f26f970"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f26fb00"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f26fc90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f26fe20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f26e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f26e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f26e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f26e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f26e660"/>
        <function-ref name="set" scoped="" ref="0x2b468f26e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f26e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f26eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f26eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f26d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2e23f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2e23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2e2770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2e2900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2e2a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2e2c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2e2db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2e1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2e11b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2e1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2e14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2e1660"/>
        <function-ref name="set" scoped="" ref="0x2b468f2e17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2e1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2e1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2e1da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2dee00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2dee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2dd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2dd350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2dd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2dd670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2dd800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2dd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2ddb20"/>
        <function-ref name="get" scoped="" ref="0x2b468f2ddcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2dde40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2dc020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2dc760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2d8740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2d8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2d8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2d8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2d8de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2d74d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2d7980"/>
        <function-ref name="set" scoped="" ref="0x2b468f2d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2d6120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2d3100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2d3480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2d3610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2d37a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2d3930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2d3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2d3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2d3de0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2d2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2d21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2d2340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2d24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2d2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2d27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2d2a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2cfd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2cfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2ce0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2ce270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2ce400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2ce590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2ce720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2ce8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2cea40"/>
        <function-ref name="get" scoped="" ref="0x2b468f2cebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2ced60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2cd020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2cd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2cd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2cd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2cd760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2cd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f300740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f300740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f300ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f300c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f300de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2ff1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2ff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2ff4d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2ff660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2ff7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2ff980"/>
        <function-ref name="set" scoped="" ref="0x2b468f2ffb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2ffca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2ffe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2fe120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2fb100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2fb480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2fb610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2fb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2fb930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2fbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2fbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2fbde0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2fa340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2faa80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2f7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2f60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2f6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2f6400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2f6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2f6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2f68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2f6a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f2f6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2f6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2f5020"/>
        <function-ref name="set" scoped="" ref="0x2b468f2f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2f5760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2f2740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2f2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2f2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2f2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2f2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2f1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2f11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2f1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2f14d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2f1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2f17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2f1980"/>
        <function-ref name="set" scoped="" ref="0x2b468f2f1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2f1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2f1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2f0120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2ed100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2ed100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f2ed480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f2ed610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f2ed7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f2ed930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f2edac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f2edc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f2edde0"/>
        <function-ref name="get" scoped="" ref="0x2b468f2eb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f2eb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f2eb340"/>
        <function-ref name="set" scoped="" ref="0x2b468f2eb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f2eb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f2eb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f2eba80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f2ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f2e8d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f2e8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f31d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f31d270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f31d400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f31d590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f31d720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f31d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f31da40"/>
        <function-ref name="get" scoped="" ref="0x2b468f31dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f31dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f31c020"/>
        <function-ref name="set" scoped="" ref="0x2b468f31c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f31c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f31c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f31c760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f31c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f319740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f319740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f319ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f319c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f319de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f318020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f318340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3184d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f318660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f318980"/>
        <function-ref name="set" scoped="" ref="0x2b468f318b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f318ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f318e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f317120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f314260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f314260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3145e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f314770"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f314900"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f314a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f314c20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f314db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f313020"/>
        <function-ref name="get" scoped="" ref="0x2b468f3131b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f313340"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f3134d0"/>
        <function-ref name="set" scoped="" ref="0x2b468f313660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f3137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f313980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f313c10"/>
        <function-ref name="clr" scoped="" ref="0x2b468f313da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f310d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f310d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f30f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f30f270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f30f400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f30f590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f30f720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f30f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f30fa40"/>
        <function-ref name="get" scoped="" ref="0x2b468f30fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f30fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f30e020"/>
        <function-ref name="set" scoped="" ref="0x2b468f30e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f30e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f30e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f30e760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f30e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f30b740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f30b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f30bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f30bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f30bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f30a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f30a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f30a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f30a4d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f30a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f30a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f30a980"/>
        <function-ref name="set" scoped="" ref="0x2b468f30ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f30aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f30ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f309120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f306100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f306100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f306480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f306610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3067a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f306930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f306ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f306c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f306de0"/>
        <function-ref name="get" scoped="" ref="0x2b468f305020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f305340"/>
        <function-ref name="set" scoped="" ref="0x2b468f3054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f305660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f305a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f305c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f338d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f338d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3370e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f337270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f337400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f337590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f337720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f337a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f337bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f337d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f336020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f336340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f336760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f333740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f333740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f333ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f333c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f333de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f331020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f331340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3314d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f331660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f331980"/>
        <function-ref name="set" scoped="" ref="0x2b468f331b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f331ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f331e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f330120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f32d100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f32d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f32d480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f32d610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f32d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f32d930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f32dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f32dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f32dde0"/>
        <function-ref name="get" scoped="" ref="0x2b468f32c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f32c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f32c340"/>
        <function-ref name="set" scoped="" ref="0x2b468f32c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f32c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f32c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f32ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f32cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f329d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f329d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3280e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f328270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f328400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f328590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f328720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3288b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f328a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f328bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f328d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f327020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3271b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f327340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3274d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f327760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3278f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f324740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f324740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f324ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f324c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f324de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f323020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f323340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3234d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f323660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f323980"/>
        <function-ref name="set" scoped="" ref="0x2b468f323b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f323ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f323e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f322120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f31f100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f31f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f31f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f31f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f31f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f31f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f31fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f31fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f31fde0"/>
        <function-ref name="get" scoped="" ref="0x2b468f31e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f31e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f31e340"/>
        <function-ref name="set" scoped="" ref="0x2b468f31e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f31e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f31e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f31ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f31ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f351d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f351d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3500e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f350270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f350400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f350590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f350720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3508b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f350a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f350bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f350d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f34f020"/>
        <function-ref name="set" scoped="" ref="0x2b468f34f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f34f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f34f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f34f760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f34f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f34c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f34c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f34cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f34cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f34cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f34b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f34b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f34b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f34b4d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f34b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f34b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f34b980"/>
        <function-ref name="set" scoped="" ref="0x2b468f34bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f34bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f34be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f34a120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f34a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f3473f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f3473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f347770"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f347900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f347a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f347c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f347db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f346020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3461b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f346340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3464d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f346660"/>
        <function-ref name="set" scoped="" ref="0x2b468f3467f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f346980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f346b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f346da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f345020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f342e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f342e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3411c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f341350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3414e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f341670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f341800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f341990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f341b20"/>
        <function-ref name="get" scoped="" ref="0x2b468f341cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f341e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f340020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f340340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f340760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f33d740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f33d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f33dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f33dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f33dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f33c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f33c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f33c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f33c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f33c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f33c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f33c980"/>
        <function-ref name="set" scoped="" ref="0x2b468f33cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f33cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f33ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f33b120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f33b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f36f100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f36f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f36f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f36f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f36f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f36f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f36fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f36fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f36fde0"/>
        <function-ref name="get" scoped="" ref="0x2b468f36e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f36e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f36e340"/>
        <function-ref name="set" scoped="" ref="0x2b468f36e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f36e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f36e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f36ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f36ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f36bd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f36bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f36a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f36a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f36a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f36a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f36a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f36a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f36aa40"/>
        <function-ref name="get" scoped="" ref="0x2b468f36abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f36ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f369020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f369340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f369760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f366740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f366740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f366ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f366c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f366de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f365020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f365340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3654d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f365660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f365980"/>
        <function-ref name="set" scoped="" ref="0x2b468f365b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f365ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f365e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f364120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f361100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f361100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f361480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f361610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3617a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f361930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f361ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f361c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f361de0"/>
        <function-ref name="get" scoped="" ref="0x2b468f360020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f360340"/>
        <function-ref name="set" scoped="" ref="0x2b468f3604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f360660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f360a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f360c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f35dd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f35dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f35c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f35c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f35c400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f35c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f35c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f35c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f35ca40"/>
        <function-ref name="get" scoped="" ref="0x2b468f35cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f35cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f35b020"/>
        <function-ref name="set" scoped="" ref="0x2b468f35b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f35b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f35b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f35b760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f35b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f358740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f358740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f358ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f358c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f358de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f356020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3561b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f356340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3564d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f356660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3567f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f356980"/>
        <function-ref name="set" scoped="" ref="0x2b468f356b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f356ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f356e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f355120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f38a100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f38a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f38a480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f38a610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f38a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f38a930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f38aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f38ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f38ade0"/>
        <function-ref name="get" scoped="" ref="0x2b468f389020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f389340"/>
        <function-ref name="set" scoped="" ref="0x2b468f3894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f389660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f389a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f389c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f386d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f386d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3850e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f385270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f385400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f385590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f385720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3858b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f385a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f385bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f385d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f384020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f384340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f384760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f381740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f381740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f381ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f381c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f381de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f380020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3801b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f380340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3804d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f380660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3807f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f380980"/>
        <function-ref name="set" scoped="" ref="0x2b468f380b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f380ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f380e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f37f120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f37f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f37c100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f37c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f37c480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f37c610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f37c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f37c930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f37cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f37cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f37cde0"/>
        <function-ref name="get" scoped="" ref="0x2b468f37b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f37b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f37b340"/>
        <function-ref name="set" scoped="" ref="0x2b468f37b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f37b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f37b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f37ba80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f37bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f378d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f378d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3770e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f377270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f377400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f377590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f377720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3778b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f377a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f377bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f377d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f376020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3761b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f376340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3764d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f376760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3768f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f373740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f373740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f373ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f373c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f373de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f372020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f372340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3724d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f372660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f372980"/>
        <function-ref name="set" scoped="" ref="0x2b468f372b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f372ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f372e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f371120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f3a6100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f3a6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3a6480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f3a6610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3a67a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f3a6930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3a6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3a6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3a6de0"/>
        <function-ref name="get" scoped="" ref="0x2b468f3a5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3a51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f3a5340"/>
        <function-ref name="set" scoped="" ref="0x2b468f3a54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f3a5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3a57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f3a5a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3a5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f3a2d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f3a2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3a00e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f3a0270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3a0400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f3a0590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3a0720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3a08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3a0a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f3a0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3a0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f39f020"/>
        <function-ref name="set" scoped="" ref="0x2b468f39f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f39f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f39f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f39f760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f39f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f39c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f39c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f39cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f39cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f39cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f39b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f39b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f39b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f39b4d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f39b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f39b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f39b980"/>
        <function-ref name="set" scoped="" ref="0x2b468f39bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f39bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f39be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f39a120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f39a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f397100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f397100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f397480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f397610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3977a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f397930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f397ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f397c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f397de0"/>
        <function-ref name="get" scoped="" ref="0x2b468f396020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f396340"/>
        <function-ref name="set" scoped="" ref="0x2b468f3964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f396660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f396a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f396c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f393d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f393d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3920e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f392270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f392400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f392590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f392720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3928b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f392a40"/>
        <function-ref name="get" scoped="" ref="0x2b468f392bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f392d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f391020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f391340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f391760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f38e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f38e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f38eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f38ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f38ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f38d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f38d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f38d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f38d4d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f38d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f38d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f38d980"/>
        <function-ref name="set" scoped="" ref="0x2b468f38db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f38dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f38de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f38c120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f38c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f3c1100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f3c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3c1480"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f3c1610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3c17a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f3c1930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3c1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3c1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3c1de0"/>
        <function-ref name="get" scoped="" ref="0x2b468f3c0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3c01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f3c0340"/>
        <function-ref name="set" scoped="" ref="0x2b468f3c04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f3c0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3c07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f3c0a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3c0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f3bdd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f3bdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3bc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f3bc270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3bc400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f3bc590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3bc720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3bc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3bca40"/>
        <function-ref name="get" scoped="" ref="0x2b468f3bcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3bcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f3bb020"/>
        <function-ref name="set" scoped="" ref="0x2b468f3bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f3bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f3bb760"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b468f3b8740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b468f3b8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f3b8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f3b8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f3b8de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f3b7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f3b71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f3b7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f3b74d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f3b7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f3b77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f3b7980"/>
        <function-ref name="set" scoped="" ref="0x2b468f3b7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f3b7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f3b7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f3b6120"/>
        <function-ref name="clr" scoped="" ref="0x2b468f3b62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b468f4189a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b468f4189a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468f4157e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f4141b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f415ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f414670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b468f4139d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b468f4139d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468f410810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f44a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f410cd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f44a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b468f43ac50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f43ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468f438020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468f4381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468f438340"/>
        <function-ref name="get" scoped="" ref="0x2b468f4384d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468f438660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f4387f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468f438980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f438b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f438ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468f438e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468f437020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b468f448b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b468f448b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468f4479b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f43a360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f447e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f43a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b468f417970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f417970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f417cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f417e80"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f434030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f4341c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f434350"/>
        <function-ref name="get" scoped="" ref="0x2b468f4344e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f434670"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f434cb0"/>
        <function-ref name="set" scoped="" ref="0x2b468f434800"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f434990"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f434b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b468f463910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b468f463910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f463c90"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f463e20"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f469020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f4691b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f469340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f4694d0"/>
        <function-ref name="set" scoped="" ref="0x2b468f469660"/>
        <function-ref name="clr" scoped="" ref="0x2b468f4697f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f433c40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f433c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f430020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b468f469b10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b468f469b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f468020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f4681b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f468340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f4684d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f468660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f4687f0"/>
        <function-ref name="set" scoped="" ref="0x2b468f468980"/>
        <function-ref name="clr" scoped="" ref="0x2b468f468b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b468f4302a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f4302a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f430620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f4307b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f430940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f430ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f430c60"/>
        <function-ref name="get" scoped="" ref="0x2b468f430df0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f42f020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f42f660"/>
        <function-ref name="set" scoped="" ref="0x2b468f42f1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f42f340"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f42f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b468f468e30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b468f468e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f4621e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f462370"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f462500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f462690"/>
        <function-ref name="get" scoped="" ref="0x2b468f462820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f4629b0"/>
        <function-ref name="set" scoped="" ref="0x2b468f462b40"/>
        <function-ref name="clr" scoped="" ref="0x2b468f462cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b468f482360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b468f482360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f4826e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f482870"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f482a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f482b90"/>
        <function-ref name="get" scoped="" ref="0x2b468f482d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f481020"/>
        <function-ref name="set" scoped="" ref="0x2b468f4811b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f481340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b468f4816a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b468f4816a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f481a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f481bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f481d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f480020"/>
        <function-ref name="get" scoped="" ref="0x2b468f4801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f480340"/>
        <function-ref name="set" scoped="" ref="0x2b468f4804d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f480660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b468f47fc40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f47fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f47e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b468f4809c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b468f4809c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f480d40"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f47f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f47f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f47f340"/>
        <function-ref name="get" scoped="" ref="0x2b468f47f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f47f660"/>
        <function-ref name="set" scoped="" ref="0x2b468f47f7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f47f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468f46b930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468f46b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f46bcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f46be40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f46a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f46a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f46a340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f46a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f46a660"/>
        <function-ref name="get" scoped="" ref="0x2b468f46a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f46a980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f46ab10"/>
        <function-ref name="set" scoped="" ref="0x2b468f46aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f46ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f4a5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f4a52b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f4a5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468f47c710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468f47c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f47ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f47cc20"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f47cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f46b020"/>
        <function-ref name="get" scoped="" ref="0x2b468f46b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f46b340"/>
        <function-ref name="set" scoped="" ref="0x2b468f46b4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f46b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468f4a2480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468f4a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f4a2800"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f4a2990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f4a2b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f4a2cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f4a2e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f4a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f4a11b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f4a1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f4a14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f4a1660"/>
        <function-ref name="set" scoped="" ref="0x2b468f4a17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f4a1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f4a1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f4a1da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f4a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468f4a31d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468f4a31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f4a3550"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f4a36e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f4a3870"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f4a3a00"/>
        <function-ref name="get" scoped="" ref="0x2b468f4a3b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f4a3d20"/>
        <function-ref name="set" scoped="" ref="0x2b468f4a2020"/>
        <function-ref name="clr" scoped="" ref="0x2b468f4a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468f49c020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468f49c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f49c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f49c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468f49c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f49c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f49c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468f49cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f49cd00"/>
        <function-ref name="get" scoped="" ref="0x2b468f49b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468f49b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468f49b340"/>
        <function-ref name="set" scoped="" ref="0x2b468f49b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468f49b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468f49b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468f49ba80"/>
        <function-ref name="clr" scoped="" ref="0x2b468f49bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468f49fd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468f49fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f49d180"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f49d310"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f49d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f49d630"/>
        <function-ref name="get" scoped="" ref="0x2b468f49d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f49d950"/>
        <function-ref name="set" scoped="" ref="0x2b468f49dae0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f49dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4690965c70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690965c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4690964020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b46909641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b469095fd70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b469095fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b469095e180"/>
        <function-ref name="configure" scoped="" ref="0x2b469095e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b469095f5d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b469095f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b469095f950"/>
        <function-ref name="txDone" scoped="" ref="0x2b469095fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690965020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690965020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b46909653a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690965530"/>
        <function-ref name="request" scoped="" ref="0x2b46909656c0"/>
        <function-ref name="granted" scoped="" ref="0x2b4690965850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b46909659e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b4690964be0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b4690964be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b4690963020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b46909631b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b4690963340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b46909634d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b4690963660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b46909637f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b4690963980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b4690963b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b4690963ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b4690963e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b4690962020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b46909621b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b4690962340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b46909625d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b4690962760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b46909628f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b4690962a80"/>
        <function-ref name="isUart" scoped="" ref="0x2b4690962c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b4690962da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b4690961020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b46909611b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b4690961340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b46909614d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b4690961660"/>
        <function-ref name="getMode" scoped="" ref="0x2b46909617f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b4690961b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b4690961d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b4690960020"/>
        <function-ref name="tx" scoped="" ref="0x2b46909601b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b4690960340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b46909604d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b4690960660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b46909607f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b4690960980"/>
        <function-ref name="rx" scoped="" ref="0x2b4690960b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b4690960ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b4690960e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b469095f020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b469095f1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b469095f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4690964440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690964440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b46909647c0"/>
        <function-ref name="userId" scoped="" ref="0x2b4690964950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b468f4b22c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f4b22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b468f4b2640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468f4b27d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b468f4b18a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f4b18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468f4b1c20"/>
        <function-ref name="configure" scoped="" ref="0x2b468f4b1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b468f4b51d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b468f4b51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468f4b5550"/>
        <function-ref name="txDone" scoped="" ref="0x2b468f4b56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f4b4020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f4b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f4b43a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f4b4530"/>
        <function-ref name="request" scoped="" ref="0x2b468f4b46c0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f4b4850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f4b49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b468f4b2ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f4b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b468f4b2e50"/>
        <function-ref name="userId" scoped="" ref="0x2b468f4b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b468f4d7a90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f4d7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b468f4d7e10"/>
        <function-ref name="userId" scoped="" ref="0x2b468f4d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b468f4afb60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b468f4afb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468f4d8020"/>
        <function-ref name="txDone" scoped="" ref="0x2b468f4d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b468f4d7480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b468f4d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468f4d7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b468f4d85b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468f4d85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468f4d8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b468f4d8c20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b468f4d8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468f4d7020"/>
        <function-ref name="txDone" scoped="" ref="0x2b468f4d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b468f553020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b468f553020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b468f5533c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468f553550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b468f552cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468f552cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468f5510a0"/>
        <function-ref name="configure" scoped="" ref="0x2b468f551230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b468f5537a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468f5537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f553b20"/>
        <function-ref name="requested" scoped="" ref="0x2b468f553cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f553e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f552020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468f5521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f554210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f554210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f5545b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f554740"/>
        <function-ref name="request" scoped="" ref="0x2b468f5548d0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f554a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f554bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b468f552400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f552400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b468f552780"/>
        <function-ref name="userId" scoped="" ref="0x2b468f552910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4690cc3ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b4690cc3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4690cc20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b4690cc2330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b4690cc2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4690cc26b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4690cc2840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4690cc29d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4690cc2b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4690cbf3a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690cbf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4690cbf740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4690cbf8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4690cbc210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4690cbc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4690cbc5b0"/>
        <function-ref name="configure" scoped="" ref="0x2b4690cbc740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b4690cbc9d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b4690cbc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4690cbcd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4690cbb020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4690cbb1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4690cbb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b4690cbfb20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b4690cbfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690cbd020"/>
        <function-ref name="requested" scoped="" ref="0x2b4690cbd1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b4690cbd340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690cbd4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4690cbd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4690cbb590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b4690cbb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4690cbb910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4690cbbaa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b4690cbbc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4690cbbdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4690cba020"/>
        <function-ref name="get" scoped="" ref="0x2b4690cba1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4690cba340"/>
        <function-ref name="led0On" scoped="" ref="0x2b4690cba980"/>
        <function-ref name="set" scoped="" ref="0x2b4690cba660"/>
        <function-ref name="led2On" scoped="" ref="0x2b4690cba4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4690cba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690cc0540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690cc0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690cc08e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690cc0a70"/>
        <function-ref name="request" scoped="" ref="0x2b4690cc0c00"/>
        <function-ref name="granted" scoped="" ref="0x2b4690cc0d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690cbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4690cbd8b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690cbd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4690cbdc30"/>
        <function-ref name="userId" scoped="" ref="0x2b4690cbddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b4690cbac50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b4690cbac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4690cb9020"/>
        <function-ref name="runTask" scoped="" ref="0x2b4690cb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b468f576400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b468f576400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b468f576780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b468f5769d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468f5769d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f576d50"/>
        <function-ref name="requested" scoped="" ref="0x2b468f575020"/>
        <function-ref name="granted" scoped="" ref="0x2b468f5751b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f575340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468f5754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b468f54db20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b468f54db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f576020"/>
        <function-ref name="stop" scoped="" ref="0x2b468f5761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b468f575720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468f575720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b468f575aa0"/>
        <function-ref name="userId" scoped="" ref="0x2b468f575c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b4690d39b00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b4690d39b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b4690d39e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b4690d370f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b4690d370f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690d37470"/>
        <function-ref name="requested" scoped="" ref="0x2b4690d37600"/>
        <function-ref name="granted" scoped="" ref="0x2b4690d37790"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690d37920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4690d37ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b4690d393a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b4690d393a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4690d39720"/>
        <function-ref name="stop" scoped="" ref="0x2b4690d398b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b4690d37d00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690d37d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4690d360a0"/>
        <function-ref name="userId" scoped="" ref="0x2b4690d36230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2b468f596080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b468f596080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b468f596400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b468f5966f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f5966f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f596a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f596c00"/>
        <function-ref name="request" scoped="" ref="0x2b468f596d90"/>
        <function-ref name="granted" scoped="" ref="0x2b468f595020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f5951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b468f5997a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b468f5997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f599b20"/>
        <function-ref name="stop" scoped="" ref="0x2b468f599cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b468f589430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b468f589430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b468f5897b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f588780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f588780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f588b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b468f588de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b468f588de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b468f585180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b468f5bd020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b468f5bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b468f5bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b468f5bd740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b468f5bd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f5bdac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f5bdc50"/>
        <function-ref name="start" scoped="" ref="0x2b468f5bdde0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f5bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f5b6320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f5b6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f5b66a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f5b6830"/>
        <function-ref name="start" scoped="" ref="0x2b468f5b69c0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f5b6b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b468f5b5370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b468f5b5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f5b56f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f5b5880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f5b5a10"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f5b5ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f5b5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b468f5b3020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b468f5b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468f5b33a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b468f5b3530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f5b36c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f5b3850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b468f5b39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468f5b4530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468f5b4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f5b48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f5a7a00" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f5a7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f5a7d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f5a6020"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f5a61b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f5a6340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f5a64d0"/>
        <function-ref name="get" scoped="" ref="0x2b468f5a6660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f5a67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f5a6e30"/>
        <function-ref name="set" scoped="" ref="0x2b468f5a6980"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f5a6b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f5a6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b468f5a7080" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f5a7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b468f5a7400"/>
        <function-ref name="noAck" scoped="" ref="0x2b468f5a7590"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b468f5a7720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b468f5b3c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b468f5b3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b468f5a90a0"/>
        <function-ref name="source" scoped="" ref="0x2b468f5a9230"/>
        <function-ref name="address" scoped="" ref="0x2b468f5a93c0"/>
        <function-ref name="destination" scoped="" ref="0x2b468f5a9550"/>
        <function-ref name="setSource" scoped="" ref="0x2b468f5a96e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b468f5a9870"/>
        <function-ref name="type" scoped="" ref="0x2b468f5a9a00"/>
        <function-ref name="setType" scoped="" ref="0x2b468f5a9b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b468f5a9d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b468f5a8020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b468f5a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b468f602d90" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b468f602d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f601180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f601310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f6014a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f601630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f6017c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b468f601a50" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b468f601a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f601dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b468f59fb40" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b468f59fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f605020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f6051b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f605340"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f6054d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f605660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b468f603720" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b468f603720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468f603aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b468f603c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f603dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f602020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b468f6021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468f6059e0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468f6059e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f605d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b468f602400" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f602400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b468f602780"/>
        <function-ref name="noAck" scoped="" ref="0x2b468f602910"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b468f602aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b468f604020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b468f604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b468f6043a0"/>
        <function-ref name="source" scoped="" ref="0x2b468f604530"/>
        <function-ref name="address" scoped="" ref="0x2b468f6046c0"/>
        <function-ref name="destination" scoped="" ref="0x2b468f604850"/>
        <function-ref name="setSource" scoped="" ref="0x2b468f6049e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b468f604b70"/>
        <function-ref name="type" scoped="" ref="0x2b468f604d00"/>
        <function-ref name="setType" scoped="" ref="0x2b468f603020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b468f6031b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b468f603340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b468f6034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f63e4e0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f63e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f63e860"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f63e9f0"/>
        <function-ref name="start" scoped="" ref="0x2b468f63eb80"/>
        <function-ref name="stop" scoped="" ref="0x2b468f63ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b468f63b020" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b468f63b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b468ed61d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f63b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f63b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f63b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f63b850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f63b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f5ffe60" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f5ffe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f63e210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468f63c4c0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468f63c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b468ed61d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f63c840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f63a940" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f63a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f63acc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f63ae50"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f639020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f6391b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f639340"/>
        <function-ref name="get" scoped="" ref="0x2b468f6394d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f639660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f639ca0"/>
        <function-ref name="set" scoped="" ref="0x2b468f6397f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f639980"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f639b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b468f63a020" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b468f63a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b468ed61d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b468f63a3a0"/>
        <function-ref name="offset" scoped="" ref="0x2b468f63a530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b468f63a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f62d2f0" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f62d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f62d670"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f62d800"/>
        <function-ref name="start" scoped="" ref="0x2b468f62d990"/>
        <function-ref name="stop" scoped="" ref="0x2b468f62db20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b468f690e40" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2b468f690e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f68f1e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f68f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b468f65d060" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b468f65d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f65d3e0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f65d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b468f683d10" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2b468f683d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f6820e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f682270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f62ec30" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f62ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f62d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b468f65ac50" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2b468f65ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b468f65c020"/>
        <function-ref name="flush" scoped="" ref="0x2b468f65c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b468f692400" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2b468f692400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f692780"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f692910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b468f65e8e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b468f65e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b468f65ec60"/>
        <function-ref name="resetSend" scoped="" ref="0x2b468f65edf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b468f625020"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b468f6251b0"/>
        <function-ref name="putData" scoped="" ref="0x2b468f625340"/>
        <function-ref name="putDone" scoped="" ref="0x2b468f6254d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b468f625660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f6258e0" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f6258e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f625c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f625df0"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f621020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f6211b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f621340"/>
        <function-ref name="get" scoped="" ref="0x2b468f6214d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f621660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f621ca0"/>
        <function-ref name="set" scoped="" ref="0x2b468f6217f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f621980"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f621b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b468f68b0c0" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b468f68b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f68b440"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f68b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b468f626130" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b468f626130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b468f6264b0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b468f626640"/>
        <function-ref name="startSend" scoped="" ref="0x2b468f6267d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b468f626960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b468f6225c0" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b468f6225c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b468f622940"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b468f622ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b468f622c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b468f761c50" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2b468f761c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f760020"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f7601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b468f766830" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b468f766830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b468ed61d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f766bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f766d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f765020"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f7651b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f765340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b468f760480" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2b468f760480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f760800"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f760990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468f766110" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468f766110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b468ed61d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7664b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b468f765760" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2b468f765760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b468ed61d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b468f765b00"/>
        <function-ref name="offset" scoped="" ref="0x2b468f765c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b468f765e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f762590" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f762590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f762910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f762aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f762c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f762dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f761020"/>
        <function-ref name="get" scoped="" ref="0x2b468f7611b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f761340"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f761980"/>
        <function-ref name="set" scoped="" ref="0x2b468f761660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f7614d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f7617f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b468f7649d0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b468f7649d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b468f764d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2b468f762020"/>
        <function-ref name="startSend" scoped="" ref="0x2b468f7621b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b468f762340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b468f7640e0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b468f7640e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b468f764460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b468f7645f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b468f764780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b468f75bca0" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b468f75bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f75a0a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b468f75a230"/>
        <function-ref name="receive" scoped="" ref="0x2b468f75a3c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b468f75a550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b468f75a6e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b468f75a870"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f75aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b468f75eb70" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b468f75eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b468f75b020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b468f75b1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b468f75b340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b468f75b4d0"/>
        <function-ref name="putData" scoped="" ref="0x2b468f75b660"/>
        <function-ref name="putDone" scoped="" ref="0x2b468f75b7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b468f75b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f75ac80" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f75ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f7590a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f759230"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f7593c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f759550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f7596e0"/>
        <function-ref name="get" scoped="" ref="0x2b468f759870"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f759a00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f7581b0"/>
        <function-ref name="set" scoped="" ref="0x2b468f759b90"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f759d20"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f758020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b468f7816c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2b468f7816c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b468f781a40"/>
        <function-ref name="offset" scoped="" ref="0x2b468f781bd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b468f781d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f7b6020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f7b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f7b63a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f7b6530"/>
        <function-ref name="start" scoped="" ref="0x2b468f7b66c0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f7b6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b468f7b5050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b468f7b5050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f7b53d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7b5560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7b56f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f7b5880"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f7b5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b468f7b4df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b468f7b4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7b31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b468f7b3450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b468f7b3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468f7b37d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b468f7b3960"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7b3af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7b3c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b468f7b3e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b468f7a69e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b468f7a69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b468f7aa020"/>
        <function-ref name="clear" scoped="" ref="0x2b468f7aa750"/>
        <function-ref name="isValid" scoped="" ref="0x2b468f7ae890"/>
        <function-ref name="set" scoped="" ref="0x2b468f7aae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b468f7e28a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7e28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b468f7e2c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b468f7e2db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b468f7a0020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b468f7a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468f7b4210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468f7b4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7b4590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b468f7b0800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7b0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b468f7b0b80"/>
        <function-ref name="noAck" scoped="" ref="0x2b468f7b0d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b468f7af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b468f7b1120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b468f7b1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b468f7b14a0"/>
        <function-ref name="source" scoped="" ref="0x2b468f7b1630"/>
        <function-ref name="address" scoped="" ref="0x2b468f7b17c0"/>
        <function-ref name="destination" scoped="" ref="0x2b468f7b1950"/>
        <function-ref name="setSource" scoped="" ref="0x2b468f7b1ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b468f7b1c70"/>
        <function-ref name="type" scoped="" ref="0x2b468f7b1e00"/>
        <function-ref name="setType" scoped="" ref="0x2b468f7b0020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b468f7b01b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b468f7b0340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b468f7b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b468f7a5af0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b468f7a5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b468f7a20d0"/>
        <function-ref name="clear" scoped="" ref="0x2b468f7a2800"/>
        <function-ref name="isValid" scoped="" ref="0x2b468f7a4970"/>
        <function-ref name="set" scoped="" ref="0x2b468f7a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f7d6680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f7d6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f7d6a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f7d6b90"/>
        <function-ref name="start" scoped="" ref="0x2b468f7d6d20"/>
        <function-ref name="stop" scoped="" ref="0x2b468f7d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b468f805d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b468f805d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b468f7c40e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b468f7c4270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b468f7c4400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b468f7c4590"/>
        <function-ref name="setCca" scoped="" ref="0x2b468f7c4720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b468f7c48b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b468f802500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b468f802500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b468f802980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b468f7d0760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b468f7d0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468f7d0ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b468f7d0c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7d0e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7cf020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b468f7cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b468f7d57f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b468f7d57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f7d5b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7d5d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7d3020"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f7d31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f7d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b468f7d2880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b468f7d2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7d2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b468f7c7970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b468f7c7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b468f7c7cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b468f7c7e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b468f7ce030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b468f7ce1c0"/>
        <function-ref name="getPower" scoped="" ref="0x2b468f7ce350"/>
        <function-ref name="getLqi" scoped="" ref="0x2b468f7ce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b468f7c4bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7c4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b468f7c2020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b468f7c21b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b468f7c2340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b468f7c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468f7d3b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468f7d3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b468f7ce810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7ce810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b468f7ceb90"/>
        <function-ref name="noAck" scoped="" ref="0x2b468f7ced20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b468f7cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b468f7c2790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b468f7c2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b468f7c2b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2b468f7c2ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b468f7c2e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b468f803020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b468f8031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b468f7d1020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b468f7d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b468f7d13a0"/>
        <function-ref name="source" scoped="" ref="0x2b468f7d1530"/>
        <function-ref name="address" scoped="" ref="0x2b468f7d16c0"/>
        <function-ref name="destination" scoped="" ref="0x2b468f7d1850"/>
        <function-ref name="setSource" scoped="" ref="0x2b468f7d19e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b468f7d1b70"/>
        <function-ref name="type" scoped="" ref="0x2b468f7d1d00"/>
        <function-ref name="setType" scoped="" ref="0x2b468f7d0020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b468f7d01b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b468f7d0340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b468f7d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b468f7c3a80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b468f7c3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b468f7c3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f7fb340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f7fb340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f7fb6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f7fb850"/>
        <function-ref name="start" scoped="" ref="0x2b468f7fb9e0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f7fbb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b468f7f4080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b468f7f4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b468f7f4400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b468f7f22e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b468f7f22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b468f7f2660"/>
        <function-ref name="setRetries" scoped="" ref="0x2b468f7f27f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b468f7f2980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b468f7f2b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b468f7f2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b468f7f6740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b468f7f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b468f7f6ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b468f7f6c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2b468f7f6de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b468f7f5020"/>
        <function-ref name="getPower" scoped="" ref="0x2b468f7f51b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b468f7f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b468f7f7350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b468f7f7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f7f76d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7f7860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7f79f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f7f7b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f7f7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b468f7f4700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b468f7f4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b468f7f4a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b468f7f4c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b468f7f4da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b468f7f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b468f7f9e70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b468f7f9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7f8220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b468f7f5670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b468f7f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b468f7f59f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b468f7f5b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b468f7f5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f7fa430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f7fa430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f7fa7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f7fa940"/>
        <function-ref name="request" scoped="" ref="0x2b468f7faad0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f7fac60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f7fadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b468f7f9160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b468f7f9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f7f94e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7f9670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7f9800"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f7f9990"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f7f9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b468f7f8560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b468f7f8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468f7f88e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b468f7f8a70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7f8c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7f8d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b468f7f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b468f7f60f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b468f7f60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7f6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f7f19f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f7f19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f7f1d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f7ee020"/>
        <function-ref name="start" scoped="" ref="0x2b468f7ee1b0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f7ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b468f7ed990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b468f7ed990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b468f7edd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b468f7ec020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b468f7ec1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b468f7ec340"/>
        <function-ref name="setCca" scoped="" ref="0x2b468f7ec4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b468f7ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b468f7ee600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b468f7ee600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f7ee980"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7eeb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7eeca0"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f7eee30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f7ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b468f7ed300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b468f7ed300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b468f7ed680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b468f7e9690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b468f7e9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b468f7e9a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2b468f7e9ba0"/>
        <function-ref name="start" scoped="" ref="0x2b468f7e9d30"/>
        <function-ref name="stop" scoped="" ref="0x2b468f7e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b468f7e7020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b468f7e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b468f7e73a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b468f7e7530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b468f7e76c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b468f7e7850"/>
        <function-ref name="setCca" scoped="" ref="0x2b468f7e79e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b468f7e7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b468f827060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b468f827060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b468f8273e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b468f827570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b468f827700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b468f827890"/>
        <function-ref name="setCca" scoped="" ref="0x2b468f827a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b468f827bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b468f81ee20" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b468f81ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b468f81d1c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b468f81d350"/>
        <function-ref name="getRssi" scoped="" ref="0x2b468f81d4e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b468f81d670"/>
        <function-ref name="getPower" scoped="" ref="0x2b468f81d800"/>
        <function-ref name="getLqi" scoped="" ref="0x2b468f81d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b468f81f2a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b468f81f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f81f620"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f81f7b0"/>
        <function-ref name="modify" scoped="" ref="0x2b468f81f940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f81fad0"/>
        <function-ref name="resend" scoped="" ref="0x2b468f81fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b468f7e82e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b468f7e82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468f7e8660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b468f7e87f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b468f7e8980"/>
        <function-ref name="cancel" scoped="" ref="0x2b468f7e8b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468f7e8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b468f827e80" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b468f827e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b468f826220"/>
        <function-ref name="rand32" scoped="" ref="0x2b468f8263b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b468f7e56f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b468f7e56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468f7e5a70"/>
        <function-ref name="stop" scoped="" ref="0x2b468f7e5c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b468f816430" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b468f816430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b468f8167b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b468f816940"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b468f816ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b468f8283f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b468f8283f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b468f828770"/>
        <function-ref name="rfOff" scoped="" ref="0x2b468f828900"/>
        <function-ref name="rxOn" scoped="" ref="0x2b468f828a90"/>
        <function-ref name="startVReg" scoped="" ref="0x2b468f828c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b468f828db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b468f7e5020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b468f7e51b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b468f7e5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f826670" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f826670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f8269f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f826b80"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f826d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f81e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f81e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b468f81e340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f81e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f81eb10"/>
        <function-ref name="set" scoped="" ref="0x2b468f81e660"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f81e7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f81e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b468f7e7e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f7e7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f7e6210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f7e63a0"/>
        <function-ref name="request" scoped="" ref="0x2b468f7e6530"/>
        <function-ref name="granted" scoped="" ref="0x2b468f7e66c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f7e6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b468f811bc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2b468f811bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b468f81b0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b468f81b230"/>
        <function-ref name="isState" scoped="" ref="0x2b468f81b3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b468f81b550"/>
        <function-ref name="requestState" scoped="" ref="0x2b468f81b6e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b468f81b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b468f80d5d0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2b468f80d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f80d950"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f80dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b468f80e660" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2b468f80e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f80e9e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f80eb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b468f80f730" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2b468f80f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f80fab0"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f80fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b468f896550" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b468f896550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b468f8968d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b468f896a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b468f896bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b468f896d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b468f857020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b468f8571b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b468f857340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b468f8574d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b468f857660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b468f8577f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b468f857980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b468f857b10"/>
        <function-ref name="sync" scoped="" ref="0x2b468f857ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b468f856020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b468f8561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b468f890890" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b468f890890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8944c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b468f894940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b468f8564b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b468f8564b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b468f856830"/>
        <function-ref name="rfOff" scoped="" ref="0x2b468f8569c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b468f856b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2b468f856ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b468f856e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b468f895030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b468f8951c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b468f895350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f858020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f858020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f8583a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f858530"/>
        <function-ref name="request" scoped="" ref="0x2b468f8586c0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f858850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f8589e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b468f88c1a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b468f88c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b468f88c520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b468f88c6b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b468f88c840"/>
        <function-ref name="syncDone" scoped="" ref="0x2b468f88c9d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b468f88cb60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b468f88ccf0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b468f88ce80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b468f88b030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b468f88b1c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b468f88b350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b468f88b4e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b468f88b670"/>
        <function-ref name="sync" scoped="" ref="0x2b468f88b800"/>
        <function-ref name="getChannel" scoped="" ref="0x2b468f88ba90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b468f88bc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b468f8af1e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b468f8af1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8af560"/>
        <function-ref name="write" scoped="" ref="0x2b468f8af6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b468f884970" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b468f884970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b468f884cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b468f87d790" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2b468f87d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b468f87b020"/>
        <function-ref name="fired" scoped="" ref="0x2b468f883020"/>
        <function-ref name="startAt" scoped="" ref="0x2b468f8839a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b468f8834e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b468f87b4e0"/>
        <function-ref name="start" scoped="" ref="0x2b468f8855d0"/>
        <function-ref name="stop" scoped="" ref="0x2b468f885ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b468f8b4020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468f8b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8b43a0"/>
        <function-ref name="write" scoped="" ref="0x2b468f8b4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b468f87ace0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b468f87ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f8790a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f879230"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f8793c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f879550"/>
        <function-ref name="get" scoped="" ref="0x2b468f8796e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f879870"/>
        <function-ref name="set" scoped="" ref="0x2b468f879a00"/>
        <function-ref name="clr" scoped="" ref="0x2b468f879b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b468f889500" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b468f889500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f888130"/>
        <function-ref name="readDone" scoped="" ref="0x2b468f8885b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b468f8e92f0" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2b468f8e92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f8e9670"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f8e9800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b468f8afa80" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b468f8afa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8afe00"/>
        <function-ref name="write" scoped="" ref="0x2b468f8ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b468f8ae3c0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b468f8ae3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8ae740"/>
        <function-ref name="write" scoped="" ref="0x2b468f8ae8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b468f8b0cd0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b468f8b0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8b90a0"/>
        <function-ref name="write" scoped="" ref="0x2b468f8b9230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b468f8ba390" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b468f8ba390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b468f8ba710"/>
        <function-ref name="changed" scoped="" ref="0x2b468f8ba8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b468f8baa30"/>
        <function-ref name="setAddress" scoped="" ref="0x2b468f8babc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b468f87b9d0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b468f87b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f87bd50"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f87a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f87a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f87a340"/>
        <function-ref name="get" scoped="" ref="0x2b468f87a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f87a660"/>
        <function-ref name="set" scoped="" ref="0x2b468f87a7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b468f87a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b468f8adae0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468f8adae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468f8ac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b468f878020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b468f878020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468f8783a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468f878530"/>
        <function-ref name="toggle" scoped="" ref="0x2b468f8786c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468f878850"/>
        <function-ref name="get" scoped="" ref="0x2b468f8789e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468f878b70"/>
        <function-ref name="set" scoped="" ref="0x2b468f878d00"/>
        <function-ref name="clr" scoped="" ref="0x2b468f8c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f893d60" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f893d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f88d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b468f8b48f0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468f8b48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8b4c70"/>
        <function-ref name="write" scoped="" ref="0x2b468f8b4e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b468f8ac440" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b468f8ac440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468f8ac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b468f8acb60" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b468f8acb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f8aa020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f8aa1b0"/>
        <function-ref name="request" scoped="" ref="0x2b468f8aa340"/>
        <function-ref name="granted" scoped="" ref="0x2b468f8aa4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f8aa660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b468f8a9880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2b468f8a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f8a9c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f8a9d90"/>
        <function-ref name="request" scoped="" ref="0x2b468f8a8020"/>
        <function-ref name="granted" scoped="" ref="0x2b468f8a81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f8a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b468f88a020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b468f88a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b468f88a3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b468f88a530"/>
        <function-ref name="rxOn" scoped="" ref="0x2b468f88a6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b468f88a850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b468f88a9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b468f88ab70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b468f88ad00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b468f889020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b468f8b95d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b468f8b95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8b9950"/>
        <function-ref name="write" scoped="" ref="0x2b468f8b9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b468f8b0420" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b468f8b0420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8b07a0"/>
        <function-ref name="write" scoped="" ref="0x2b468f8b0930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b468f8abbb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b468f8abbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468f8ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468f8a8600" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468f8a8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468f8a8980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468f8a8b10"/>
        <function-ref name="led1On" scoped="" ref="0x2b468f8a8ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468f8a8e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468f8a7020"/>
        <function-ref name="get" scoped="" ref="0x2b468f8a71b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468f8a7340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468f8a7980"/>
        <function-ref name="set" scoped="" ref="0x2b468f8a74d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b468f8a7660"/>
        <function-ref name="led2On" scoped="" ref="0x2b468f8a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b468f89e410" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2b468f89e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468f89e790"/>
        <function-ref name="runTask" scoped="" ref="0x2b468f89e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468f88d470" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468f88d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f88d7f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f88d980"/>
        <function-ref name="request" scoped="" ref="0x2b468f88db10"/>
        <function-ref name="granted" scoped="" ref="0x2b468f88dca0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f88de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b468f8b5e20" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b468f8b5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8bd1c0"/>
        <function-ref name="write" scoped="" ref="0x2b468f8bd350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b468f8b54a0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b468f8b54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468f8b5920"/>
        <function-ref name="write" scoped="" ref="0x2b468f8b5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b468f8bec00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b468f8bec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468f8c2020"/>
        <function-ref name="disable" scoped="" ref="0x2b468f8c21b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b468f8c2340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b468f8c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b468f8aaa10" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2b468f8aaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468f8aad90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468f8a9020"/>
        <function-ref name="request" scoped="" ref="0x2b468f8a91b0"/>
        <function-ref name="granted" scoped="" ref="0x2b468f8a9340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468f8a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b468f8ad3b0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b468f8ad3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468f8ad730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f95c7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f95c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f95cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b468f959220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b468f959220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b468f957b30"/>
        <function-ref name="fired" scoped="" ref="0x2b468f958a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b468f9574e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b468f957020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b468f955020"/>
        <function-ref name="start" scoped="" ref="0x2b468f958090"/>
        <function-ref name="stop" scoped="" ref="0x2b468f9585a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468f954a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468f954a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468f954da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b468f9532e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b468f9532e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b468fa0db30"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa0eae0"/>
        <function-ref name="startAt" scoped="" ref="0x2b468fa0d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b468fa0d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b468fa0b020"/>
        <function-ref name="start" scoped="" ref="0x2b468fa0e110"/>
        <function-ref name="stop" scoped="" ref="0x2b468fa0e620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4690ddc180" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b4690ddc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690ddab30"/>
        <function-ref name="fired" scoped="" ref="0x2b4690ddb9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b4690dda4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690dda020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4690dd9020"/>
        <function-ref name="start" scoped="" ref="0x2b4690ddb020"/>
        <function-ref name="stop" scoped="" ref="0x2b4690ddb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4690ddd8e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b4690ddd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4690dddc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4690dd52a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b4690dd52a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690dd2b30"/>
        <function-ref name="fired" scoped="" ref="0x2b4690dd4aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2b4690dd24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690dd2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4690dd1020"/>
        <function-ref name="start" scoped="" ref="0x2b4690dd40d0"/>
        <function-ref name="stop" scoped="" ref="0x2b4690dd45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4690dd6a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b4690dd6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4690dd6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b4690dbcc10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b4690dbcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b4690dbb020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b4690dbb1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b4690dbb340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b4690dbb4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b4690dbb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b4690dbe1b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b4690dbe1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4690dbe530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b4690dbe6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b4690dbe850"/>
        <function-ref name="get" scoped="" ref="0x2b4690dbe9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b4690dbeb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4690dbed00"/>
        <function-ref name="getMode" scoped="" ref="0x2b4690dbd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4690dbd1b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4690dbd340"/>
        <function-ref name="setMode" scoped="" ref="0x2b4690dbd4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b4690dbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b4690dbd8f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b4690dbd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b4690dbdc70"/>
        <function-ref name="getControl" scoped="" ref="0x2b4690dbde00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b4690dbc020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b4690dbc1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b4690dbc340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b4690dbc4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b4690dbc660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b4690dbc7f0"/>
        <function-ref name="setControl" scoped="" ref="0x2b4690dbc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b468f980ba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b468f980ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468f97f020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b468f97f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b468f97f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b468f97f4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b468f97f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b468f9844d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b468f9844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468f984850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468f9849e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468f984b70"/>
        <function-ref name="get" scoped="" ref="0x2b468f984d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468f983020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f9831b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468f983340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f9834d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f983660"/>
        <function-ref name="setMode" scoped="" ref="0x2b468f9837f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468f983980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b468f981280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468f981280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468f981600"/>
        <function-ref name="getControl" scoped="" ref="0x2b468f981790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468f981920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468f981ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468f981c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468f981dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468f980020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468f9801b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b468f980340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b4690db2a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b4690db2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b4690db2e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b4690db1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b4690db11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b4690db1340"/>
        <function-ref name="fired" scoped="" ref="0x2b4690db14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b4690db4020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b4690db4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4690db43a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b4690db4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b4690db46c0"/>
        <function-ref name="get" scoped="" ref="0x2b4690db4850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b4690db49e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4690db4b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b4690db4d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4690db3020"/>
        <function-ref name="overflow" scoped="" ref="0x2b4690db31b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b4690db3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b4690db34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4690db9da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b4690db9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690db6670"/>
        <function-ref name="fired" scoped="" ref="0x2b4690db7610"/>
        <function-ref name="startAt" scoped="" ref="0x2b4690db6020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690db7ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4690db6b30"/>
        <function-ref name="start" scoped="" ref="0x2b4690db8bf0"/>
        <function-ref name="stop" scoped="" ref="0x2b4690db7150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4690db9510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b4690db9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4690db9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b4690db3760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b4690db3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b4690db3ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b4690db3c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b4690db3e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b4690db2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b4690db21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b4690db2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b4690db24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b4690db2660"/>
        <function-ref name="setControl" scoped="" ref="0x2b4690db27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b468f9d3020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b468f9d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468f9d3e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f9d1800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f9d1340"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f9d1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b468fa01950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b468fa01950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468fa00780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f9ff150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468fa00c40"/>
        <function-ref name="overflow" scoped="" ref="0x2b468f9ff610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b468f9cd5f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b468f9cd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468f9b2430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468f9b2db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468f9b28f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468fa012a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4690dcf5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b4690dcf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690dcde50"/>
        <function-ref name="fired" scoped="" ref="0x2b4690dcee00"/>
        <function-ref name="startAt" scoped="" ref="0x2b4690dcd800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690dcd340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4690dcb340"/>
        <function-ref name="start" scoped="" ref="0x2b4690dce430"/>
        <function-ref name="stop" scoped="" ref="0x2b4690dce940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b4690dc9d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b4690dc9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690dc5670"/>
        <function-ref name="fired" scoped="" ref="0x2b4690dc7550"/>
        <function-ref name="startAt" scoped="" ref="0x2b4690dc5020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690dc7a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4690dc5b30"/>
        <function-ref name="start" scoped="" ref="0x2b4690dc8b60"/>
        <function-ref name="stop" scoped="" ref="0x2b4690dc7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4690dcb9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b4690dcb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4690dca7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4690dc91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4690dcaca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4690dc9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b468fa066a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b468fa066a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa06a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa06bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa06d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa05020"/>
        <function-ref name="get" scoped="" ref="0x2b468fa051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa05340"/>
        <function-ref name="set" scoped="" ref="0x2b468fa054d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b468fa059d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b468fa059d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa05d50"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa04020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa04340"/>
        <function-ref name="get" scoped="" ref="0x2b468fa044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa04660"/>
        <function-ref name="set" scoped="" ref="0x2b468fa047f0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa04980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b468fa04ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b468fa04ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa030a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa03230"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa03550"/>
        <function-ref name="get" scoped="" ref="0x2b468fa036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa03870"/>
        <function-ref name="set" scoped="" ref="0x2b468fa03a00"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b468fa07370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b468fa07370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa076f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa07880"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa07a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa07ba0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa07d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa06020"/>
        <function-ref name="set" scoped="" ref="0x2b468fa061b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b468fa53380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b468fa53380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa53700"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa53890"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa53a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa53bb0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa53d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa52020"/>
        <function-ref name="set" scoped="" ref="0x2b468fa521b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b468fa080e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b468fa080e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa08460"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa085f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa08780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa08910"/>
        <function-ref name="get" scoped="" ref="0x2b468fa08aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa08c30"/>
        <function-ref name="set" scoped="" ref="0x2b468fa08dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b468fa02020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b468fa02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa023a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa02530"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa02850"/>
        <function-ref name="get" scoped="" ref="0x2b468fa029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa02b70"/>
        <function-ref name="set" scoped="" ref="0x2b468fa02d00"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa53020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468fa50930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa50930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa50cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa50e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa4f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa4f340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa4f660"/>
        <function-ref name="get" scoped="" ref="0x2b468fa4f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa4f980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa4fb10"/>
        <function-ref name="set" scoped="" ref="0x2b468fa4fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fa4fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fa4e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fa4e2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa4e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468fa51710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa51710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa51a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa51c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa51db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa50020"/>
        <function-ref name="get" scoped="" ref="0x2b468fa501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa50340"/>
        <function-ref name="set" scoped="" ref="0x2b468fa504d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa50660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468fa4a480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa4a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa4a800"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa4a990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa4ab20"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa4acb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa4ae40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa49020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa491b0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa49340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa494d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa49660"/>
        <function-ref name="set" scoped="" ref="0x2b468fa497f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fa49980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fa49b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fa49da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468fa4c1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa4c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa4c530"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa4c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa4c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa4c9e0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa4cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa4cd00"/>
        <function-ref name="set" scoped="" ref="0x2b468fa4a020"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468fa45020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa453a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa45530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa456c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa45850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa45b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa45d00"/>
        <function-ref name="get" scoped="" ref="0x2b468fa44020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa44340"/>
        <function-ref name="set" scoped="" ref="0x2b468fa444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fa44660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fa447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fa44a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa44c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468fa47d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa47d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa46180"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa46310"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa464a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa46630"/>
        <function-ref name="get" scoped="" ref="0x2b468fa467c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa46950"/>
        <function-ref name="set" scoped="" ref="0x2b468fa46ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa46c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468fa41de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa41de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa40180"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa40310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa404a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa40630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa407c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa40950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa40ae0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa40c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa40e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa3f020"/>
        <function-ref name="set" scoped="" ref="0x2b468fa3f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fa3f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fa3f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fa3f760"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa3f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468fa42b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa42b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa41020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa411b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa41340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa414d0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa41660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa417f0"/>
        <function-ref name="set" scoped="" ref="0x2b468fa41980"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa41b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468fa3c930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa3c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa3ccb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa3ce40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa3b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa3b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa3b340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa3b660"/>
        <function-ref name="get" scoped="" ref="0x2b468fa3b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa3b980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa3bb10"/>
        <function-ref name="set" scoped="" ref="0x2b468fa3bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fa3be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fa3a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fa3a2b0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa3a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468fa3d710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa3d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa3da90"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa3dc20"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa3ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa3c020"/>
        <function-ref name="get" scoped="" ref="0x2b468fa3c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa3c340"/>
        <function-ref name="set" scoped="" ref="0x2b468fa3c4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa3c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468fa37480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa37800"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa37990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa37b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa37cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa37e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa35020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa351b0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa35340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa354d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa35660"/>
        <function-ref name="set" scoped="" ref="0x2b468fa357f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fa35980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fa35b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fa35da0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468fa381b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa381b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa38530"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa386c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa38850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa389e0"/>
        <function-ref name="get" scoped="" ref="0x2b468fa38b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa38d00"/>
        <function-ref name="set" scoped="" ref="0x2b468fa37020"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa371b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468fa31020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468fa31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa313a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa31530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa316c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa31850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa31b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa31d00"/>
        <function-ref name="get" scoped="" ref="0x2b468fa30020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa30340"/>
        <function-ref name="set" scoped="" ref="0x2b468fa304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fa30660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fa307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fa30a80"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa30c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468fa33d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa33d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa32180"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa32310"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa324a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa32630"/>
        <function-ref name="get" scoped="" ref="0x2b468fa327c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa32950"/>
        <function-ref name="set" scoped="" ref="0x2b468fa32ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fa32c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b468fa6c5a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b468fa6c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b468fa6c920"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa6cab0"/>
        <function-ref name="captured" scoped="" ref="0x2b468fa6cc40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b468fa6cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b468fa70210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b468fa70210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fa70590"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa70720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b468fa708b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b468fa70a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b468fa70e30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b468fa70e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fa6f1e0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa6f370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b468fa6f500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b468fa6f690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2b468fa56da0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2b468fa56da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b468fa55180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b468fa55310"/>
        <function-ref name="captured" scoped="" ref="0x2b468fa554a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468fa55630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468fa557c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b468fa55950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b468fa57020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b468fa57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b468fa573a0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa57530"/>
        <function-ref name="captured" scoped="" ref="0x2b468fa576c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b468fa57850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b468fa57ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b468fa57ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b468fa57e60"/>
        <function-ref name="getControl" scoped="" ref="0x2b468fa56020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468fa561b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b468fa56340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b468fa564d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468fa56660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b468fa567f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b468fa56980"/>
        <function-ref name="setControl" scoped="" ref="0x2b468fa56b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2b468fa55c20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468fa55c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fa54020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fa541b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fa54340"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fa544d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fa54660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fa547f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fa54980"/>
        <function-ref name="get" scoped="" ref="0x2b468fa54b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fa54ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fa54e30"/>
        <function-ref name="set" scoped="" ref="0x2b468faa9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468faa91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468faa9340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468faa95d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468faa9760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b468fa9cc40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b468fa9cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa9b020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa9b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa9b340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa9b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa9b660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa9b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b468fa91bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b468fa91bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa90020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa901b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa90340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa904d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa90660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b468fa99bc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b468fa99bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa98020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa981b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa98340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa984d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa98660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa987f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b468fa97bc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b468fa97bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa96020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa961b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa96340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa964d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa96660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b468faa2d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b468faa2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa9d0e0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa9d270"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa9d400"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa9d590"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa9d720"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa9d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b468fa93bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b468fa93bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa920a0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa92230"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa923c0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa92550"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa926e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa92870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b468fa9bbc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b468fa9bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa9a020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa9a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa9a340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa9a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa9a660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b468fa90bc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b468fa90bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa8f020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa8f1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa8f340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa8f4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa8f660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa8f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b468fa9ee30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b468fa9ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468faa31e0"/>
        <function-ref name="fired" scoped="" ref="0x2b468faa3370"/>
        <function-ref name="disable" scoped="" ref="0x2b468faa3500"/>
        <function-ref name="edge" scoped="" ref="0x2b468faa3690"/>
        <function-ref name="enable" scoped="" ref="0x2b468faa3820"/>
        <function-ref name="getValue" scoped="" ref="0x2b468faa39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b468fa96bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b468fa96bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa95020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa951b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa95340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa954d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa95660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b468fa9dc80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b468fa9dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa9c0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa9c230"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa9c3c0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa9c550"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa9c6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa9c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b468fa92c40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b468fa92c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa91020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa911b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa91340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa914d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa91660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b468fa9abc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b468fa9abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa99020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa991b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa99340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa994d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa99660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b468fa98bc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b468fa98bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa97020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa971b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa97340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa974d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa97660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa977f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b468faa3d80" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b468faa3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468faa2180"/>
        <function-ref name="fired" scoped="" ref="0x2b468faa2310"/>
        <function-ref name="disable" scoped="" ref="0x2b468faa24a0"/>
        <function-ref name="edge" scoped="" ref="0x2b468faa2630"/>
        <function-ref name="enable" scoped="" ref="0x2b468faa27c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468faa2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b468fa95bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b468fa95bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa93020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa931b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa93340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa934d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa93660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b468fa88a30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b468fa88a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa88db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa87020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa871b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa87340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa874d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b468fad2bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b468fad2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fad1020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fad11b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fad1340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fad14d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fad1660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fad17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b468fa85a30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b468fa85a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa85db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa84020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa841b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa84340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa844d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa84660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b468fa83a30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b468fa83a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa83db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa82020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa821b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa82340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa824d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa82660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b468fa8aa30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b468fa8aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa8adb0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa89020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa891b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa89340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa894d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa89660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b468fa80a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b468fa80a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fad3020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fad31b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fad3340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fad34d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fad3660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fad37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b468fa87a30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b468fa87a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa87db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa86020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa861b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa86340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa864d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b468fad1bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b468fad1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fad0020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fad01b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fad0340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fad04d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fad0660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fad07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b468fa8e9d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b468fa8e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa8ed50"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa8b020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa8b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa8b340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa8b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b468fa82a30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b468fa82a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa82db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa81020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa811b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa81340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa814d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa81660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b468fa89a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b468fa89a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa89db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa88020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa881b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa88340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa884d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b468fad3bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b468fad3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fad2020"/>
        <function-ref name="fired" scoped="" ref="0x2b468fad21b0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fad2340"/>
        <function-ref name="edge" scoped="" ref="0x2b468fad24d0"/>
        <function-ref name="enable" scoped="" ref="0x2b468fad2660"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fad27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b468fa86a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b468fa86a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa86db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa85020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa851b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa85340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa854d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa85660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b468fa84a30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b468fa84a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa84db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa83020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa831b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa83340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa834d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa83660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b468fa8ba30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b468fa8ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa8bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa8a020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa8a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa8a340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa8a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b468fa81a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b468fa81a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fa81db0"/>
        <function-ref name="fired" scoped="" ref="0x2b468fa80020"/>
        <function-ref name="disable" scoped="" ref="0x2b468fa801b0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fa80340"/>
        <function-ref name="enable" scoped="" ref="0x2b468fa804d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fa80660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b468fb55610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b468fb55610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fb55990"/>
        <function-ref name="fired" scoped="" ref="0x2b468fb55b20"/>
        <function-ref name="disable" scoped="" ref="0x2b468fb55cb0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fb55e40"/>
        <function-ref name="enable" scoped="" ref="0x2b468fba0020"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fba01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b468fb56a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b468fb56a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fb56db0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fb55020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b468fb551b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b468fb55340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b468fb9e610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b468fb9e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fb9e990"/>
        <function-ref name="fired" scoped="" ref="0x2b468fb9eb20"/>
        <function-ref name="disable" scoped="" ref="0x2b468fb9ecb0"/>
        <function-ref name="edge" scoped="" ref="0x2b468fb9ee40"/>
        <function-ref name="enable" scoped="" ref="0x2b468fb9d020"/>
        <function-ref name="getValue" scoped="" ref="0x2b468fb9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b468fb9fa70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b468fb9fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fb9fdf0"/>
        <function-ref name="disable" scoped="" ref="0x2b468fb9e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b468fb9e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b468fb9e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b468fef5e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b468fef5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef4410"/>
        <function-ref name="write" scoped="" ref="0x2b468fef45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b468feff160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b468feff160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468feff4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b468fef9e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468fef9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef8210"/>
        <function-ref name="write" scoped="" ref="0x2b468fef83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b468fef3880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b468fef3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef3c00"/>
        <function-ref name="write" scoped="" ref="0x2b468fef3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b468feeb0a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b468feeb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feeb420"/>
        <function-ref name="write" scoped="" ref="0x2b468feeb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b468fef20a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b468fef20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef2420"/>
        <function-ref name="write" scoped="" ref="0x2b468fef25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b468fedf500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b468fedf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fedf880"/>
        <function-ref name="write" scoped="" ref="0x2b468fedfa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b468fee1500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b468fee1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee1880"/>
        <function-ref name="write" scoped="" ref="0x2b468fee1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b468fefe490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b468fefe490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefe810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b468fee7880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b468fee7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee7c00"/>
        <function-ref name="write" scoped="" ref="0x2b468fee7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b468fee3500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b468fee3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee3880"/>
        <function-ref name="write" scoped="" ref="0x2b468fee3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b468fef8e50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b468fef8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef7210"/>
        <function-ref name="write" scoped="" ref="0x2b468fef73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b468fef7e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b468fef7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef5210"/>
        <function-ref name="write" scoped="" ref="0x2b468fef53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b468feed880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b468feed880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feedc00"/>
        <function-ref name="write" scoped="" ref="0x2b468feedd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b468feee0a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b468feee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feee420"/>
        <function-ref name="write" scoped="" ref="0x2b468feee5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b468fef2880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b468fef2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef2c00"/>
        <function-ref name="write" scoped="" ref="0x2b468fef2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b468ff01a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468ff01a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b468ff01e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b468ff00020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b468ff001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b468fefde00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b468fefde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b468fefb490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b468fefb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b468fee6c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b468fee6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee50a0"/>
        <function-ref name="write" scoped="" ref="0x2b468fee5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b468fefbbe0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b468fefbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b468fee3ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b468fee3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee10a0"/>
        <function-ref name="write" scoped="" ref="0x2b468fee1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b468fefd160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468fefd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b468fee70a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b468fee70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee7420"/>
        <function-ref name="write" scoped="" ref="0x2b468fee75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b468fef7670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b468fef7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef79f0"/>
        <function-ref name="write" scoped="" ref="0x2b468fef7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b468fef8670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468fef8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef89f0"/>
        <function-ref name="write" scoped="" ref="0x2b468fef8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b468ff00ad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b468ff00ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff00e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b468fee90a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b468fee90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee9420"/>
        <function-ref name="write" scoped="" ref="0x2b468fee95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b468feeb880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b468feeb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feebc00"/>
        <function-ref name="write" scoped="" ref="0x2b468feebd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b468fee9880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b468fee9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee9c00"/>
        <function-ref name="write" scoped="" ref="0x2b468fee9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b468fee0ce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b468fee0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fedf0a0"/>
        <function-ref name="write" scoped="" ref="0x2b468fedf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b468fee1ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b468fee1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee00a0"/>
        <function-ref name="write" scoped="" ref="0x2b468fee0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b468feee880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b468feee880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feeec00"/>
        <function-ref name="write" scoped="" ref="0x2b468feeed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b468feea0a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b468feea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feea420"/>
        <function-ref name="write" scoped="" ref="0x2b468feea5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b468fee4ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b468fee4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee30a0"/>
        <function-ref name="write" scoped="" ref="0x2b468fee3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b468fef1880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b468fef1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef1c00"/>
        <function-ref name="write" scoped="" ref="0x2b468fef1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b468fedfce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b468fedfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468fede0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468fede230"/>
        <function-ref name="write" scoped="" ref="0x2b468fede3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468fede550"/>
        <function-ref name="readDone" scoped="" ref="0x2b468fede6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b468ff00480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b468ff00480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff00800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b468fef9670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b468fef9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef99f0"/>
        <function-ref name="write" scoped="" ref="0x2b468fef9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b468fef5670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b468fef5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef59f0"/>
        <function-ref name="write" scoped="" ref="0x2b468fef5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b468feec0a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b468feec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feec420"/>
        <function-ref name="write" scoped="" ref="0x2b468feec5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b468fef10a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b468fef10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef1420"/>
        <function-ref name="write" scoped="" ref="0x2b468fef15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b468feec880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b468feec880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feecc00"/>
        <function-ref name="write" scoped="" ref="0x2b468feecd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b468fef4870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b468fef4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef4bf0"/>
        <function-ref name="write" scoped="" ref="0x2b468fef4d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b468feff7b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b468feff7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468feffb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b468fef30a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b468fef30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef3420"/>
        <function-ref name="write" scoped="" ref="0x2b468fef35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468ff02e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468ff02e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468ff011c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468ff01350"/>
        <function-ref name="request" scoped="" ref="0x2b468ff014e0"/>
        <function-ref name="granted" scoped="" ref="0x2b468ff01670"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468ff01800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b468fefa2f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b468fefa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b468fef9020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b468fef9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fef93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b468fee4500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b468fee4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee4880"/>
        <function-ref name="write" scoped="" ref="0x2b468fee4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b468fee5ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b468fee5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee40a0"/>
        <function-ref name="write" scoped="" ref="0x2b468fee4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b468fefd7b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b468fefd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b468fee5500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b468fee5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee5880"/>
        <function-ref name="write" scoped="" ref="0x2b468fee5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b468fee0500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b468fee0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee0880"/>
        <function-ref name="write" scoped="" ref="0x2b468fee0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b468feed0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b468feed0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feed420"/>
        <function-ref name="write" scoped="" ref="0x2b468feed5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b468feea880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b468feea880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468feeac00"/>
        <function-ref name="write" scoped="" ref="0x2b468feead90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b468feffe00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b468feffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefe1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b468fefeae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b468fefeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b468fef00a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b468fef00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef0420"/>
        <function-ref name="write" scoped="" ref="0x2b468fef05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b468fefa940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b468fefa940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fefacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b468fef0880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b468fef0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fef0c00"/>
        <function-ref name="write" scoped="" ref="0x2b468fef0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b468fee60a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b468fee60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fee6820"/>
        <function-ref name="write" scoped="" ref="0x2b468fee69b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b468fede9b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b468fede9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468feded30"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468fedd020"/>
        <function-ref name="write" scoped="" ref="0x2b468fedd1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468fedd340"/>
        <function-ref name="readDone" scoped="" ref="0x2b468fedd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b468fbb5630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b468fbb5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468fbb59b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468fbb5b40"/>
        <function-ref name="write" scoped="" ref="0x2b468fbb5cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468fbb5e60"/>
        <function-ref name="readDone" scoped="" ref="0x2b468fbb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b468fbb6680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b468fbb6a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b468fbb6b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b468fbb6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b468fbb48c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b468fbb48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fbb4c40"/>
        <function-ref name="write" scoped="" ref="0x2b468fbb4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b468fbb36f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b468fbb36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fbb3a70"/>
        <function-ref name="write" scoped="" ref="0x2b468fbb3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468fbb9960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468fbb9960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fbb9ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fbb9e70"/>
        <function-ref name="request" scoped="" ref="0x2b468fbb6030"/>
        <function-ref name="granted" scoped="" ref="0x2b468fbb61c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fbb6350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b468fbb1510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b468fbb1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fbb1890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b468fbf4680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b468fbf4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468fbf4a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468fbf4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b468fc04bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b468fc04bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468fc03020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468fc031b0"/>
        <function-ref name="write" scoped="" ref="0x2b468fc03340"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468fc034d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b468fc03660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b468fbb0930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468fbb0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b468fbb0cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b468fbb0e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b468fc05020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b468fbfd080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b468fbfd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b468fbfd400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b468fbfc020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2b468fbfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b468fbfc3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b468fbfc530"/>
        <function-ref name="isState" scoped="" ref="0x2b468fbfc6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b468fbfc850"/>
        <function-ref name="requestState" scoped="" ref="0x2b468fbfc9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b468fbfcb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b468fbff400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b468fbff400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fbff780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fbff910"/>
        <function-ref name="request" scoped="" ref="0x2b468fbffaa0"/>
        <function-ref name="granted" scoped="" ref="0x2b468fbffc30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fbffdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b468fc02020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b468fc02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fc023a0"/>
        <function-ref name="write" scoped="" ref="0x2b468fc02530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b468fc02db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b468fc02db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468fc00180"/>
        <function-ref name="write" scoped="" ref="0x2b468fc00310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468fbfcdf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468fbfcdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468fbfb1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468fbfb350"/>
        <function-ref name="led1On" scoped="" ref="0x2b468fbfb4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468fbfb670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468fbfb800"/>
        <function-ref name="get" scoped="" ref="0x2b468fbfb990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468fbfbb20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468fbf51b0"/>
        <function-ref name="set" scoped="" ref="0x2b468fbfbcb0"/>
        <function-ref name="led0On" scoped="" ref="0x2b468fbfbe40"/>
        <function-ref name="led2On" scoped="" ref="0x2b468fbf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468fc05810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468fc05810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fc05b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fc05d20"/>
        <function-ref name="request" scoped="" ref="0x2b468fc04020"/>
        <function-ref name="granted" scoped="" ref="0x2b468fc041b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fc04340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b468fbef120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2b468fbef120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468fbef4a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b468fbef630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b468fc00ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b468fc00ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468fbff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b468fc48770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b468fc48770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b468fc48af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b468fc48c80"/>
        <function-ref name="isState" scoped="" ref="0x2b468fc48e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b468fc45020"/>
        <function-ref name="requestState" scoped="" ref="0x2b468fc451b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b468fc45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b468fc44280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b468fc44280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b468fc44600"/>
        <function-ref name="toIdle" scoped="" ref="0x2b468fc44790"/>
        <function-ref name="isState" scoped="" ref="0x2b468fc44920"/>
        <function-ref name="isIdle" scoped="" ref="0x2b468fc44ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2b468fc44c40"/>
        <function-ref name="forceState" scoped="" ref="0x2b468fc44dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b468fc40020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b468fc40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b468fc403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b468fc40b70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b468fc40b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b468fc3e020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b468fc3e1b0"/>
        <function-ref name="isState" scoped="" ref="0x2b468fc3e340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b468fc3e4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b468fc3e660"/>
        <function-ref name="forceState" scoped="" ref="0x2b468fc3e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b468fec3020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b468fec3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468fec33a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468fec3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b468fc818f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b468fc818f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b468fc81c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468fc82c40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468fc82c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fc81020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fc811b0"/>
        <function-ref name="request" scoped="" ref="0x2b468fc81340"/>
        <function-ref name="granted" scoped="" ref="0x2b468fc814d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fc81660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4690ebeaf0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690ebeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4690ebee70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4690ebd030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b4690ebb440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b4690ebb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690ebb7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4690ebb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b4690ebbbe0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b4690ebbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b4690eba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b4690ebd2c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b4690ebd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b4690ebd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690ec0e70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690ec0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690ebe220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690ebe3b0"/>
        <function-ref name="request" scoped="" ref="0x2b4690ebe540"/>
        <function-ref name="granted" scoped="" ref="0x2b4690ebe6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690ebe860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b4690ebd8d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b4690ebd8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b4690ebdc50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b4690ebdde0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b4690ebb020"/>
        <function-ref name="write" scoped="" ref="0x2b4690ebb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b468fc6e6b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fc6e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468fc6ea30"/>
        <function-ref name="configure" scoped="" ref="0x2b468fc6ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b468fc6c850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b468fc6c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468fc6cbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468fc6cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b468fc6aa40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b468fc6aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b468fc6adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b468fc6d020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b468fc6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b468fc6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b468fc6b690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b468fc6b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fc6ba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fc6bba0"/>
        <function-ref name="request" scoped="" ref="0x2b468fc6bd30"/>
        <function-ref name="granted" scoped="" ref="0x2b468fc6a020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fc6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468fc6f430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468fc6f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fc6f7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fc6f940"/>
        <function-ref name="request" scoped="" ref="0x2b468fc6fad0"/>
        <function-ref name="granted" scoped="" ref="0x2b468fc6fc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fc6fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b468fc6d6a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b468fc6d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b468fc6da20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b468fc6dbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b468fc6dd40"/>
        <function-ref name="write" scoped="" ref="0x2b468fc6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b468fc682a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468fc682a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468fc68620"/>
        <function-ref name="txDone" scoped="" ref="0x2b468fc687b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b468fcc8250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fcc8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468fcc85f0"/>
        <function-ref name="configure" scoped="" ref="0x2b468fcc8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b468fcc7c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b468fcc7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b468fcc6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b468fcc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b468fcc53e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b468fcc53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b468fcc5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b468fcc8a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b468fcc8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b468fcc8d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b468fcc5a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b468fcc5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b468fcc5dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b468fcc4020"/>
        <function-ref name="setUctl" scoped="" ref="0x2b468fcc41b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b468fcc4340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b468fcc44d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b468fcc4660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b468fcc47f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b468fcc4980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b468fcc4b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b468fcc4ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b468fcc4e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b468fcc3020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b468fcc31b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b468fcc3440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b468fcc35d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b468fcc3760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b468fcc38f0"/>
        <function-ref name="isUart" scoped="" ref="0x2b468fcc3a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b468fcc3c10"/>
        <function-ref name="isSpi" scoped="" ref="0x2b468fcc3da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b468fcc2020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b468fcc21b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b468fcc2340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b468fcc24d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468fcc2660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b468fcc29f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b468fcc2b80"/>
        <function-ref name="setUbr" scoped="" ref="0x2b468fcc2d10"/>
        <function-ref name="tx" scoped="" ref="0x2b468fcc1020"/>
        <function-ref name="getUctl" scoped="" ref="0x2b468fcc11b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b468fcc1340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b468fcc14d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b468fcc1660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b468fcc17f0"/>
        <function-ref name="rx" scoped="" ref="0x2b468fcc1980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b468fcc1b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b468fcc1ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b468fcc1e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b468fcc0020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b468fcc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b468fcc0c20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b468fcc0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b468fcbf020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b468fcbf1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b468fcbf340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b468fcbf4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b468fcbf660"/>
        <function-ref name="get" scoped="" ref="0x2b468fcbf7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b468fcbf980"/>
        <function-ref name="led2On" scoped="" ref="0x2b468fcbe020"/>
        <function-ref name="set" scoped="" ref="0x2b468fcbfca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b468fcbfb10"/>
        <function-ref name="led0On" scoped="" ref="0x2b468fcbfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b468fcc65b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b468fcc65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fcc6950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fcc6ae0"/>
        <function-ref name="request" scoped="" ref="0x2b468fcc6c70"/>
        <function-ref name="granted" scoped="" ref="0x2b468fcc6e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fcc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468fcc9470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468fcc9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fcc9810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fcc99a0"/>
        <function-ref name="request" scoped="" ref="0x2b468fcc9b30"/>
        <function-ref name="granted" scoped="" ref="0x2b468fcc9cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fcc9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b468fcc7060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b468fcc7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b468fcc73e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b468fcc7570"/>
        <function-ref name="splitRead" scoped="" ref="0x2b468fcc7700"/>
        <function-ref name="write" scoped="" ref="0x2b468fcc7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b468fcc0480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b468fcc0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468fcc0800"/>
        <function-ref name="txDone" scoped="" ref="0x2b468fcc0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2b468fcbe2f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2b468fcbe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b468fcbe670"/>
        <function-ref name="runTask" scoped="" ref="0x2b468fcbe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b468fd0d5e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b468fd0d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fd0d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b468fd0ed10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b468fd0ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468fd0d0e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b468fd0d270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b468fd12020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b468fd12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b468fd123a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b468fd12530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b468fd126c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b468fd12850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b468fd129e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b468fd12b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b468fd12d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b468fd11020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b468fd111b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b468fd11340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b468fd114d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b468fd11660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b468fd117f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b468fd11a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b468fd11c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b468fd11da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b468fd10020"/>
        <function-ref name="isUart" scoped="" ref="0x2b468fd101b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b468fd10340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b468fd104d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b468fd10660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b468fd107f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b468fd10980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b468fd10b10"/>
        <function-ref name="getMode" scoped="" ref="0x2b468fd10ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b468fd0f220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b468fd0f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b468fd0f540"/>
        <function-ref name="tx" scoped="" ref="0x2b468fd0f6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b468fd0f860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b468fd0f9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b468fd0fb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b468fd0fd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b468fd0e020"/>
        <function-ref name="rx" scoped="" ref="0x2b468fd0e1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b468fd0e340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b468fd0e4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b468fd0e660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b468fd0e7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b468fd0e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b468fd31b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b468fd31b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fd30020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fd301b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fd30340"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fd304d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fd30660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fd307f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fd30980"/>
        <function-ref name="get" scoped="" ref="0x2b468fd30b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fd30ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fd30e30"/>
        <function-ref name="set" scoped="" ref="0x2b468fd2f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fd2f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fd2f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fd2f5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fd2f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b468fd05780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b468fd05780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468fd05b00"/>
        <function-ref name="txDone" scoped="" ref="0x2b468fd05c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b468fd2fb20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b468fd2fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fd2e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fd2e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fd2e340"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fd2e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fd2e660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fd2e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fd2e980"/>
        <function-ref name="get" scoped="" ref="0x2b468fd2eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fd2eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fd2ee30"/>
        <function-ref name="set" scoped="" ref="0x2b468fd2d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fd2d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fd2d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fd2d5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fd2d760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b468fd2db20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b468fd2db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fd2c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fd2c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fd2c340"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fd2c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fd2c660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fd2c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fd2c980"/>
        <function-ref name="get" scoped="" ref="0x2b468fd2cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fd2cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fd2ce30"/>
        <function-ref name="set" scoped="" ref="0x2b468fd2b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fd2b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fd2b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fd2b5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fd2b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b468fd0cc70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b468fd0cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b468fd09020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b468fd091b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b468fd09340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b468fd094d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b468fd09660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b468fd097f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b468fd09980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b468fd09b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b468fd09ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b468fd09e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b468fd08020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b468fd081b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b468fd08340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b468fd085d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b468fd08760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b468fd088f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b468fd08a80"/>
        <function-ref name="isUart" scoped="" ref="0x2b468fd08c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b468fd08da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b468fd07020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b468fd071b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b468fd07340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b468fd074d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b468fd07660"/>
        <function-ref name="getMode" scoped="" ref="0x2b468fd077f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b468fd07b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b468fd07d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b468fd06020"/>
        <function-ref name="tx" scoped="" ref="0x2b468fd061b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b468fd06340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b468fd064d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b468fd06660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b468fd067f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b468fd06980"/>
        <function-ref name="rx" scoped="" ref="0x2b468fd06b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b468fd06ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b468fd06e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b468fd05020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b468fd051b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b468fd05340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2b468fd3ad10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b468fd3ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b468fd030e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b468fd03270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b468fd03400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b468fd03590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b468fd03720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b468fd038b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b468fd03a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b468fd03bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468fd03d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b468fd02020"/>
        <function-ref name="getData" scoped="" ref="0x2b468fd021b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b468fd02340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b468fd024d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b468fd02760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b468fd028f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b468fd02a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b468fd02c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b468fd02da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b468fd39020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b468fd391b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b468fd39340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b468fd394d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b468fd39660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b468fd397f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b468fd39980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b468fd39d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b468fd38020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b468fd381b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b468fd38340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b468fd384d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b468fd38660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b468fd387f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b468fd38980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b468fd38b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b468fd38ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b468fd38e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b468fd37020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b468fd371b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b468fd37340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b468fd374d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b468fd37660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b468fd377f0"/>
        <function-ref name="setData" scoped="" ref="0x2b468fd37980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b468fd37b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b468fd37ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b468fd37e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b468fd36020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b468fd361b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b468fd36340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b468fd368d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b468fd36a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b468fd36bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b468fd36d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b468fd35020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b468fd351b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b468fd35340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b468fd354d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b468fd35660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b468fd357f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b468fd33b20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b468fd33b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fd32020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fd321b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fd32340"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fd324d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fd32660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fd327f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fd32980"/>
        <function-ref name="get" scoped="" ref="0x2b468fd32b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fd32ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fd32e30"/>
        <function-ref name="set" scoped="" ref="0x2b468fd31020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fd311b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fd31340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fd315d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fd31760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b468fd04150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468fd04150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fd044d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b468fd35bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b468fd35bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fd34020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fd341b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fd34340"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fd344d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fd34660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fd347f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fd34980"/>
        <function-ref name="get" scoped="" ref="0x2b468fd34b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fd34ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fd34e30"/>
        <function-ref name="set" scoped="" ref="0x2b468fd33020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fd331b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fd33340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fd335d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468fd33760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4690eb35d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690eb35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4690eb3950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4690eb3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b4690ead7c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b4690ead7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4690eadb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4690ea6a80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4690ea6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4690ea6e00"/>
        <function-ref name="configure" scoped="" ref="0x2b4690ea4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b4690eaddd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b4690eaddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b4690eac180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b4690eac310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b4690eac4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b4690eac630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b4690eac7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b4690eac950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b4690eacae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b4690eacc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b4690eace00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b4690eab020"/>
        <function-ref name="getData" scoped="" ref="0x2b4690eab1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b4690eab340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b4690eab4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b4690eab760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b4690eab8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b4690eaba80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b4690eabc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b4690eabda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b4690eaa020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b4690eaa1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b4690eaa340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b4690eaa4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b4690eaa660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b4690eaa7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b4690eaa980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b4690eaad10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b4690ea9020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b4690ea91b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b4690ea9340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b4690ea94d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b4690ea9660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b4690ea97f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b4690ea9980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b4690ea9b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b4690ea9ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b4690ea9e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b4690ea8020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b4690ea81b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b4690ea8340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b4690ea84d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b4690ea8660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b4690ea87f0"/>
        <function-ref name="setData" scoped="" ref="0x2b4690ea8980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b4690ea8b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b4690ea8ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b4690ea8e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b4690ea7020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b4690ea71b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b4690ea7340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b4690ea78d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b4690ea7a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b4690ea7bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b4690ea7d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b4690ea6020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b4690ea61b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b4690ea6340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b4690ea64d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b4690ea6660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b4690ea67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b4690ead020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b4690ead020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b4690ead3a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b4690ead530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690eb4860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690eb4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690eb4be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690eb4d70"/>
        <function-ref name="request" scoped="" ref="0x2b4690eb3020"/>
        <function-ref name="granted" scoped="" ref="0x2b4690eb31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690eb3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b4690eb25a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b4690eb25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b4690eb2920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b4690eb2ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b4690eb2c40"/>
        <function-ref name="enableUart" scoped="" ref="0x2b4690eb2dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b4690eb1020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b4690eb11b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b4690eb1340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b4690eb14d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b4690eb1660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b4690eb17f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b4690eb1980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b4690eb1b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b4690eb1ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b4690eb0020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b4690eb01b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b4690eb0340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b4690eb04d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b4690eb0660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b4690eb07f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b4690eb0980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b4690eb0b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b4690eb0ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b4690eb0e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b4690eaf020"/>
        <function-ref name="getMode" scoped="" ref="0x2b4690eaf1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b4690eaf540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b4690eaf6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b4690eaf860"/>
        <function-ref name="tx" scoped="" ref="0x2b4690eaf9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b4690eafb80"/>
        <function-ref name="disableUart" scoped="" ref="0x2b4690eafd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b4690eae020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b4690eae1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b4690eae340"/>
        <function-ref name="rx" scoped="" ref="0x2b4690eae4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b4690eae660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b4690eae7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b4690eae980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b4690eaeb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b4690eaeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4690eb3d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690eb3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4690eb2180"/>
        <function-ref name="userId" scoped="" ref="0x2b4690eb2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b468fdaa2c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b468fdaa2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b468fdaa640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468fdaa7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b468fda88a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fda88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468fda8c20"/>
        <function-ref name="configure" scoped="" ref="0x2b468fda8db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b468fdad4d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b468fdad4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468fdad850"/>
        <function-ref name="txDone" scoped="" ref="0x2b468fdad9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468fdab020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468fdab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fdab3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fdab530"/>
        <function-ref name="request" scoped="" ref="0x2b468fdab6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b468fdab850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fdab9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b468fdac3f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468fdac3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fdac770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b468fdaaad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fdaaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b468fdaae50"/>
        <function-ref name="userId" scoped="" ref="0x2b468fda8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b468fe08e50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fe08e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b468fe07210"/>
        <function-ref name="userId" scoped="" ref="0x2b468fe073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b468fe09060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b468fe09060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468fe09400"/>
        <function-ref name="txDone" scoped="" ref="0x2b468fe09590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b468fe08840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b468fe08840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fe08bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b468fe09990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b468fe09990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b468fe09d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b468fe08060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b468fe08060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b468fe083e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b468fe08570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b468fe03850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b468fe03850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b468fe03bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468fe03d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b468fe01570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b468fe01570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b468fe01910"/>
        <function-ref name="configure" scoped="" ref="0x2b468fe01aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b468fe02020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b468fe02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fe023a0"/>
        <function-ref name="requested" scoped="" ref="0x2b468fe02530"/>
        <function-ref name="granted" scoped="" ref="0x2b468fe026c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fe02850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b468fe029e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468fe05a80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468fe05a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468fe05e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468fe03020"/>
        <function-ref name="request" scoped="" ref="0x2b468fe031b0"/>
        <function-ref name="granted" scoped="" ref="0x2b468fe03340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468fe034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b468fe02c30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b468fe02c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b468fe01020"/>
        <function-ref name="userId" scoped="" ref="0x2b468fe011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4690f91a40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b4690f91a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4690f91dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b4690f900a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b4690f900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4690f90420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4690f905b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4690f90740"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4690f908d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4690f8d020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4690f8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4690f8d3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4690f8d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4690f8bcf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4690f8bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4690f8a0e0"/>
        <function-ref name="configure" scoped="" ref="0x2b4690f8a270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b4690f8a500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b4690f8a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4690f8a880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4690f8aa10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4690f8aba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4690f8ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b4690f8d7a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b4690f8d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690f8db20"/>
        <function-ref name="requested" scoped="" ref="0x2b4690f8dcb0"/>
        <function-ref name="granted" scoped="" ref="0x2b4690f8de40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690f8b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4690f8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4690f89020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b4690f89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4690f893a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4690f89530"/>
        <function-ref name="led1On" scoped="" ref="0x2b4690f896c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4690f89850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4690f899e0"/>
        <function-ref name="get" scoped="" ref="0x2b4690f89b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4690f89d00"/>
        <function-ref name="led0On" scoped="" ref="0x2b4690f884d0"/>
        <function-ref name="set" scoped="" ref="0x2b4690f881b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b4690f88020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4690f88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690f8e270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690f8e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690f8e610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690f8e7a0"/>
        <function-ref name="request" scoped="" ref="0x2b4690f8e930"/>
        <function-ref name="granted" scoped="" ref="0x2b4690f8eac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690f8ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4690f8b400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4690f8b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4690f8b780"/>
        <function-ref name="userId" scoped="" ref="0x2b4690f8b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b4690f887a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b4690f887a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4690f88b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b4690f88cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b468fdfa540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b468fdfa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b468fdfa8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b468fdfaa50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b468fdfabe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b468fdfad70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b468fdf7020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b468fdf71b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b468fdf7340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b468fdf74d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468fdf7660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b468fdf77f0"/>
        <function-ref name="getData" scoped="" ref="0x2b468fdf7980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b468fdf7b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b468fdf7ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b468fdf6020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b468fdf61b0"/>
        <function-ref name="getIV" scoped="" ref="0x2b468fdf6340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b468fdf64d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b468fdf6660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b468fdf67f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b468fdf6980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b468fdf6b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b468fdf6ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b468fdf6e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b468fdf5020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b468fdf51b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b468fdf5540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b468fdf56d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b468fdf5860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b468fdf59f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b468fdf5b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b468fdf5d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b468fdf4020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b468fdf41b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b468fdf4340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b468fdf44d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b468fdf4660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b468fdf47f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b468fdf4980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b468fdf4b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b468fdf4ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b468fdf4e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b468fdf3020"/>
        <function-ref name="setData" scoped="" ref="0x2b468fdf31b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b468fdf3340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b468fdf34d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b468fdf3660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b468fdf37f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b468fdf3980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b468fdf3b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b468fdf2420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b468fdf25b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b468fdf2740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b468fdf28d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b468fdf2a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b468fdf2bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b468fdf2d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b468fdf1020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b468fdf11b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b468fdf1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2b468fde7250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2b468fde7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b468fde75d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b468fde7760"/>
        <function-ref name="setUctl" scoped="" ref="0x2b468fde78f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b468fde7a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b468fde7c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b468fde7da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b468fde6020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b468fde61b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b468fde6340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b468fde64d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b468fde6660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b468fde67f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b468fde6980"/>
        <function-ref name="getUbr" scoped="" ref="0x2b468fde6c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b468fde6da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b468fde5020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b468fde51b0"/>
        <function-ref name="isUart" scoped="" ref="0x2b468fde5340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b468fde54d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b468fde5660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b468fde57f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b468fde5980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b468fde5b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b468fde5ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468fde5e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b468fde4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b468fde43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b468fde4540"/>
        <function-ref name="tx" scoped="" ref="0x2b468fde46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b468fde4860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b468fde49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b468fde4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b468fde4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b468fde3020"/>
        <function-ref name="rx" scoped="" ref="0x2b468fde31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b468fde3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b468fde34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b468fde3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b468fde37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b468fde3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b468fde1cb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b468fde1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fde00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fde0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fde03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fde0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fde06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fde0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fde0a00"/>
        <function-ref name="get" scoped="" ref="0x2b468fde0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fde0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fddf020"/>
        <function-ref name="set" scoped="" ref="0x2b468fddf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fddf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fddf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fddf760"/>
        <function-ref name="clr" scoped="" ref="0x2b468fddf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2b468fdee430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b468fdee430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b468fdee7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b468fdee940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b468fdeead0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b468fdeec60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b468fdeedf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b468fded020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b468fded1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b468fded340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468fded4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b468fded660"/>
        <function-ref name="getData" scoped="" ref="0x2b468fded7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b468fded980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b468fdedb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b468fdedda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b468fdec020"/>
        <function-ref name="getIV" scoped="" ref="0x2b468fdec1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b468fdec340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b468fdec4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b468fdec660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b468fdec7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b468fdec980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b468fdecb10"/>
        <function-ref name="isI2C" scoped="" ref="0x2b468fdecca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b468fdece30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b468fdeb020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b468fdeb3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b468fdeb540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b468fdeb6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b468fdeb860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b468fdeb9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b468fdebb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b468fdebd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b468fdea020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b468fdea1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b468fdea340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b468fdea4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b468fdea660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b468fdea7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b468fdea980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b468fdeab10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b468fdeaca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b468fdeae30"/>
        <function-ref name="setData" scoped="" ref="0x2b468fde9020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b468fde91b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b468fde9340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b468fde94d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b468fde9660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b468fde97f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b468fde9980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b468fde8020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b468fde81b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b468fde8340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b468fde84d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b468fde8660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b468fde87f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b468fde8980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b468fde8b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b468fde8ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b468fde8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b468fde3d40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b468fde3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468fde20e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468fde2270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468fde2400"/>
        <function-ref name="toggle" scoped="" ref="0x2b468fde2590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468fde2720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468fde28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468fde2a40"/>
        <function-ref name="get" scoped="" ref="0x2b468fde2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468fde2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468fde1020"/>
        <function-ref name="set" scoped="" ref="0x2b468fde11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468fde1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468fde14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468fde1760"/>
        <function-ref name="clr" scoped="" ref="0x2b468fde18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b468ff2dc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b468ff2dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2c210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b468ff38da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b468ff38da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff36180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b468ff30b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468ff30b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2f020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b468ff2a670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b468ff2a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b468ff23e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b468ff23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff22210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b468ff2ae50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b468ff2ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff29210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b468ff172f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b468ff172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff17670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff17800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b468ff192f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b468ff192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff19670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff19800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b468ff35120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b468ff35120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff354a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b468ff1f670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b468ff1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b468ff1a2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b468ff1a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1a670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b468ff2fc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b468ff2fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2e020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b468ff2ec60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b468ff2ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2d020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b468ff25670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b468ff25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff259f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff25b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b468ff27e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b468ff27e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff26210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b468ff29670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b468ff29670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff299f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff29b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b468ff39760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468ff39760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b468ff39ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b468ff39c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b468ff39e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b468ff34aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b468ff34aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff34e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b468ff33120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b468ff33120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff335a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b468ff1ea70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b468ff1ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1edf0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b468ff33870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b468ff33870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff33bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b468ff1aad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b468ff1aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1ae50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b468ff35dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468ff35dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff34180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b468ff20e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b468ff20e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1f210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b468ff2e480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b468ff2e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2e800"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b468ff2f480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468ff2f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2f800"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b468ff38750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b468ff38750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff38ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b468ff21e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b468ff21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff20210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b468ff22670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b468ff22670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff229f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff22b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b468ff20670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b468ff20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff209f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff20b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b468ff18ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b468ff18ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff18e50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b468ff19ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b468ff19ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff19e50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b468ff26670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b468ff26670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff269f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff26b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b468ff22e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b468ff22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff21210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b468ff1bad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b468ff1bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1be50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b468ff28670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b468ff28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff289f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff28b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b468ff17ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b468ff17ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468ff17e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468ff15020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff151b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468ff15340"/>
        <function-ref name="readDone" scoped="" ref="0x2b468ff154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b468ff38100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b468ff38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff38480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b468ff30370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b468ff30370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff306f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff30880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b468ff2d480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b468ff2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2d800"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b468ff25e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b468ff25e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff23210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b468ff29e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b468ff29e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff28210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b468ff23670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b468ff23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff239f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff23b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b468ff2c670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b468ff2c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b468ff36450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b468ff36450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff367d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b468ff2ce50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b468ff2ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff2a210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468ff3aa80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468ff3aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468ff3ae00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468ff39020"/>
        <function-ref name="request" scoped="" ref="0x2b468ff391b0"/>
        <function-ref name="granted" scoped="" ref="0x2b468ff39340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468ff394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b468ff32020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b468ff32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b468ff32cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b468ff32cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff300a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b468ff1b2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b468ff1b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1b670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b468ff1cad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b468ff1cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1ce50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b468ff34450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b468ff34450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff347d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b468ff1c2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b468ff1c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1c670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b468ff182f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b468ff182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff18670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff18800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b468ff26e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b468ff26e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff25210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b468ff21670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b468ff21670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff219f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff21b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b468ff36aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b468ff36aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff36e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b468ff35770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b468ff35770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff35af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b468ff28e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b468ff28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff27210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b468ff32670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b468ff32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff329f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b468ff27670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b468ff27670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff279f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff27b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b468ff1fe50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b468ff1fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff1e610"/>
        <function-ref name="write" scoped="" ref="0x2b468ff1e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b468ff157a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b468ff157a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468ff15b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468ff15cb0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff15e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468ff14020"/>
        <function-ref name="readDone" scoped="" ref="0x2b468ff141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b468ff66c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b468ff66c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff65210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b468ff0bda0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b468ff0bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff0a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b468ff6ab50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b468ff6ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff69020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b468ff64670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b468ff64670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff649f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff64b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b468ff5de50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b468ff5de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5c210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b468ff64e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b468ff64e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff63210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b468ff502f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b468ff502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff50670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff50800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b468ff522f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b468ff522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff52670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff52800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b468ff09120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b468ff09120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff094a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b468ff58670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b468ff58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff589f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff58b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b468ff542f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b468ff542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff54670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff54800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b468ff69c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b468ff69c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff67020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b468ff67c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b468ff67c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff66020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b468ff5e670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b468ff5e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b468ff60e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b468ff60e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5f210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b468ff63670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b468ff63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff639f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff63b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b468ff0c760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b468ff0c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b468ff0cae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b468ff0cc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b468ff0ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b468ff6daa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b468ff6daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b468ff6c120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b468ff6c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b468ff57a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b468ff57a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff57df0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b468ff6c870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b468ff6c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b468ff54ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b468ff54ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff54e50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b468ff09dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b468ff09dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b468ff59e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b468ff59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff58210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b468ff67480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b468ff67480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff67800"/>
        <function-ref name="write" scoped="" ref="0x2b468ff67990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b468ff69480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b468ff69480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff69800"/>
        <function-ref name="write" scoped="" ref="0x2b468ff69990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b468ff0b750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b468ff0b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff0bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b468ff5be50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b468ff5be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff59210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b468ff5c670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b468ff5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b468ff59670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b468ff59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff599f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff59b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b468ff51ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b468ff51ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff51e50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b468ff52ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b468ff52ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff52e50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b468ff5f670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b468ff5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b468ff5ce50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b468ff5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5b210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b468ff55ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b468ff55ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff55e50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b468ff62670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b468ff62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff629f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff62b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b468ff50ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b468ff50ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468ff50e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468ff4f020"/>
        <function-ref name="write" scoped="" ref="0x2b468ff4f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468ff4f340"/>
        <function-ref name="readDone" scoped="" ref="0x2b468ff4f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b468ff0b100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b468ff0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff0b480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b468ff6a370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b468ff6a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff6a6f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff6a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b468ff66480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b468ff66480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff66800"/>
        <function-ref name="write" scoped="" ref="0x2b468ff66990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b468ff5ee50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b468ff5ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5d210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b468ff63e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b468ff63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff62210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b468ff5d670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b468ff5d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b468ff65670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b468ff65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff659f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff65b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b468ff0a450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b468ff0a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff0a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b468ff65e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b468ff65e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff64210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b468ff0d9e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b468ff0d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b468ff0dd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b468ff0c020"/>
        <function-ref name="request" scoped="" ref="0x2b468ff0c1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b468ff0c340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b468ff0c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b468ff6b020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b468ff6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b468ff6bcc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b468ff6bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b468ff552f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b468ff552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff55670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff55800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b468ff56ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b468ff56ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff56e50"/>
        <function-ref name="write" scoped="" ref="0x2b468ff55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b468ff6d450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b468ff6d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b468ff562f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b468ff562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff56670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff56800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b468ff512f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b468ff512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff51670"/>
        <function-ref name="write" scoped="" ref="0x2b468ff51800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b468ff5fe50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b468ff5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5e210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b468ff5b670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b468ff5b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff5b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff5bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b468ff0aaa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b468ff0aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff0ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b468ff09770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b468ff09770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff09af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b468ff62e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b468ff62e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff60210"/>
        <function-ref name="write" scoped="" ref="0x2b468ff603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b468ff6b670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b468ff6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b468ff6b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b468ff60670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b468ff60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff609f0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff60b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b468ff58e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b468ff58e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff57610"/>
        <function-ref name="write" scoped="" ref="0x2b468ff577a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b468ff4f7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b468ff4f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b468ff4fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b468ff4fcb0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff4fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b468ff4e020"/>
        <function-ref name="readDone" scoped="" ref="0x2b468ff4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b468ff47b30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b468ff47b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b468ff44020"/>
        <function-ref name="changed" scoped="" ref="0x2b468ff441b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b468ff44340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b468ff444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b468ff46d30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b468ff46d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b468ff950e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b468ff91310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b468ff91310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b468ff91690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2b468ff8e8c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b468ff8e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff8ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b468ff84020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b468ff84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff843a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b468ff7acb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b468ff7acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff7d0a0"/>
        <function-ref name="write" scoped="" ref="0x2b468ff7d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2b468ff7d5b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2b468ff7d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468ff7d930"/>
        <function-ref name="stop" scoped="" ref="0x2b468ff7dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b468ff7e210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b468ff7e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ff7e590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b468ffd1020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b468ffd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ffd13a0"/>
        <function-ref name="write" scoped="" ref="0x2b468ffd1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b468ffd18c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b468ffd18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468ffd1c40"/>
        <function-ref name="isInput" scoped="" ref="0x2b468ffd1dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468ffd0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468ffd01b0"/>
        <function-ref name="get" scoped="" ref="0x2b468ffd0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468ffd04d0"/>
        <function-ref name="set" scoped="" ref="0x2b468ffd0660"/>
        <function-ref name="clr" scoped="" ref="0x2b468ffd07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b468ffc8b40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b468ffc8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b468ffca970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b468ffcf490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b468ffcf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b468ffcf810"/>
        <function-ref name="write" scoped="" ref="0x2b468ffcf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b468ffcfd30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b468ffcfd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468ffcc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b468ffcc270"/>
        <function-ref name="toggle" scoped="" ref="0x2b468ffcc400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468ffcc590"/>
        <function-ref name="get" scoped="" ref="0x2b468ffcc720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468ffcc8b0"/>
        <function-ref name="set" scoped="" ref="0x2b468ffcca40"/>
        <function-ref name="clr" scoped="" ref="0x2b468ffccbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b468ffa8020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b468ffa8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b468ffa8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b468ffa5d20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b468ffa5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b468ffffb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b468fffe260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b468fffe260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468fffd090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468fffda10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468fffd550"/>
        <function-ref name="overflow" scoped="" ref="0x2b468fffc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2b468fffa890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b468fffa890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468fff76e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468fff6090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468fff7ba0"/>
        <function-ref name="overflow" scoped="" ref="0x2b468fff6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b468fff1190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b468fff1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b468fff1510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b468fff16a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b468fff1830"/>
        <function-ref name="get" scoped="" ref="0x2b468fff19c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b468fff1b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468fff1ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b468fff1e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468fff0030"/>
        <function-ref name="overflow" scoped="" ref="0x2b468fff01c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b468fff0350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b468fff04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b468fff4060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b468fff4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468eda4ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b468eda2240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b468fff4e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b468fff2820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b468fff2360"/>
        <function-ref name="overflow" scoped="" ref="0x2b468fff2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2b468ffd25a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2b468ffd25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468ffd2920"/>
        <function-ref name="isInput" scoped="" ref="0x2b468ffd2ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b468ffd2c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468ffd2dd0"/>
        <function-ref name="get" scoped="" ref="0x2b468ffec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468ffec1b0"/>
        <function-ref name="set" scoped="" ref="0x2b468ffec340"/>
        <function-ref name="clr" scoped="" ref="0x2b468ffec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b468ffeac50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b468ffeac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468ffe9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b468ffe91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b468ffe9340"/>
        <function-ref name="toggle" scoped="" ref="0x2b468ffe94d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468ffe9660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b468ffe97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468ffe9980"/>
        <function-ref name="get" scoped="" ref="0x2b468ffe9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b468ffe9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b468ffe9e30"/>
        <function-ref name="set" scoped="" ref="0x2b468ffe8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b468ffe81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b468ffe8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b468ffe85d0"/>
        <function-ref name="clr" scoped="" ref="0x2b468ffe8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b468ffeb9e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b468ffeb9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b468ffebd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b468ffea020"/>
        <function-ref name="toggle" scoped="" ref="0x2b468ffea1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b468ffea340"/>
        <function-ref name="get" scoped="" ref="0x2b468ffea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b468ffea660"/>
        <function-ref name="set" scoped="" ref="0x2b468ffea7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b468ffea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b468ffeda20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b468ffeda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468ffedda0"/>
        <function-ref name="stop" scoped="" ref="0x2b468ffe3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b46900c0cb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b46900c0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b46900bf0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b46900bf230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b46900bf3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b46900bf550"/>
        <function-ref name="setCca" scoped="" ref="0x2b46900bf6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b46900bf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b46900bc9f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b46900bc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b46900bcd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b46900c0020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b46900c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46900c03a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46900c0530"/>
        <function-ref name="modify" scoped="" ref="0x2b46900c06c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46900c0850"/>
        <function-ref name="resend" scoped="" ref="0x2b46900c09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b468ffd76d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b468ffd76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b468ffd7a50"/>
        <function-ref name="stop" scoped="" ref="0x2b468ffd7be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b46900be190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b46900be190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b46900be510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b46900b7650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b46900b7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b46900b79d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b46900b7b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b46900b7cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b46900b7e80"/>
        <function-ref name="setCca" scoped="" ref="0x2b46900b6030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b46900b61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b46900ae7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b46900ae7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b46900add50"/>
        <function-ref name="clear" scoped="" ref="0x2b46900ac4c0"/>
        <function-ref name="isValid" scoped="" ref="0x2b46900ad620"/>
        <function-ref name="set" scoped="" ref="0x2b46900acbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b4690096020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690096020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46900963a0"/>
        <function-ref name="write" scoped="" ref="0x2b4690096530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b4690096890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b4690096890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690096c10"/>
        <function-ref name="write" scoped="" ref="0x2b4690096da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b46900b65e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b46900b65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b46900b6960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b4690099530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b4690099530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46900998b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b46900a9880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b46900a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b46900a9c00"/>
        <function-ref name="disable" scoped="" ref="0x2b46900a9d90"/>
        <function-ref name="captured" scoped="" ref="0x2b46900a7020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b46900a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b46900b57f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2b46900b57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46900b1090"/>
        <function-ref name="fired" scoped="" ref="0x2b46900b2090"/>
        <function-ref name="startAt" scoped="" ref="0x2b46900b2a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46900b2550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46900b1550"/>
        <function-ref name="start" scoped="" ref="0x2b46900b36a0"/>
        <function-ref name="stop" scoped="" ref="0x2b46900b3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b46900b1a00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b46900b1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b46900b1d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b46900b0020"/>
        <function-ref name="getRssi" scoped="" ref="0x2b46900b01b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b46900b0340"/>
        <function-ref name="getPower" scoped="" ref="0x2b46900b04d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b46900b0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b469009c550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b469009c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469009c8d0"/>
        <function-ref name="write" scoped="" ref="0x2b469009ca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b469009ce00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b469009ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469009a1c0"/>
        <function-ref name="write" scoped="" ref="0x2b469009a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b4690090d40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b4690090d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46900930e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b4690093270"/>
        <function-ref name="sfd" scoped="" ref="0x2b4690093400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b46900b88c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b46900b88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46900b8c40"/>
        <function-ref name="cancel" scoped="" ref="0x2b46900b8dd0"/>
        <function-ref name="modify" scoped="" ref="0x2b46900b7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46900b71b0"/>
        <function-ref name="resend" scoped="" ref="0x2b46900b7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b469009ed10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b469009ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b469009d0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b469009d270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b469009d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b4690099c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b4690099c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690098020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b46900a1820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b46900a1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b46900a1ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b46900a1d30"/>
        <function-ref name="toggle" scoped="" ref="0x2b46900a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b46900a01b0"/>
        <function-ref name="get" scoped="" ref="0x2b46900a0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b46900a04d0"/>
        <function-ref name="set" scoped="" ref="0x2b46900a0660"/>
        <function-ref name="clr" scoped="" ref="0x2b46900a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46900b9820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46900b9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46900b9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b46900b09a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46900b09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b46900b0d20"/>
        <function-ref name="getHeader" scoped="" ref="0x2b46900ae020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b46900ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b46900a2b30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b46900a2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46900a9020"/>
        <function-ref name="isSet" scoped="" ref="0x2b46900a91b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46900a9340"/>
        <function-ref name="set" scoped="" ref="0x2b46900a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b46900983e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b46900983e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690098960"/>
        <function-ref name="write" scoped="" ref="0x2b4690098af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b469009e020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b469009e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b469009e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b469009e530"/>
        <function-ref name="request" scoped="" ref="0x2b469009e6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b469009e850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b469009e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b46900a7500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b46900a7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b46900a7980"/>
        <function-ref name="isInput" scoped="" ref="0x2b46900a7b10"/>
        <function-ref name="toggle" scoped="" ref="0x2b46900a7ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b46900a7e30"/>
        <function-ref name="get" scoped="" ref="0x2b46900a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b46900a11b0"/>
        <function-ref name="set" scoped="" ref="0x2b46900a1340"/>
        <function-ref name="clr" scoped="" ref="0x2b46900a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b4690095130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b4690095130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46900954b0"/>
        <function-ref name="write" scoped="" ref="0x2b4690095640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b46900959c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b46900959c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690095d40"/>
        <function-ref name="write" scoped="" ref="0x2b4690094020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b469009a6d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b469009a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469009aa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b46900a0b40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b46900a0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b469009f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b469009f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b469009f340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b469009f4d0"/>
        <function-ref name="get" scoped="" ref="0x2b469009f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b469009f7f0"/>
        <function-ref name="set" scoped="" ref="0x2b469009f980"/>
        <function-ref name="clr" scoped="" ref="0x2b469009fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b46900936c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b46900936c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4690093a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4690093bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b4690093d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4690092020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b46900921b0"/>
        <function-ref name="get" scoped="" ref="0x2b4690092340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b46900924d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4690092b10"/>
        <function-ref name="set" scoped="" ref="0x2b4690092660"/>
        <function-ref name="led0On" scoped="" ref="0x2b46900927f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b4690092980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b46900975e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b46900975e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690097960"/>
        <function-ref name="write" scoped="" ref="0x2b4690097af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b46900b8020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b46900b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b46900b83a0"/>
        <function-ref name="stop" scoped="" ref="0x2b46900b8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b469009d780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b469009d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b469009db00"/>
        <function-ref name="writeDone" scoped="" ref="0x2b469009dc90"/>
        <function-ref name="write" scoped="" ref="0x2b469009de20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b469009c020"/>
        <function-ref name="readDone" scoped="" ref="0x2b469009c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b469009ade0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b469009ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690099180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b4690098e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b4690098e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690097220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b46900b6d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b46900b6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b46900b5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b4690138c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b4690138c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690137210"/>
        <function-ref name="write" scoped="" ref="0x2b46901373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b4690142020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b4690142020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46901423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b469013cc70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b469013cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469013b020"/>
        <function-ref name="write" scoped="" ref="0x2b469013b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b4690136670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690136670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901369f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690136b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b469019ce50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b469019ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019b210"/>
        <function-ref name="write" scoped="" ref="0x2b469019b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b4690136e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b4690136e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690135210"/>
        <function-ref name="write" scoped="" ref="0x2b46901353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b469018f2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b469018f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469018f670"/>
        <function-ref name="write" scoped="" ref="0x2b469018f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b46901922f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b46901922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690192670"/>
        <function-ref name="write" scoped="" ref="0x2b4690192800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b4690141370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b4690141370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46901416f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b4690197670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b4690197670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901979f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690197b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b46901932f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b46901932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690193670"/>
        <function-ref name="write" scoped="" ref="0x2b4690193800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b469013bc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b469013bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469013a020"/>
        <function-ref name="write" scoped="" ref="0x2b469013a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b469013ac60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b469013ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690138020"/>
        <function-ref name="write" scoped="" ref="0x2b46901381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b469019d670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b469019d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469019db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b4690133e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b4690133e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690131210"/>
        <function-ref name="write" scoped="" ref="0x2b46901313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b4690135670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b4690135670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901359f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690135b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b46901448f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b46901448f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b4690144c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b4690144e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b4690143020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b4690140d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b4690140d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469013e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b469013e370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b469013e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469013e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b4690196a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b4690196a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690196df0"/>
        <function-ref name="write" scoped="" ref="0x2b4690195020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b469013eac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b469013eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469013ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b4690193ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b4690193ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690193e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690192020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b4690140060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b4690140060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46901403e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b4690198e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b4690198e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690197210"/>
        <function-ref name="write" scoped="" ref="0x2b46901973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b469013a480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b469013a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469013a800"/>
        <function-ref name="write" scoped="" ref="0x2b469013a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b469013b480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b469013b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469013b800"/>
        <function-ref name="write" scoped="" ref="0x2b469013b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b4690143940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b4690143940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690143cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b469019ae50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b469019ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690198210"/>
        <function-ref name="write" scoped="" ref="0x2b46901983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b469019b670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b469019b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469019bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b4690198670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b4690198670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901989f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690198b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b4690190ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b4690190ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690190e50"/>
        <function-ref name="write" scoped="" ref="0x2b469018f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b4690192ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b4690192ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690192e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690190020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b4690131670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b4690131670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901319f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690131b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b469019be50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b469019be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019a210"/>
        <function-ref name="write" scoped="" ref="0x2b469019a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b4690194ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b4690194ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690194e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690193020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b4690134670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b4690134670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901349f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690134b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b469018fad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b469018fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b469018fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b469018e020"/>
        <function-ref name="write" scoped="" ref="0x2b469018e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b469018e340"/>
        <function-ref name="readDone" scoped="" ref="0x2b469018e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b46901432f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b46901432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690143670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b469013c490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b469013c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469013c810"/>
        <function-ref name="write" scoped="" ref="0x2b469013c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b4690138480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b4690138480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690138800"/>
        <function-ref name="write" scoped="" ref="0x2b4690138990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b469019de50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b469019de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019c210"/>
        <function-ref name="write" scoped="" ref="0x2b469019c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b4690135e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b4690135e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690134210"/>
        <function-ref name="write" scoped="" ref="0x2b46901343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b469019c670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b469019c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469019cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b4690137670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b4690137670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901379f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690137b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b4690142670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b4690142670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46901429f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b4690137e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b4690137e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690136210"/>
        <function-ref name="write" scoped="" ref="0x2b46901363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690145c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690145c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690144020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b46901441b0"/>
        <function-ref name="request" scoped="" ref="0x2b4690144340"/>
        <function-ref name="granted" scoped="" ref="0x2b46901444d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4690144660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b469013d160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b469013d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469013d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b469013de00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b469013de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469013c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b46901942f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b46901942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690194670"/>
        <function-ref name="write" scoped="" ref="0x2b4690194800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b4690195ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b4690195ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690195e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690194020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b46901406b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b46901406b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690140a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b46901952f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b46901952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690195670"/>
        <function-ref name="write" scoped="" ref="0x2b4690195800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b46901902f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b46901902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690190670"/>
        <function-ref name="write" scoped="" ref="0x2b4690190800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b4690131e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b4690131e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019d210"/>
        <function-ref name="write" scoped="" ref="0x2b469019d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b469019a670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b469019a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469019a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469019ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b4690142cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b4690142cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46901410a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b46901419c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b46901419c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690141d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b4690134e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b4690134e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690133210"/>
        <function-ref name="write" scoped="" ref="0x2b46901333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b469013d7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b469013d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469013db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b4690133670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b4690133670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901339f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690133b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b4690197e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b4690197e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690196610"/>
        <function-ref name="write" scoped="" ref="0x2b46901967a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b469018e7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b469018e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b469018eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b469018ecb0"/>
        <function-ref name="write" scoped="" ref="0x2b469018ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b469018d020"/>
        <function-ref name="readDone" scoped="" ref="0x2b469018d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b4690182df0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b4690182df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b469017f1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b469017f350"/>
        <function-ref name="sfd" scoped="" ref="0x2b469017f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b469017f7c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b469017f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b469017fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b469017e020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b469017e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b469017e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b46901825c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b46901825c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4690182940"/>
        <function-ref name="stop" scoped="" ref="0x2b4690182ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b4690176380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b4690176380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4690176700"/>
        <function-ref name="isInput" scoped="" ref="0x2b4690176890"/>
        <function-ref name="toggle" scoped="" ref="0x2b4690176a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4690176bb0"/>
        <function-ref name="get" scoped="" ref="0x2b4690176d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4690175020"/>
        <function-ref name="set" scoped="" ref="0x2b46901751b0"/>
        <function-ref name="clr" scoped="" ref="0x2b4690175340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b469016fb90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b469016fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b469016e020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b469016e1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b469016e340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b469016e4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b469016e660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b469016e7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b469016e980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b469016eb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b469016eca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b469016ee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b469016d020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b469016d1b0"/>
        <function-ref name="sync" scoped="" ref="0x2b469016d340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b469016d5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b469016d760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b46901c69d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2b46901c69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b46901c6d50"/>
        <function-ref name="runTask" scoped="" ref="0x2b46901c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b469016dd70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b469016dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b469016b330"/>
        <function-ref name="clear" scoped="" ref="0x2b469016ba60"/>
        <function-ref name="isValid" scoped="" ref="0x2b469016cba0"/>
        <function-ref name="set" scoped="" ref="0x2b4690169210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b46901756b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b46901756b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4690175a30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4690175bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4690175d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4690174020"/>
        <function-ref name="get" scoped="" ref="0x2b46901741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4690174340"/>
        <function-ref name="set" scoped="" ref="0x2b46901744d0"/>
        <function-ref name="clr" scoped="" ref="0x2b4690174660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b4690168cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690168cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901670a0"/>
        <function-ref name="write" scoped="" ref="0x2b4690167230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b4690167590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b4690167590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690167910"/>
        <function-ref name="write" scoped="" ref="0x2b4690167aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b46901d46d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b46901d46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901d4a50"/>
        <function-ref name="write" scoped="" ref="0x2b46901d4be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b4690170330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b4690170330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b46901706b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b4690170840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b46901709d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b4690170b60"/>
        <function-ref name="getPower" scoped="" ref="0x2b4690170cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b4690170e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b469017a550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b469017a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b469017a8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b469017aa60"/>
        <function-ref name="sfd" scoped="" ref="0x2b469017abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b46901713a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b46901713a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690171720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b4690177020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b4690177020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b46901773a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4690177530"/>
        <function-ref name="toggle" scoped="" ref="0x2b46901776c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4690177850"/>
        <function-ref name="get" scoped="" ref="0x2b46901779e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4690177b70"/>
        <function-ref name="set" scoped="" ref="0x2b4690177d00"/>
        <function-ref name="clr" scoped="" ref="0x2b4690176020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b46901d3020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b46901d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901d33a0"/>
        <function-ref name="write" scoped="" ref="0x2b46901d3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b469017b620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b469017b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b469017b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b469016f1e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b469016f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b469016f560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b469016f6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b469016f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4690178020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b4690178020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46901783a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b46901736e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b46901736e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690173a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690173bf0"/>
        <function-ref name="request" scoped="" ref="0x2b4690173d80"/>
        <function-ref name="granted" scoped="" ref="0x2b4690172020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b46901721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b4690167e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b4690167e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46901d41c0"/>
        <function-ref name="write" scoped="" ref="0x2b46901d4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b4690172530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b4690172530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b46901728b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b4690172a40"/>
        <function-ref name="write" scoped="" ref="0x2b4690172bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b4690172d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b4690171020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b46901d38b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b46901d38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46901d3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b46901787c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b46901787c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b4690178b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b46901d2150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b46901d2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b46901d24d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b46901d2660"/>
        <function-ref name="led1On" scoped="" ref="0x2b46901d27f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b46901d2980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b46901d2b10"/>
        <function-ref name="get" scoped="" ref="0x2b46901d2ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b46901d2e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b46901d14d0"/>
        <function-ref name="set" scoped="" ref="0x2b46901d1020"/>
        <function-ref name="led0On" scoped="" ref="0x2b46901d11b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b46901d1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b46901683e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b46901683e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690168760"/>
        <function-ref name="write" scoped="" ref="0x2b46901688f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b4690169b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b4690169b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690168020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b4690174a50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b4690174a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4690174dd0"/>
        <function-ref name="disable" scoped="" ref="0x2b4690173020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b46901731b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b4690173340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b4690171ad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b4690171ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690170020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b469017bca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b469017bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b469017a0a0"/>
        <function-ref name="stop" scoped="" ref="0x2b469017a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b4690244a70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4690244a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b4690244df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b46901d8670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b46901d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b46901d89f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b46901d8b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b46901d8d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b46901d5020"/>
        <function-ref name="getPower" scoped="" ref="0x2b46901d51b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b46901d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b4690243550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690243550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4690242b00"/>
        <function-ref name="clear" scoped="" ref="0x2b46902412a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b46902423d0"/>
        <function-ref name="set" scoped="" ref="0x2b46902419d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b46902440c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46902440c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b4690244440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b46902445d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b4690244760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b469023b480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b469023b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b469023b800"/>
        <function-ref name="isSet" scoped="" ref="0x2b469023b990"/>
        <function-ref name="cancel" scoped="" ref="0x2b469023bb20"/>
        <function-ref name="set" scoped="" ref="0x2b469023bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b469023f660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b469023f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b469023ece0"/>
        <function-ref name="clear" scoped="" ref="0x2b469023d460"/>
        <function-ref name="isValid" scoped="" ref="0x2b469023e5b0"/>
        <function-ref name="set" scoped="" ref="0x2b469023db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b46901d56e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b46901d56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b46901d5a60"/>
        <function-ref name="noAck" scoped="" ref="0x2b46901d5bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b46901d5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b4690235020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4690235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b46902353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b469023ad20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b469023ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b46902370e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b4690237270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b4690237400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b4690237590"/>
        <function-ref name="getPower" scoped="" ref="0x2b4690237720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b46902378b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b469022c4a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b469022c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b469022c820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b469022c9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469022cb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469022ccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b469022ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b4690235a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690235a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4690232020"/>
        <function-ref name="clear" scoped="" ref="0x2b4690232750"/>
        <function-ref name="isValid" scoped="" ref="0x2b46902348d0"/>
        <function-ref name="set" scoped="" ref="0x2b4690232e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b4690236640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b4690236640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b46902369c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b4690236b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b4690236ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b469022d8b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b469022d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b469022dc30"/>
        <function-ref name="isSet" scoped="" ref="0x2b469022ddc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b469022c020"/>
        <function-ref name="set" scoped="" ref="0x2b469022c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b4690228820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b4690228820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b469022a4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b469022ab80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b469022ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46902277d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4690231af0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4690231af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b469022e0d0"/>
        <function-ref name="clear" scoped="" ref="0x2b469022e800"/>
        <function-ref name="isValid" scoped="" ref="0x2b4690230970"/>
        <function-ref name="set" scoped="" ref="0x2b469022d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b4690237c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b4690237c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4690236020"/>
        <function-ref name="noAck" scoped="" ref="0x2b46902361b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4690236340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b46902474e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b46902474e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46902af150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b46902af7c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b46902af7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46902ae620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b46902ac020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b46902aeae0"/>
        <function-ref name="overflow" scoped="" ref="0x2b46902ac4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b46902a7020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b46902a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46902a3630"/>
        <function-ref name="fired" scoped="" ref="0x2b46902a6a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46902a5920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46902a54a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b46902a2020"/>
        <function-ref name="gett0" scoped="" ref="0x2b46902a3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46902a5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46902a7c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46902a3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46902a6110"/>
        <function-ref name="stop" scoped="" ref="0x2b46902a65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b46902a2610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b46902a2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46902a03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46902a8130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46902a8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46902a84b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b46902e5870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b46902e5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46902e2090"/>
        <function-ref name="fired" scoped="" ref="0x2b46902e3090"/>
        <function-ref name="startAt" scoped="" ref="0x2b46902e3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46902e3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46902e2550"/>
        <function-ref name="start" scoped="" ref="0x2b46902e46a0"/>
        <function-ref name="stop" scoped="" ref="0x2b46902e4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46902e5020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46902e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46902e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b46910a6260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b46910a6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46910a4b30"/>
        <function-ref name="fired" scoped="" ref="0x2b46910a5a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b46910a44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46910a4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46910a3020"/>
        <function-ref name="start" scoped="" ref="0x2b46910a5090"/>
        <function-ref name="stop" scoped="" ref="0x2b46910a55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46910a79d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46910a79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46910a7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b469108ea80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b469108ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b469108ee00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b469108d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b469108d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b469108d340"/>
        <function-ref name="fired" scoped="" ref="0x2b469108d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b4691090020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b4691090020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46910903a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b4691090530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b46910906c0"/>
        <function-ref name="get" scoped="" ref="0x2b4691090850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b46910909e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4691090b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b4691090d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b469108f020"/>
        <function-ref name="overflow" scoped="" ref="0x2b469108f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b469108f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b469108f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b469108f760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b469108f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b469108fae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b469108fc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b469108fe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b469108e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b469108e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b469108e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b469108e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b469108e660"/>
        <function-ref name="setControl" scoped="" ref="0x2b469108e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b4691084760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b4691084760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b4691084ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b4691084c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b4691084e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b4691083020"/>
        <function-ref name="fired" scoped="" ref="0x2b46910831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b4691087dd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b4691087dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4691086180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b4691086310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b46910864a0"/>
        <function-ref name="get" scoped="" ref="0x2b4691086630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b46910867c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4691086950"/>
        <function-ref name="getMode" scoped="" ref="0x2b4691086ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4691086c70"/>
        <function-ref name="overflow" scoped="" ref="0x2b4691086e00"/>
        <function-ref name="setMode" scoped="" ref="0x2b4691085020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b46910851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b469108bbf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b469108bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46910874e0"/>
        <function-ref name="fired" scoped="" ref="0x2b46910884e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b4691088e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46910889a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46910879a0"/>
        <function-ref name="start" scoped="" ref="0x2b4691089a80"/>
        <function-ref name="stop" scoped="" ref="0x2b4691088020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b469108b360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b469108b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b469108b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b4691085440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b4691085440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b46910857c0"/>
        <function-ref name="getControl" scoped="" ref="0x2b4691085950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b4691085ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b4691085c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b4691085e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b4691084020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b46910841b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b4691084340"/>
        <function-ref name="setControl" scoped="" ref="0x2b46910844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4690292b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b4690292b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b469028f9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b469028e360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b469028fe70"/>
        <function-ref name="overflow" scoped="" ref="0x2b469028e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b4690288b90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b4690288b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46902869d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b46902854e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4690285020"/>
        <function-ref name="overflow" scoped="" ref="0x2b46902859a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b469028a610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b469028a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46902895b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4690288020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4690289a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b46902884e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b46910a05f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b46910a05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469109ee50"/>
        <function-ref name="fired" scoped="" ref="0x2b469109fe00"/>
        <function-ref name="startAt" scoped="" ref="0x2b469109e800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469109e340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b469109d340"/>
        <function-ref name="start" scoped="" ref="0x2b469109f430"/>
        <function-ref name="stop" scoped="" ref="0x2b469109f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b469109ad20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b469109ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4691097670"/>
        <function-ref name="fired" scoped="" ref="0x2b4691098550"/>
        <function-ref name="startAt" scoped="" ref="0x2b4691097020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4691098a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4691097b30"/>
        <function-ref name="start" scoped="" ref="0x2b4691099b60"/>
        <function-ref name="stop" scoped="" ref="0x2b4691098090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b469109d9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b469109d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b469109c7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b469109a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b469109cca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b469109a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b46903239c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b46903239c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4690323d40"/>
        <function-ref name="runTask" scoped="" ref="0x2b4690322020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4690327850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b4690327850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690323090"/>
        <function-ref name="fired" scoped="" ref="0x2b4690324090"/>
        <function-ref name="startAt" scoped="" ref="0x2b4690324a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690324550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4690323550"/>
        <function-ref name="start" scoped="" ref="0x2b46903266a0"/>
        <function-ref name="stop" scoped="" ref="0x2b4690326bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b46902b92f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b46902b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690328870"/>
        <function-ref name="fired" scoped="" ref="0x2b46902b8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46902b6c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46902b6780"/>
        <function-ref name="getdt" scoped="" ref="0x2b46903271e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b4690328cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46902b6300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46902b8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4690328260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46902b84f0"/>
        <function-ref name="stop" scoped="" ref="0x2b46902b89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b4690346a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b4690346a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4690346d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b4690344020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b469034b640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b469034b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690347c40"/>
        <function-ref name="fired" scoped="" ref="0x2b46903481e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4690347020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4690348ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b4690346590"/>
        <function-ref name="gett0" scoped="" ref="0x2b4690346110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690348660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b469034a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4690347630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b469034a860"/>
        <function-ref name="stop" scoped="" ref="0x2b469034ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4690351150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b4690351150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469034c700"/>
        <function-ref name="fired" scoped="" ref="0x2b469034fc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b469034ea50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b469034e5b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b469034b090"/>
        <function-ref name="gett0" scoped="" ref="0x2b469034cba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469034e110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4690351d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b469034c0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b469034f2a0"/>
        <function-ref name="stop" scoped="" ref="0x2b469034f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b46903422b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b46903422b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4690341020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4690341690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b4690341690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46903405b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b469033f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4690340a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b469033f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b46903388c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b46903388c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690399cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b469039b320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46903990d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b469039bc20"/>
        <function-ref name="getdt" scoped="" ref="0x2b4690398660"/>
        <function-ref name="gett0" scoped="" ref="0x2b46903981e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469039b7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b469039c4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46903996e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b469039c9b0"/>
        <function-ref name="stop" scoped="" ref="0x2b469039ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b469032f2c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b469032f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469032b870"/>
        <function-ref name="fired" scoped="" ref="0x2b469032ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b469032dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b469032d780"/>
        <function-ref name="getdt" scoped="" ref="0x2b469032a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b469032bcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469032d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b469032e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b469032b260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b469032e4f0"/>
        <function-ref name="stop" scoped="" ref="0x2b469032e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b4690388c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b4690388c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690387210"/>
        <function-ref name="write" scoped="" ref="0x2b46903873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b4690392020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b4690392020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46903923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b469038bc70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b469038bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469038a020"/>
        <function-ref name="write" scoped="" ref="0x2b469038a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b4690386670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b4690386670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46903869f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690386b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b469037ee50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b469037ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037d210"/>
        <function-ref name="write" scoped="" ref="0x2b469037d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b4690386e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b4690386e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690384210"/>
        <function-ref name="write" scoped="" ref="0x2b46903843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b46903722f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b46903722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690372670"/>
        <function-ref name="write" scoped="" ref="0x2b4690372800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b46903742f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b46903742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690374670"/>
        <function-ref name="write" scoped="" ref="0x2b4690374800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b4690390370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b4690390370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46903906f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b469037a670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b469037a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469037ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b46903752f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b46903752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690375670"/>
        <function-ref name="write" scoped="" ref="0x2b4690375800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b469038ac60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b469038ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690389020"/>
        <function-ref name="write" scoped="" ref="0x2b46903891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b4690389c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b4690389c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690388020"/>
        <function-ref name="write" scoped="" ref="0x2b46903881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b4690380670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b4690380670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46903809f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690380b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b4690382e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b4690382e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690381210"/>
        <function-ref name="write" scoped="" ref="0x2b46903813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b4690384670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b4690384670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46903849f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690384b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b4690394970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b4690394970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b4690394cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b4690394e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b4690393030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b469038fd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b469038fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b469038e370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b469038e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b4690379a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b4690379a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690379df0"/>
        <function-ref name="write" scoped="" ref="0x2b4690378020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b469038eac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b469038eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b4690375ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b4690375ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690375e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690374020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b469038f060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b469038f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038f3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b469037be50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b469037be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037a210"/>
        <function-ref name="write" scoped="" ref="0x2b469037a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b4690389480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b4690389480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690389800"/>
        <function-ref name="write" scoped="" ref="0x2b4690389990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b469038a480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b469038a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469038a800"/>
        <function-ref name="write" scoped="" ref="0x2b469038a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b4690393950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b4690393950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690393cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b469037ce50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b469037ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037b210"/>
        <function-ref name="write" scoped="" ref="0x2b469037b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b469037d670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b469037d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469037db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b469037b670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b469037b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469037bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b4690373ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b4690373ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690373e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690372020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b4690374ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b4690374ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690374e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690373020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b4690381670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b4690381670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46903819f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690381b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b469037de50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b469037de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037c210"/>
        <function-ref name="write" scoped="" ref="0x2b469037c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b4690376ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b4690376ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690376e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690375020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b4690383670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b4690383670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46903839f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690383b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b4690372ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b4690372ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b4690372e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b4690370020"/>
        <function-ref name="write" scoped="" ref="0x2b46903701b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b4690370340"/>
        <function-ref name="readDone" scoped="" ref="0x2b46903704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b4690393300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b4690393300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690393680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b469038b490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b469038b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469038b810"/>
        <function-ref name="write" scoped="" ref="0x2b469038b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b4690388480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b4690388480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690388800"/>
        <function-ref name="write" scoped="" ref="0x2b4690388990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b4690380e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b4690380e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037e210"/>
        <function-ref name="write" scoped="" ref="0x2b469037e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b4690384e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b4690384e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690383210"/>
        <function-ref name="write" scoped="" ref="0x2b46903833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b469037e670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b469037e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469037eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b4690387670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b4690387670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46903879f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690387b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b4690392670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b4690392670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46903929f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b4690387e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b4690387e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690386210"/>
        <function-ref name="write" scoped="" ref="0x2b46903863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690395d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690395d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b46903940a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690394230"/>
        <function-ref name="request" scoped="" ref="0x2b46903943c0"/>
        <function-ref name="granted" scoped="" ref="0x2b4690394550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b46903946e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b469038d160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b469038d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b469038de00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b469038de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b46903762f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b46903762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690376670"/>
        <function-ref name="write" scoped="" ref="0x2b4690376800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b4690378ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b4690378ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690378e50"/>
        <function-ref name="write" scoped="" ref="0x2b4690376020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b469038f6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b469038f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b46903782f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b46903782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690378670"/>
        <function-ref name="write" scoped="" ref="0x2b4690378800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b46903732f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b46903732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690373670"/>
        <function-ref name="write" scoped="" ref="0x2b4690373800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b4690381e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b4690381e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690380210"/>
        <function-ref name="write" scoped="" ref="0x2b46903803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b469037c670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b469037c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b469037c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b469037cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b4690392cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b4690392cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b46903900a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b46903909c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b46903909c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b4690390d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b4690383e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b4690383e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690382210"/>
        <function-ref name="write" scoped="" ref="0x2b46903823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b469038d7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b469038d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b469038db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b4690382670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b4690382670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b46903829f0"/>
        <function-ref name="write" scoped="" ref="0x2b4690382b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b469037ae50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b469037ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b4690379610"/>
        <function-ref name="write" scoped="" ref="0x2b46903797a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b46903707a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b46903707a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b4690370b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b4690370cb0"/>
        <function-ref name="write" scoped="" ref="0x2b4690370e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b469036f020"/>
        <function-ref name="readDone" scoped="" ref="0x2b469036f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b46903bda20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b46903bda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b46903bdda0"/>
        <function-ref name="rand32" scoped="" ref="0x2b46903ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b46903bb920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b46903bb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46903bd560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46903c19a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46903c19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46903c1d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b46903b6a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b46903b6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b46903b6da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b46903b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b46903b7940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b46903b7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46903b6560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46903b7080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46903b7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46903b7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b46903bfaa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b46903bfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b46903bfe20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b46903b8020"/>
        <function-ref name="isState" scoped="" ref="0x2b46903b81b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b46903b8340"/>
        <function-ref name="requestState" scoped="" ref="0x2b46903b84d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b46903b8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b469039e020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b469039e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469039e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469039e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469039e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b469039e850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469039e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b469039f220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b469039f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469039f5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469039f730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469039f8c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b469039fa50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469039fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4690415e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b4690415e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690413210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904133a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690413530"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904136c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4690413850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4690418a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b4690418a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690418da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690415020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904151b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4690415340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b46904128f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b46904128f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b4690412c70"/>
        <function-ref name="rand32" scoped="" ref="0x2b4690412e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4690415750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b4690415750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4690415ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b4690411170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b4690411170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b46904114f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b4690411680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b4690411810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b4690413ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b4690413ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b4690413e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b4690412020"/>
        <function-ref name="isState" scoped="" ref="0x2b46904121b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b4690412340"/>
        <function-ref name="requestState" scoped="" ref="0x2b46904124d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b4690412660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b4690416690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b4690416690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b4690416a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b4690416ba0"/>
        <function-ref name="isState" scoped="" ref="0x2b4690416d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b4690400020"/>
        <function-ref name="requestState" scoped="" ref="0x2b46904001b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b4690400340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b46903fa950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b46903fa950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46903facd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b46903fdaa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b46903fdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46903fde20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b46903fa200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b46903fa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46903fa580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b46903f53f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b46903f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46903f5770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46903f6b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46903f6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46903f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b46903f9e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b46903f9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46903f61e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b46903f5a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46903f5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b46903f5df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b46903f4020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b46903f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b46903f6570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b46903f6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46903f68f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b469043e020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b469043e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b469043e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b469043e6b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b469043e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469043ea30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469043ebc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469043ed50"/>
        <function-ref name="cancel" scoped="" ref="0x2b469043d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469043d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4690443960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b4690443960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690443ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690443e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690441030"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904411c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4690441350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b4690441ca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b4690441ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904400a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690440230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904403c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4690440550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b46904415f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b46904415f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4690441970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4690444cb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b4690444cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b46904430a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690443230"/>
        <function-ref name="request" scoped="" ref="0x2b46904433c0"/>
        <function-ref name="granted" scoped="" ref="0x2b4690443550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b46904436e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b4690440a50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b4690440a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4690440dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b469043f170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b469043f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b469043f4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b469043f680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469043f810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469043f9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b469043fb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4690434d70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b4690434d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690433180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690433310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904334a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4690433630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904337c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4690433b10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b4690433b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4690432020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b469047edb0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2b469047edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b469047d180"/>
        <function-ref name="runTask" scoped="" ref="0x2b469047d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b46904322f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b46904322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b4690432670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b4690432800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b4690432990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b4690432b20"/>
        <function-ref name="getPower" scoped="" ref="0x2b4690432cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b4690432e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b4690437a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b4690437a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690437da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690436020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904361b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4690436340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904364d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b4690431b70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b4690431b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4690430020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b46904301b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4690430340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b46904304d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b4690431170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b4690431170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b46904314f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b4690431680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b4690431810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b4690437370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b4690437370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46904376f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b46904397b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b46904397b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4690439b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4690439cc0"/>
        <function-ref name="request" scoped="" ref="0x2b4690439e50"/>
        <function-ref name="granted" scoped="" ref="0x2b4690438020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b46904381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b46904384d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b46904384d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690438850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904389e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690438b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b4690438d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4690437020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b4690436840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b4690436840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4690436bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b4690434020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b4690434020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46904343a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4690434530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904346c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690434850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46904349e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b469045edd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b469045edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b469045d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b469045d410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b469045d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b469045d790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b469045d920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b469045dab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b469045dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b46904ccb80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b46904ccb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b46904cb020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b46904cb1b0"/>
        <function-ref name="start" scoped="" ref="0x2b46904cb340"/>
        <function-ref name="stop" scoped="" ref="0x2b46904cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b46904c9860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b46904c9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904c9be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904c9d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904c8020"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904c81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904c8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b46904c8690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b46904c8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46904c8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4690456cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b4690456cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904cd0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904cd230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904cd3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904cd550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904cd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b46904cc080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b46904cc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b46904cc400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b46904cc590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b46904cc720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b46904cc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b46904cb800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b46904cb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b46904cbb80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b46904cbd10"/>
        <function-ref name="isState" scoped="" ref="0x2b46904c9020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b46904c91b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b46904c9340"/>
        <function-ref name="forceState" scoped="" ref="0x2b46904c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b46904c8d90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b46904c8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b46904c7180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b46904c7310"/>
        <function-ref name="start" scoped="" ref="0x2b46904c74a0"/>
        <function-ref name="stop" scoped="" ref="0x2b46904c7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b46904cd980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b46904cd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46904cdd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b46904c42d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b46904c42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b46904c4650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b46904c47e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b46904c4970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b46904c4b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b46904c6580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b46904c6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b46904c6900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b46904c6a90"/>
        <function-ref name="isState" scoped="" ref="0x2b46904c6c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b46904c6db0"/>
        <function-ref name="requestState" scoped="" ref="0x2b46904c5020"/>
        <function-ref name="forceState" scoped="" ref="0x2b46904c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b46904b7d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b46904b7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904b6180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904b6310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904b64a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904b6630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904b67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b46904b82a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b46904b82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904b8620"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904b87b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904b8940"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904b8ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904b8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b46904b7020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b46904b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b46904b73a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b46904b7530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b46904b76c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b46904b7850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b46904b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b46904b2dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b46904b2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904b1180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904b1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904b14a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904b1630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904b17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2b46904a62a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2b46904a62a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b46904a6620"/>
        <function-ref name="runTask" scoped="" ref="0x2b46904a67b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2b46904af650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2b46904af650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46904abc40"/>
        <function-ref name="fired" scoped="" ref="0x2b46904ac1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46904ab020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46904acae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b46904aa590"/>
        <function-ref name="gett0" scoped="" ref="0x2b46904aa110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46904ac660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46904ae390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46904ab630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46904ae860"/>
        <function-ref name="stop" scoped="" ref="0x2b46904aed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b46904b53b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b46904b53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904b5730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904b58c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904b5a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904b5be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904b5d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2b46904b1af0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b46904b1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b46904b1e70"/>
        <function-ref name="toIdle" scoped="" ref="0x2b46904b0030"/>
        <function-ref name="isState" scoped="" ref="0x2b46904b01c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b46904b0350"/>
        <function-ref name="requestState" scoped="" ref="0x2b46904b04e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b46904b0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b46904aaa30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46904aaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b46904aadb0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b46904a9020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b46904a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b46904b09a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b46904b09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b46904b0d20"/>
        <function-ref name="noAck" scoped="" ref="0x2b46904af020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b46904af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b46904b2080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b46904b2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b46904b2400"/>
        <function-ref name="setRetries" scoped="" ref="0x2b46904b2590"/>
        <function-ref name="getRetries" scoped="" ref="0x2b46904b2720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b46904b28b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b46904b2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b46904f7350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b46904f7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b46904f76d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b46904f7860"/>
        <function-ref name="isState" scoped="" ref="0x2b46904f79f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b46904f7b80"/>
        <function-ref name="requestState" scoped="" ref="0x2b46904f7d10"/>
        <function-ref name="forceState" scoped="" ref="0x2b46904f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b46904f5750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b46904f5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46904f1c40"/>
        <function-ref name="fired" scoped="" ref="0x2b46904f21e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46904f1020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46904f2ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b46904f0590"/>
        <function-ref name="gett0" scoped="" ref="0x2b46904f0110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46904f2660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46904f4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46904f1630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46904f4860"/>
        <function-ref name="stop" scoped="" ref="0x2b46904f4d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b46904d5690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b46904d5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46904d5a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b46904d6860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b46904d6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904d6be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904d6d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904d5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904d51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904d5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b46904d3610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b46904d3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b46904d3990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b46904d3b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b46904d3cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b46904d3e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b46904d2020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b46904d21b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b46904d2340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b46904d24d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b46904d2660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b46904d27f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b46904d2980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b46904d2b10"/>
        <function-ref name="sync" scoped="" ref="0x2b46904d2ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b46904d1020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b46904d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b46904d7830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b46904d7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b46904d7bb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b46904d7d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b46904d6020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b46904d61b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b46904d6340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b46904d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b46904d9b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b46904d9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b46904d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b46904d01f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b46904d01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b46904d0570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b46904d0700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b46904d0890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b46904d0a20"/>
        <function-ref name="setCca" scoped="" ref="0x2b46904d0bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b46904d0d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b46904da8f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b46904da8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46904dac70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b46904dae00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904d9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904d91b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46904d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b46904deda0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b46904deda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46904dd180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46904dd310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46904dd4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46904dd630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46904dd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b46904dcc00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b46904dcc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46904db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b46904d5ce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b46904d5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b46904d40a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b46904d4230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b46904d43c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b46904d4550"/>
        <function-ref name="getPower" scoped="" ref="0x2b46904d46e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b46904d4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b46904d14d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b46904d14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b46904d1950"/>
        <function-ref name="changed" scoped="" ref="0x2b46904d1ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b46904d1c70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b46904d1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b46904d4b70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b46904d4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b46904d3020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b46904d31b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b46904d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b46904dc020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b46904dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46904dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b46904cfd30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b46904cfd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b469054a0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b469054a270"/>
        <function-ref name="led1On" scoped="" ref="0x2b469054a400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b469054a590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b469054a720"/>
        <function-ref name="get" scoped="" ref="0x2b469054a8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b469054aa40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b46905491b0"/>
        <function-ref name="set" scoped="" ref="0x2b469054abd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b469054ad60"/>
        <function-ref name="led2On" scoped="" ref="0x2b4690549020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b46904db2d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46904db2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46904db650"/>
        <function-ref name="source" scoped="" ref="0x2b46904db7e0"/>
        <function-ref name="address" scoped="" ref="0x2b46904db970"/>
        <function-ref name="destination" scoped="" ref="0x2b46904dbb00"/>
        <function-ref name="setSource" scoped="" ref="0x2b46904dbc90"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46904dbe20"/>
        <function-ref name="type" scoped="" ref="0x2b46904da020"/>
        <function-ref name="setType" scoped="" ref="0x2b46904da1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46904da340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46904da4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46904da660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b46904cf0f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2b46904cf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b46904cf470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b46904cf600"/>
        <function-ref name="request" scoped="" ref="0x2b46904cf790"/>
        <function-ref name="granted" scoped="" ref="0x2b46904cf920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b46904cfab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b46905b9580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b46905b9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b46905b9900"/>
        <function-ref name="stopDone" scoped="" ref="0x2b46905b9a90"/>
        <function-ref name="start" scoped="" ref="0x2b46905b9c20"/>
        <function-ref name="stop" scoped="" ref="0x2b46905b9db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b46905a4060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b46905a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b46905a4e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2b46905a3380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b46905b57e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b46905b57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46905b5b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b46905b5cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46905b5e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46905b4030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46905b41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b46905b51d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b46905b51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46905b5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b46905b2640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b46905b2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b46905b29c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b46905b2b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b46905b2ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b46905b2e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b46905aae50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b46905aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46905a8c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46905a6590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46905a6110"/>
        <function-ref name="cancel" scoped="" ref="0x2b46905a7580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46905a7a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b46905b65c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b46905b65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46905b6940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b46905b3b20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b46905b3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b46905b2020"/>
        <function-ref name="noAck" scoped="" ref="0x2b46905b21b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b46905b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b46905b0aa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b46905b0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46905af890"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46905ad1e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46905aed10"/>
        <function-ref name="cancel" scoped="" ref="0x2b46905ae1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46905ae6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b46905b4470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46905b4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46905b47f0"/>
        <function-ref name="source" scoped="" ref="0x2b46905b4980"/>
        <function-ref name="address" scoped="" ref="0x2b46905b4b10"/>
        <function-ref name="destination" scoped="" ref="0x2b46905b4ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b46905b4e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46905b3020"/>
        <function-ref name="type" scoped="" ref="0x2b46905b31b0"/>
        <function-ref name="setType" scoped="" ref="0x2b46905b3340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46905b34d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46905b3660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46905b37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b46905adc50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b46905adc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b46905aba40"/>
        <function-ref name="eventTime" scoped="" ref="0x2b46905aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b469058ae60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b469058ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4690589210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b469058da00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b469058da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469058dd80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469058c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469058c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b469058c340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469058c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b4690591910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b4690591910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b4690590740"/>
        <function-ref name="eventTime" scoped="" ref="0x2b4690590c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b469059a4d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b469059a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690599390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690597c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690597800"/>
        <function-ref name="cancel" scoped="" ref="0x2b4690599c60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46905971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4690596340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b4690596340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46905966c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4690596850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46905969e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690596b70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4690596d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b469058d2c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b469058d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b469058d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b469058c800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2b469058c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b469058cb80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b469058cd10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469058b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469058b1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b469058b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2b4690608130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b4690608130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4690607750"/>
        <function-ref name="clear" scoped="" ref="0x2b4690607e80"/>
        <function-ref name="isValid" scoped="" ref="0x2b4690607020"/>
        <function-ref name="set" scoped="" ref="0x2b46906055d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b469058b6a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2b469058b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b469058ba20"/>
        <function-ref name="source" scoped="" ref="0x2b469058bbb0"/>
        <function-ref name="address" scoped="" ref="0x2b469058bd40"/>
        <function-ref name="destination" scoped="" ref="0x2b469058a020"/>
        <function-ref name="setSource" scoped="" ref="0x2b469058a1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b469058a340"/>
        <function-ref name="type" scoped="" ref="0x2b469058a4d0"/>
        <function-ref name="setType" scoped="" ref="0x2b469058a660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469058a7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469058a980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b469058ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b469058e6b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b469058e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b469058ea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b4690600020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4690600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46906003a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b4690600530"/>
        <function-ref name="cancel" scoped="" ref="0x2b46906006c0"/>
        <function-ref name="set" scoped="" ref="0x2b4690600850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b4690600d30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b4690600d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46905ff980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b46905fc0f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b46905fc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b46905fc470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b46905fc600"/>
        <function-ref name="led1On" scoped="" ref="0x2b46905fc790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b46905fc920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b46905fcab0"/>
        <function-ref name="get" scoped="" ref="0x2b46905fcc40"/>
        <function-ref name="led1Off" scoped="" ref="0x2b46905fcdd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b46905fb4d0"/>
        <function-ref name="set" scoped="" ref="0x2b46905fb020"/>
        <function-ref name="led0On" scoped="" ref="0x2b46905fb1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b46905fb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b46905fe060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b46905fe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46905fec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b469059fc10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b469059fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469059ea40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469059c4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469059c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b469059d350"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469059d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4690595020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b4690595020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46905953a0"/>
        <function-ref name="source" scoped="" ref="0x2b4690595530"/>
        <function-ref name="address" scoped="" ref="0x2b46905956c0"/>
        <function-ref name="destination" scoped="" ref="0x2b4690595850"/>
        <function-ref name="setSource" scoped="" ref="0x2b46905959e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4690595b70"/>
        <function-ref name="type" scoped="" ref="0x2b4690595d00"/>
        <function-ref name="setType" scoped="" ref="0x2b4690594020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46905941b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4690594340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46905944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b4690594b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b4690594b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b4690592990"/>
        <function-ref name="eventTime" scoped="" ref="0x2b4690591020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2b4690589550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2b4690589550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46905899d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2b4690604270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4690604270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4690603800"/>
        <function-ref name="clear" scoped="" ref="0x2b4690601020"/>
        <function-ref name="isValid" scoped="" ref="0x2b46906030d0"/>
        <function-ref name="set" scoped="" ref="0x2b4690601750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b469068f020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b469068f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469068f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469068f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469068f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b469068f850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469068f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b469068fc30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b469068fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b469068e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b469068e1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469068e340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469068e4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b469068e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b469068e8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b469068e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b469068ec30"/>
        <function-ref name="source" scoped="" ref="0x2b469068edc0"/>
        <function-ref name="address" scoped="" ref="0x2b469068d020"/>
        <function-ref name="destination" scoped="" ref="0x2b469068d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b469068d340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b469068d4d0"/>
        <function-ref name="type" scoped="" ref="0x2b469068d660"/>
        <function-ref name="setType" scoped="" ref="0x2b469068d7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469068d980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469068db10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b469068dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b469068c020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b469068c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b469068c3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b469068c530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b469068c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b46911c3cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b46911c3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46911c20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46911c2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46911c23c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46911c2550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46911c26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b46911c2930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b46911c2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46911c2cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b46911c2e40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46911c1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46911c11b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46911c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b46911c1590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46911c1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46911c1910"/>
        <function-ref name="source" scoped="" ref="0x2b46911c1aa0"/>
        <function-ref name="address" scoped="" ref="0x2b46911c1c30"/>
        <function-ref name="destination" scoped="" ref="0x2b46911c1dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b46911c0020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46911c01b0"/>
        <function-ref name="type" scoped="" ref="0x2b46911c0340"/>
        <function-ref name="setType" scoped="" ref="0x2b46911c04d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46911c0660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46911c07f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46911c0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b46911c0c10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b46911c0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b46911bf020"/>
        <function-ref name="noAck" scoped="" ref="0x2b46911bf1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b46911bf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b46911b6660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b46911b6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46911b69e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46911b6b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46911b6d00"/>
        <function-ref name="cancel" scoped="" ref="0x2b46911b5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46911b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b46911b5460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b46911b5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46911b57e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46911b5970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46911b5b00"/>
        <function-ref name="cancel" scoped="" ref="0x2b46911b5c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46911b5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b46911b40e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46911b40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46911b4460"/>
        <function-ref name="source" scoped="" ref="0x2b46911b45f0"/>
        <function-ref name="address" scoped="" ref="0x2b46911b4780"/>
        <function-ref name="destination" scoped="" ref="0x2b46911b4910"/>
        <function-ref name="setSource" scoped="" ref="0x2b46911b4aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46911b4c30"/>
        <function-ref name="type" scoped="" ref="0x2b46911b4dc0"/>
        <function-ref name="setType" scoped="" ref="0x2b46911b3020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46911b31b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46911b3340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46911b34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4690670940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b4690670940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690670cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690670e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469066d020"/>
        <function-ref name="cancel" scoped="" ref="0x2b469066d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469066d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b46906a4400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b46906a4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46906a47a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46906a4930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46906a4ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b46906a4c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46906a4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b46906a54b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b46906a54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46906a5850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46906a59e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46906a5b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b46906a5d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46906a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b46906a1720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b46906a1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46906a1aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b46906a1c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46906a1dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46906a0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46906a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b46906a0480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2b46906a0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b46906a0800"/>
        <function-ref name="runTask" scoped="" ref="0x2b46906a0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b46906a0c60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2b46906a0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b469069f020"/>
        <function-ref name="runTask" scoped="" ref="0x2b469069f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b46906a3060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46906a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46906a33e0"/>
        <function-ref name="source" scoped="" ref="0x2b46906a3570"/>
        <function-ref name="address" scoped="" ref="0x2b46906a3700"/>
        <function-ref name="destination" scoped="" ref="0x2b46906a3890"/>
        <function-ref name="setSource" scoped="" ref="0x2b46906a3a20"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46906a3bb0"/>
        <function-ref name="type" scoped="" ref="0x2b46906a3d40"/>
        <function-ref name="setType" scoped="" ref="0x2b46906a1020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46906a11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46906a1340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46906a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b469070a830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b469070a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b46907084c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4690708b30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b4690708b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4690707970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4690706340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4690707e30"/>
        <function-ref name="overflow" scoped="" ref="0x2b4690706800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4690705e60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b4690705e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b468ed857d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4690702ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b46906f1680" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.JoinReqDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b46906f1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469073dc40"/>
        <function-ref name="fired" scoped="" ref="0x2b469073f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b469073d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b469073fae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b469073c590"/>
        <function-ref name="gett0" scoped="" ref="0x2b469073c110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469073f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4690740390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b469073d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4690740860"/>
        <function-ref name="stop" scoped="" ref="0x2b4690740d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b46906e7020" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b46906e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46906e4630"/>
        <function-ref name="fired" scoped="" ref="0x2b46906e6a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46906e5920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46906e54a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b46906e2020"/>
        <function-ref name="gett0" scoped="" ref="0x2b46906e4ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46906e5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46906e7c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46906e4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46906e6110"/>
        <function-ref name="stop" scoped="" ref="0x2b46906e65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b46906e1a00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b46906e1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46906dd2a0"/>
        <function-ref name="fired" scoped="" ref="0x2b46906de2a0"/>
        <function-ref name="startAt" scoped="" ref="0x2b46906dec20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46906de760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46906dd760"/>
        <function-ref name="start" scoped="" ref="0x2b46906e0890"/>
        <function-ref name="stop" scoped="" ref="0x2b46906e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46906e11b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46906e11b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46906e1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b46912154f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b46912154f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4691213db0"/>
        <function-ref name="fired" scoped="" ref="0x2b4691214da0"/>
        <function-ref name="startAt" scoped="" ref="0x2b4691213760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46912132a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46912122a0"/>
        <function-ref name="start" scoped="" ref="0x2b46912143d0"/>
        <function-ref name="stop" scoped="" ref="0x2b46912148e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4691216b10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b4691216b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4691215020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b46911fdda0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b46911fdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b46911fc180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b46911fc310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b46911fc4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b46911fc630"/>
        <function-ref name="fired" scoped="" ref="0x2b46911fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b46911ff450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b46911ff450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46911ff7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b46911ff960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b46911ffaf0"/>
        <function-ref name="get" scoped="" ref="0x2b46911ffc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b46911ffe10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b46911fe020"/>
        <function-ref name="getMode" scoped="" ref="0x2b46911fe1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b46911fe340"/>
        <function-ref name="overflow" scoped="" ref="0x2b46911fe4d0"/>
        <function-ref name="setMode" scoped="" ref="0x2b46911fe660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b46911fe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b46911fea80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b46911fea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b46911fee00"/>
        <function-ref name="getControl" scoped="" ref="0x2b46911fd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b46911fd1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b46911fd340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b46911fd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b46911fd660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b46911fd7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b46911fd980"/>
        <function-ref name="setControl" scoped="" ref="0x2b46911fdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b46911f3a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b46911f3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b46911f3e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b46911f2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b46911f21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b46911f2340"/>
        <function-ref name="fired" scoped="" ref="0x2b46911f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b46911f5190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b46911f5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46911f5510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b46911f56a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b46911f5830"/>
        <function-ref name="get" scoped="" ref="0x2b46911f59c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b46911f5b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b46911f5ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b46911f5e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b46911f4030"/>
        <function-ref name="overflow" scoped="" ref="0x2b46911f41c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b46911f4350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b46911f44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b46911f9020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b46911f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46911f6870"/>
        <function-ref name="fired" scoped="" ref="0x2b46911f8840"/>
        <function-ref name="startAt" scoped="" ref="0x2b46911f6220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46911f8d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46911f6d30"/>
        <function-ref name="start" scoped="" ref="0x2b46911f9e30"/>
        <function-ref name="stop" scoped="" ref="0x2b46911f8380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b46911fa660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b46911fa660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b46911fa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b46911f4770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b46911f4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b46911f4af0"/>
        <function-ref name="getControl" scoped="" ref="0x2b46911f4c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b46911f4e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b46911f3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b46911f31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b46911f3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b46911f34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b46911f3660"/>
        <function-ref name="setControl" scoped="" ref="0x2b46911f37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4691210890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b4691210890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469120c0d0"/>
        <function-ref name="fired" scoped="" ref="0x2b469120d0d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b469120da50"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469120d590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b469120c590"/>
        <function-ref name="start" scoped="" ref="0x2b469120f6e0"/>
        <function-ref name="stop" scoped="" ref="0x2b469120fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b46912080a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b46912080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4691206b30"/>
        <function-ref name="fired" scoped="" ref="0x2b46912079f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b46912064e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4691206020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4691205020"/>
        <function-ref name="start" scoped="" ref="0x2b4691207020"/>
        <function-ref name="stop" scoped="" ref="0x2b4691207530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b469120cc00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b469120cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b469120ba80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b469120a4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b469120a020"/>
        <function-ref name="overflow" scoped="" ref="0x2b469120a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b46906d2cc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b46906d2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b46906d10a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b46906d1230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b46906d6b10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b46906d6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46906d2390"/>
        <function-ref name="fired" scoped="" ref="0x2b46906d3360"/>
        <function-ref name="startAt" scoped="" ref="0x2b46906d3ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46906d3820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b46906d2850"/>
        <function-ref name="start" scoped="" ref="0x2b46906d5970"/>
        <function-ref name="stop" scoped="" ref="0x2b46906d5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b46906db470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b46906db470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46906d7a20"/>
        <function-ref name="fired" scoped="" ref="0x2b46906d8020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46906d8da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46906d8920"/>
        <function-ref name="getdt" scoped="" ref="0x2b46906d64a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b46906d6020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46906d84a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46906da090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46906d7410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46906da560"/>
        <function-ref name="stop" scoped="" ref="0x2b46906daa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b4690745650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b4690745650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b46907459d0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4690745b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b469074a3b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b469074a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4690747870"/>
        <function-ref name="fired" scoped="" ref="0x2b4690749e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4690748c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4690748780"/>
        <function-ref name="getdt" scoped="" ref="0x2b46907451e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b4690747cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4690748300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4690749020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4690747260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46907494f0"/>
        <function-ref name="stop" scoped="" ref="0x2b46907499c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b46906cfd70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b46906cfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469074c470"/>
        <function-ref name="fired" scoped="" ref="0x2b46906cc9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46906cb7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46906cb320"/>
        <function-ref name="getdt" scoped="" ref="0x2b469074cdb0"/>
        <function-ref name="gett0" scoped="" ref="0x2b469074c910"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46906cce50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46906cd9a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46906cbdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46906cc020"/>
        <function-ref name="stop" scoped="" ref="0x2b46906cc510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b469073ab30" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b469073ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4690739020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46907391b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690739340"/>
        <function-ref name="cancel" scoped="" ref="0x2b46907394d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4690739660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b46907398b0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b46907398b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4690739c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4690739dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690738020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46907381b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4690738340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4690738590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b4690738590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4690738910"/>
        <function-ref name="source" scoped="" ref="0x2b4690738aa0"/>
        <function-ref name="address" scoped="" ref="0x2b4690738c30"/>
        <function-ref name="destination" scoped="" ref="0x2b4690738dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b4690737020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46907371b0"/>
        <function-ref name="type" scoped="" ref="0x2b4690737340"/>
        <function-ref name="setType" scoped="" ref="0x2b46907374d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4690737660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46907377f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4690737980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b4690737c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b4690737c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4690735020"/>
        <function-ref name="noAck" scoped="" ref="0x2b46907351b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4690735340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b46912403b0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b46912403b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4691240730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46912408c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4691240a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b4691240be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4691240d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b469123f020" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b469123f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b469123f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b469123f530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469123f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469123f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b469123f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b469123fc30" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b469123fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b469123d020"/>
        <function-ref name="source" scoped="" ref="0x2b469123d1b0"/>
        <function-ref name="address" scoped="" ref="0x2b469123d340"/>
        <function-ref name="destination" scoped="" ref="0x2b469123d4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b469123d660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b469123d7f0"/>
        <function-ref name="type" scoped="" ref="0x2b469123d980"/>
        <function-ref name="setType" scoped="" ref="0x2b469123db10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469123dca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469123de30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b469123c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b469123c2b0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b469123c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b469123c630"/>
        <function-ref name="noAck" scoped="" ref="0x2b469123c7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b469123c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4691232640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b4691232640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46912329c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4691232b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4691232ce0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4691232e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4691231030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b46912312e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b46912312e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4691231660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46912317f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4691231980"/>
        <function-ref name="cancel" scoped="" ref="0x2b4691231b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4691231ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4691230020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b4691230020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46912303a0"/>
        <function-ref name="source" scoped="" ref="0x2b4691230530"/>
        <function-ref name="address" scoped="" ref="0x2b46912306c0"/>
        <function-ref name="destination" scoped="" ref="0x2b4691230850"/>
        <function-ref name="setSource" scoped="" ref="0x2b46912309e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4691230b70"/>
        <function-ref name="type" scoped="" ref="0x2b4691230d00"/>
        <function-ref name="setType" scoped="" ref="0x2b469122f020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469122f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469122f340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b469122f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b469072ddd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b469072ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b469072c180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b469072c310"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469072c4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469072c630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b469072c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b469072d800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b469072d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b469072db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b469072ca10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b469072ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b469072cd90"/>
        <function-ref name="source" scoped="" ref="0x2b469072b020"/>
        <function-ref name="address" scoped="" ref="0x2b469072b1b0"/>
        <function-ref name="destination" scoped="" ref="0x2b469072b340"/>
        <function-ref name="setSource" scoped="" ref="0x2b469072b4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b469072b660"/>
        <function-ref name="type" scoped="" ref="0x2b469072b7f0"/>
        <function-ref name="setType" scoped="" ref="0x2b469072b980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469072bb10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469072bca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b469072be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4690728530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b4690728530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46907288b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690728a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690728bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4690728d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4690727020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4690727270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b4690727270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46907275f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4690727780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690727910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690727aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4690727c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4690727e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b4690727e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4690725220"/>
        <function-ref name="source" scoped="" ref="0x2b46907253b0"/>
        <function-ref name="address" scoped="" ref="0x2b4690725540"/>
        <function-ref name="destination" scoped="" ref="0x2b46907256d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b4690725860"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46907259f0"/>
        <function-ref name="type" scoped="" ref="0x2b4690725b80"/>
        <function-ref name="setType" scoped="" ref="0x2b4690725d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4690724020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46907241b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4690724340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b46907245d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b46907245d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4690724950"/>
        <function-ref name="noAck" scoped="" ref="0x2b4690724ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4690724c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b46912c6920" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b46912c6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46912c6ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46912c6e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46912c5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b46912c51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46912c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b46912c5590" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b46912c5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46912c5910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b46912c5aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46912c5c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46912c5dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46912c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b46912c4270" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46912c4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46912c45f0"/>
        <function-ref name="source" scoped="" ref="0x2b46912c4780"/>
        <function-ref name="address" scoped="" ref="0x2b46912c4910"/>
        <function-ref name="destination" scoped="" ref="0x2b46912c4aa0"/>
        <function-ref name="setSource" scoped="" ref="0x2b46912c4c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46912c4dc0"/>
        <function-ref name="type" scoped="" ref="0x2b46912c3020"/>
        <function-ref name="setType" scoped="" ref="0x2b46912c31b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46912c3340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46912c34d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46912c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b46912c38f0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b46912c38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b46912c3c70"/>
        <function-ref name="noAck" scoped="" ref="0x2b46912c3e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b46912c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b46912b9b20" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b46912b9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46912b7020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46912b71b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46912b7340"/>
        <function-ref name="cancel" scoped="" ref="0x2b46912b74d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46912b7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b46912b7910" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b46912b7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b46912b7c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46912b7e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46912b6020"/>
        <function-ref name="cancel" scoped="" ref="0x2b46912b61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b46912b6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b46912b6590" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46912b6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46912b6910"/>
        <function-ref name="source" scoped="" ref="0x2b46912b6aa0"/>
        <function-ref name="address" scoped="" ref="0x2b46912b6c30"/>
        <function-ref name="destination" scoped="" ref="0x2b46912b6dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b46912b5020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46912b51b0"/>
        <function-ref name="type" scoped="" ref="0x2b46912b5340"/>
        <function-ref name="setType" scoped="" ref="0x2b46912b54d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46912b5660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46912b57f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46912b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4690721710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b4690721710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4690721a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4690721c20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4690721db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4690720020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46907201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4690721140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b4690721140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46907214c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4690720400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b4690720400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4690720780"/>
        <function-ref name="source" scoped="" ref="0x2b4690720910"/>
        <function-ref name="address" scoped="" ref="0x2b4690720aa0"/>
        <function-ref name="destination" scoped="" ref="0x2b4690720c30"/>
        <function-ref name="setSource" scoped="" ref="0x2b4690720dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b469071f020"/>
        <function-ref name="type" scoped="" ref="0x2b469071f1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b469071f340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469071f4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469071f660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b469071f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b469071c020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b469071c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469071c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469071c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469071c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b469071c850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469071c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b469071cc30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b469071cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b469071b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b469071b1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469071b340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469071b4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b469071b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b469071b8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b469071b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b469071bc30"/>
        <function-ref name="source" scoped="" ref="0x2b469071bdc0"/>
        <function-ref name="address" scoped="" ref="0x2b469071a020"/>
        <function-ref name="destination" scoped="" ref="0x2b469071a1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b469071a340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b469071a4d0"/>
        <function-ref name="type" scoped="" ref="0x2b469071a660"/>
        <function-ref name="setType" scoped="" ref="0x2b469071a7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469071a980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469071ab10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b469071aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b4690719020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b4690719020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b46907193a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b4690719530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b46907196c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b469129a140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b469129a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469129a4c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469129a650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469129a7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b469129a970"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469129ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b469129ad50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b469129ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4691299100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4691299290"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4691299420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46912995b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4691299740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4691299990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b4691299990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4691299d10"/>
        <function-ref name="source" scoped="" ref="0x2b4691298020"/>
        <function-ref name="address" scoped="" ref="0x2b46912981b0"/>
        <function-ref name="destination" scoped="" ref="0x2b4691298340"/>
        <function-ref name="setSource" scoped="" ref="0x2b46912984d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4691298660"/>
        <function-ref name="type" scoped="" ref="0x2b46912987f0"/>
        <function-ref name="setType" scoped="" ref="0x2b4691298980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4691298b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4691298ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4691298e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b4691297120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b4691297120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b46912974a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b4691297630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b46912977c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b469128d390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b469128d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469128d710"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469128d8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469128da30"/>
        <function-ref name="cancel" scoped="" ref="0x2b469128dbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469128dd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b469128c060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b469128c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b469128c3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b469128c570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b469128c700"/>
        <function-ref name="cancel" scoped="" ref="0x2b469128c890"/>
        <function-ref name="sendDone" scoped="" ref="0x2b469128ca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b469128cc70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b469128cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b469128a020"/>
        <function-ref name="source" scoped="" ref="0x2b469128a1b0"/>
        <function-ref name="address" scoped="" ref="0x2b469128a340"/>
        <function-ref name="destination" scoped="" ref="0x2b469128a4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b469128a660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b469128a7f0"/>
        <function-ref name="type" scoped="" ref="0x2b469128a980"/>
        <function-ref name="setType" scoped="" ref="0x2b469128ab10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b469128aca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b469128ae30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4691289020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b46907c5900" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b46907c5900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2b46907c47f0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b46907c5e10"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b46907c4020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46907c41b0"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b46907c4340"/>
        <function-ref name="start" scoped="" ref="0x2b46907c44d0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b46907c4660"/>
        <function-ref name="stop" scoped="" ref="0x2b46907c5c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2b46913209f0" loc="9:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2b46913209f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469131b020"/>
        <function-ref name="fired" scoped="" ref="0x2b469131d510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b469131c300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b469131de10"/>
        <function-ref name="getdt" scoped="" ref="0x2b469131b920"/>
        <function-ref name="gett0" scoped="" ref="0x2b469131b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469131d990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b469131e670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b469131c910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b469131eb40"/>
        <function-ref name="stop" scoped="" ref="0x2b469131d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2b4691325570" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2b4691325570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4691321a20"/>
        <function-ref name="fired" scoped="" ref="0x2b4691322020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4691322da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4691322920"/>
        <function-ref name="getdt" scoped="" ref="0x2b46913204a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b4691320020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46913224a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46913231b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4691321410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4691323680"/>
        <function-ref name="stop" scoped="" ref="0x2b4691323b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2b46913290a0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2b46913290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4691326630"/>
        <function-ref name="fired" scoped="" ref="0x2b4691328b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4691327920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46913274a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b4691325020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4691326ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4691327020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4691329c90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4691326020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46913281b0"/>
        <function-ref name="stop" scoped="" ref="0x2b4691328680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b469132cde0" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b469132cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b469132ac70"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b469132a310"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b469132a4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469132a630"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b469132a7c0"/>
        <function-ref name="start" scoped="" ref="0x2b469132a950"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b469132aae0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b469132a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b4691317220" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b4691317220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46913146e0"/>
        <function-ref name="fired" scoped="" ref="0x2b4691316c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4691315a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46913155f0"/>
        <function-ref name="getdt" scoped="" ref="0x2b4691312020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4691314b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4691315170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4691317e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46913140d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4691316340"/>
        <function-ref name="stop" scoped="" ref="0x2b4691316810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b46913118b0" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b46913118b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b469130ecf0"/>
        <function-ref name="fired" scoped="" ref="0x2b469130f310"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b469130e0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b469130fc10"/>
        <function-ref name="getdt" scoped="" ref="0x2b469130c660"/>
        <function-ref name="gett0" scoped="" ref="0x2b469130c1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b469130f790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46913104c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b469130e6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4691310990"/>
        <function-ref name="stop" scoped="" ref="0x2b4691310e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b469130a020" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b469130a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4691307630"/>
        <function-ref name="fired" scoped="" ref="0x2b4691309a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4691308920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46913084a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b4691305020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4691307ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4691308020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b469130ac10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4691307020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4691309110"/>
        <function-ref name="stop" scoped="" ref="0x2b46913095e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b46907c2c20" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b46907c2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b46907c1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b46907c11b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b46907c1340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b46907c14d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b46907c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b46907c2650" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b46907c2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b46907c29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b46907c18b0" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b46907c18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b46907c1c30"/>
        <function-ref name="source" scoped="" ref="0x2b46907c1dc0"/>
        <function-ref name="address" scoped="" ref="0x2b46907bf020"/>
        <function-ref name="destination" scoped="" ref="0x2b46907bf1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b46907bf340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b46907bf4d0"/>
        <function-ref name="type" scoped="" ref="0x2b46907bf660"/>
        <function-ref name="setType" scoped="" ref="0x2b46907bf7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b46907bf980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b46907bfb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b46907bfca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b46907b5680" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b46907b5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b468ed85c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b468eda4a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b46907b2c40"/>
        <function-ref name="fired" scoped="" ref="0x2b46907b31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b46907b2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b46907b3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b46907b0590"/>
        <function-ref name="gett0" scoped="" ref="0x2b46907b0110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b46907b3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b46907b4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b46907b2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b46907b4860"/>
        <function-ref name="stop" scoped="" ref="0x2b46907b4d30"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b468ed93dd0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b468ed93480" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b468ed93800" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468ed93b30" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b468ed8e620" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ed8e020" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468ed8e350" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b468ed8d6d0" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b468ed902a0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ed90020" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b468ed8f7f0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ed8f210" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b468ed8f560" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b468ed6c5d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b468ed6aab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b468ed6a830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b468ed67020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b468ed68d30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b468ed6ecb0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b468ed68350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b468eda2840" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468eda2840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b468ed9b7c0" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b468ed9f020" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b468ed9dda0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b468ed9d7d0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b468ed9db10" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b468ed9d020" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b468ed9a8a0" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b468ed9a020" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b468ed9f800" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b468eda13f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b468eda1170" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b468ed9cdc0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b468ed9c7f0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b468ed9cb30" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b468eda0020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b468eda1c30" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b468eda0820" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b468ed896e0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
              <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ed66d20" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b468ed890d0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468ed89400" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b468ed78b90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b468ed62590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed78910" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b468ed83810" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed83590" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b468ed6dc50" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b468ed84740" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed844c0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b468ed81130" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed7fb20" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b468ed7fe70" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b468ed80c00" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed80620" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b468ed80970" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b468ed7c600" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed7c380" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b468ed7b970" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed7b3c0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b468ed7b6e0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b468ed621b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b468ed7d390" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed7d110" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b468ed790c0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b468ed62590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b468ed77a60" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b468ed77db0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b468ed62590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b468ed75020" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b468ed62590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b468edbf030" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b468edf6b40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b468edd7de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b468edf6420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b468edd7700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b468edd65a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b468edda900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b468edd7020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b468edd6cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b468e983b70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b468e93bc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b468ee2b020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b468ee2ccc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b468ee2e390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b468edee910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b468eded390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b468ee2b890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b468ee4b7b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b468ee2c560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b468ee4b020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b468ee2eb30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b468ee2d350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b468ee2dda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b468edee910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b468eded390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b468ee2db20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b468edee910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b468eded390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b468ee3f0e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b468ee3d630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b468ee3d3b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b468ee3b2a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b468ee3b020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b468ee3ebe0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b468ee3e3e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b468ee3fa90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b468ee3f810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b468ee463e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b468ee46d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b468ee46ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b468ee45790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b468ee45510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b468ee442a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b468ee44020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b468ee44990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b468ee34810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b468ee322a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b468ee32020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b468ee33020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b468ee19ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b468ee33760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b468ee379b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b468ee34120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b468ee37270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b468ee360e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b468ee369f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b468ee36770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b468ee32cb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b468ee32a30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b468ee609f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b468eccd2b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b468eac1420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b468e87d020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b468e87c020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b468e87d790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b468e88f020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b468e88f870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b468efb4280" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468efb4280"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b468efb44c0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468efb44c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2b468efb3ac0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468efb44c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b468efb4d90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b468efb3150" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468efb3480" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2b468efb3810" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468efb44c0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b468efae660" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468efae060" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468efae390" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b468efaf790" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b468efb2c10" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468efb2990" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b468efb0de0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468efb0800" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b468efb0b50" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b468efca4a0" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b468efa9c60" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b468efab780" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468efab780"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b468efab9c0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468efab9c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2b468efa8570" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468efa82f0" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2b468efa62a0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468efab9c0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468efa6020" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b468ef90650" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ef903d0" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b468ef94730" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ef94110" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b468ef944a0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b468ef91630" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ef913b0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b468ef93b30" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ef93510" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b468ef938a0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b468ef8f630" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468ef8f3b0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2b468efbdc90" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2b468efbcd70" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b468efbcaf0" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2b468efbc420" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b468efbf3e0" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2b468efbd540" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2b468efbd2c0" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b468efc2ca0" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2b468efc26a0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2b468efc2a10" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2b468efbb730" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b468efbb4b0" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b468efbfad0" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b468f05c760" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b468f05b020" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b468f052610" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b468f052390" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b468f057980" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b468f057700" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b468f056880" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b468f056290" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b468f0565f0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b468f070630" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b468f070060" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f0703a0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b468f06b390" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b468f06b110" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b468f0692b0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b468f06bb90" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f069020" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b468f06c020" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b468f068bb0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b468f068280" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f0685c0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b468f068910" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b468f06c910" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b468f06d020" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b468f06e5d0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f06e910" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b468f06ec60" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b468f0be7f0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b468f0bc190" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b468f0b9230" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b468f0b5920"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b468f0b5d40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b468f0c0020" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b468f0c1020" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b468f0c2540" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b468f0c1810" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b468f0c0a80" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b468f0df840" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b468f0df020" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2b468f0d72e0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468f0d7060" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b468f0da8a0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b468f10eaf0" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2b468f0eb790" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2b468f0f8390" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f061960"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b468f060230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b468f0f8110" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f061960"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b468f060230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2b468f0ee7b0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2b468f0f6880" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f088950"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b468f087230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b468f0f6600" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f088950"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b468f087230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b468f0e5e70" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2b468f10f480" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2b468f0f7e00" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f05f880"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2b468f089090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2b468f0f40e0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f088950"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2b468f087230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2b468f0f2dc0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2b468f0f2b40" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2b468f0f2420" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b468f0e5740" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2b468f0f7610" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f05f880"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b468f089090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b468f0f7390" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f05f880"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b468f089090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2b468f0f3270" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b468f0e45d0" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2b468f0f3c50" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2b468f0f39d0" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2b468f0ef730" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2b468f0ee020" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b468f0e6840" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2b468f0e9790" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2b468f0ed7e0" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b468f0e5020" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2b468f0ea020" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b468f0e4cf0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b468f0f05f0" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2b468f071790"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2b468f062020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2b468f0e34c0" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2b468f10e350" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2b468f0f4a80" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2b468f0f4800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b468f10d4d0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468f10d250" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2b468f0f8b70" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b468f061960"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2b468f060230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2b468f0ed020" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b468f0ea770" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2b468f0e6020" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b468f0b5920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b468f0b5d40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b468f0e8cf0" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b468f0b5920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b468f0b5d40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2b468f0e82a0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b468f09d8d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b468f09dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b468f0e8020" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b468f09d8d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b468f09dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b468f10dd90" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2b468f0e3cb0" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2b468f0f0e00" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2b468f10fbe0" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2b468f0e9020" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2b468f0eb020" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b468f105410" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468f105410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b468f105650" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f105650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b468f104020" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f105650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b468f103120" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b468f1048a0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b468f103880" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b468f0fa020" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b468f0fa7d0" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b468f127020" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b468f125020" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b468f1247d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b468f123020" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b468f1277b0" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b468f123b90" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b468f123910" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b468f0fb850" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b468f125800" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b468f124020" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b468f175390" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b468f175be0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b468f1927c0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b468f190020" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b468f18db10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b468f18d890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b468f193020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b468f18f020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b468f18c490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b468f190760" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b468f192020" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b468f18e770" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b468f1937c0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b468f1940e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b468f18f7a0" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b468f18d020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b468f18e020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b468f194810" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b468f464020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b468f464750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b468f4660e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b468f4635e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b468f4667e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b468f464e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b468f4672b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b468f467980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b468f4be460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b468f4becc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b468f4aca40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b468f4cce00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b468f4ca020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b468f4cc570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b468f4cb6d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b468f4ca950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b468f4fa020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b468f4c4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b468f4fcd20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b468f4c4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b468f4fd020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b468f4fdb20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b468f4c4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b468f4fd8a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b468f4c4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b468f4fc470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b468f4c4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b468f549770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b468f5b17a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5b1520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b468f5af840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5af5c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b468f5abd30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5ab730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f5aba60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b468f5acda0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b468f5adce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5ad720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f5ada50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b468f5a52e0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5a5060" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b468f5a4510" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5a4290" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b468f5a3680" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5a3400" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b468f5d62f0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5d9ce0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f5d6060" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b468f5d2890" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5d2290" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f5d25c0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b468f5d19b0" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b468f5d45f0" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5d4370" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b468f5d3ac0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f5d34e0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b468f5d3830" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b468f636670" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f636060" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b468f6363e0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b468f638820" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b468f6376d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f6370d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b468f637440" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b468f65a960" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b468f65a1f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b468f62bc30" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b468f6600e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b468f65fd00" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468f65fa80" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b468f660960" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b468f6207e0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468f620560" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b468f65e5b0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b468f65f270" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b468f629780" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b468f6280e0" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b468f62cd90" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b468f62cb10" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b468f628c60" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b468f6289e0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b468f6248f0" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b468f6235b0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468f623330" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b468f6220b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b468f623e00" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b468f7af7a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468f7af7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b468f7af9e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f7af9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b468f7ab840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f7af9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f7ab5c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b468f7a99d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f7a9750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b468f7ac5f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f7ac370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b468f7a7d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f7af9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f7a7710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b468f7a7a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f7af9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b468f79ce30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f79c810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b468f79cba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b468f7e2020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f79bd70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b468f79c020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b468f79e560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b468f79e2e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b468f805430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f8051b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b468f807720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f8074a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b468f7c1dc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b468f7c1b40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b468f7c12a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b468f7c1020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b468f7bf880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b468f7bf600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b468f8065e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f806360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b468f800630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b468f800020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b468f8003a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b468f7ca0c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f7ccaa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b468f7ccdf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b468f7c76d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f7c70d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b468f7c7440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b468f7caba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b468e19f110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f7ca920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b468f7c8600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f7c8380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b468f7cc2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f7cc020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b468f7c9720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f7c94a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b468f7c30b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f7cdde0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b468f825360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f7e4d40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b468f8250d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b468f8236a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b468f821e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b468f821060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b468f8218a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468f821bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b468f822840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b468f822260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b468f8225b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b468f825df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b468f825b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b468f819de0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f819b20" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b468f819320" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b468ed26ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b468ed23c70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f819020" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b468f816130" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b468ed227c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b468ed20660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b468f818de0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b468f82b070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b468f8280e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b468f8298f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b468f7e3730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b468f82c7e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b468f82b8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b468f829120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b468f82c020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b468f8117f0" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b468f814ce0" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b468f811020" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b468f813c40" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b468f8134a0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b468f81c9f0" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b468f81c770" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b468f814500" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b468f814280" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b468f897020" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b468f8989f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b468f898d40" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b468f899960" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b468f899020" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b468f89b820" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b468f89bc00" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b468f8542a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b468f854020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b468f898270" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b468f89dd70" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b468f89daf0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b468f8533e0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b468f853160" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b468f896270" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b468f89b020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b468f89cc50" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b468f897a20" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b468f853b60" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b468f7df360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b468f7dfac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b468f89d390" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b468f855850" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b468f8549f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b468f89c530" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b468f895c60" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b468f895c60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b468f892560" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b468f8902f0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b468f895c60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b468f892ce0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b468f890060" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b468f895c60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b468f8b2520" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b468ed27090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468f8b22a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b468f8b0030" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b468ed27090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468f8b2d80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b468f884640" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b468f7df360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b468f7dfac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b468f8868b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468f8868b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b468f886af0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b468f87e800" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b468f8817e0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b468f87fe10" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b468f87f840" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b468f87fb80" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b468f87f020" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b468f87d020" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b468f882680" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b468f882400" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468f886af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b468f881020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b468f8bb0e0" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b468f8ba070" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b468f8bb8c0" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b468ed62590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b468f8bc860" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b468ed62590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b468f8bc280" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b468ed62590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b468f8bc5d0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b468ed62970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b468f8ab760" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b468ed27090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b468f8b8840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b468ed27090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b468f8c19b0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b468f8b8250" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b468f8b85a0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b468f8b5020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b468ed27090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b468f8b6150" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b468f8b69c0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b468f8b6d10" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b468f8be7e0" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b468f8be020" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b468f8c0720" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b468f8c3dc0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b468fa6d030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b468fa6c1f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b468fa6d9d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b468fa6d750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b468fa6e7a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b468fa9f020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b468fa9eac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b468faa17c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b468fa9e2a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b468fa9e020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b468faa1020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b468fa9f820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b468fb912b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b468fb91b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b468fb8f390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b468fbc1b60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fbc1580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b468fbc18d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b468fbbcdd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fbbc490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b468fbbc7e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b468fbbcb30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b468fbbd6b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b468ed27090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fbbd0d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b468fbbd420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b468fbc2730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b468ed27090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fbc2150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b468fbc24a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b468fbbf2c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fbc0930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b468fbc0c80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b468fbbf020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b468fbfacf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b468fbfa380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b468fbfa710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468fbfaa50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b468fbf83c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b468fbf66a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b468fbf6a30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468fbf6d70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b468fbf8110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b468fbfec90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b468fbfea10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b468fc72120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b468f09d8d0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b468f09dcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b468fc7ad70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fc7aaf0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b468fc752a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fc75020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b468fc76610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b468fc75d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fc75ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2b468fd439d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2b468fcf7420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2b468fceb620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b468fceb3a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2b468fd00af0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2b468fd47c50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2b468fcf05e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2b468fcf8540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2b468fcf62d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b468fcf9500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2b468fcf9280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2b468fcfca10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2b468fcf3070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2b468fcea550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2b468fd43270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2b468fcedc30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2b468fd3e350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2b468fd3a9d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2b468fcff980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2b468fcf48b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2b468fcf21f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2b468fcf9dc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2b468fd018c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2b468fced460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b468fced1e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2b468fd01190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2b468fd474d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2b468fd42190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2b468fd3db00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2b468fd3a270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2b468fd46b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2b468fd428c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2b468fcebdb0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2b468fd3f390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2b468fcfd0e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2b468fcef7e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2b468fd407b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2b468fd44ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2b468fcf2de0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2b468fcf2b60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2b468fd3b2d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2b468fceea60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2b468fd46420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2b468fd00390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b468f0a28d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b468f0a2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b468fd00110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b468f0a28d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b468f0a2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2b468fcf4190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2b468fcfc2a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b468fcfc020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2b468fcf39d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b468fcf3750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2b468fd3fb60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2b468fcfbb50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2b468fcfd850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2b468fcee2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2b468fcee020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b468e1a0520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2b468fcff270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2b468fd40020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2b468fd44350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2b468fceacc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2b468fcef020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2b468fcf0d30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2b468fcf69f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2b468fcf8c80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2b468fd3ba40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2b468fcfb3c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b468fcfb140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2b468fd3eb10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2b468fcf7b50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2b468fd3d350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b468ff8e620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b468ff8e3a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b468ff7bbc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b468ff7b280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b468ff7b5f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468ff7b920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b468ff7a960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b468ff7a3a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b468ff7a6d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b468ffcb730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b468ffcb730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b468ffcb970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468ffcb970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b468ffc84d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468ffcb970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b468ffc8250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b468ffcb970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b46900bc5e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b46900909e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b4690090020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b4690090750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b46900917f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b4690091020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b4690094d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b46900a52a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b468e1a0160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b46900a5020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b46900a62a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b468e875090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b46900a6020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b46900a22a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b46900a2020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b46900a42a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b46900a4020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b468ed743c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b468ed73a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b469022b910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b469022b910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b4690228270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b468e1a0920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b46903be600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b46903be600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b46903bb2a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b468e884980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b46903be600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b46903bb020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b46903be600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
